{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/object-assign/index.js","webpack:///./src/index.js-exposed","webpack:///(webpack)/buildin/global.js","webpack:///./src/index.js","webpack:///./src/stylesheet.css?f724","webpack:///./src/stylesheet.css","webpack:///./node_modules/style-loader/lib/addStyles.js","webpack:///./node_modules/style-loader/lib/urls.js","webpack:///./src/chars-adapter.js","webpack:///./node_modules/chart.js/dist/Chart.js","webpack:///./src/data/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","getOwnPropertySymbols","propIsEnumerable","propertyIsEnumerable","assign","test1","String","getOwnPropertyNames","test2","fromCharCode","map","join","test3","split","forEach","letter","keys","err","shouldUseNative","target","source","from","symbols","to","val","undefined","TypeError","toObject","arguments","length","global","g","this","Function","eval","e","window","globalSystem","globalCompetition","globalPreset","globalUnits","adapter","data","objectAssign","globalChart","unitsPresets","seconds","label","valuePrecision","leftpad","reverseDrawOrder","formatValue","time","competition","howFaster","current","first","megapixels","size","operations","applyUnits","units","destroy","chartForCompetition","document","getElementById","applyPreset","set","createSelect","select","list","callback","elements","innerHTML","item","element","createElement","href","innerText","title","addEventListener","preventDefault","push","appendChild","createTextNode","className","setTopic","parent","topic","classList","theClass","substr","remove","add","populatePresets","presets","parentNode","style","display","selectItem","preset","populateSystems","systems","info","getElementsByClassName","applySystem","competitions","applyCompetition","default","populateCompetitions","OS","CPU","system_note","topics","getElementsByTagName","contains","getAttribute","setupUnits","competitionName","presetName","competitors","console","error","competitor","idx","indexOf","splice","warn","log","content","options","hmr","transform","insertInto","locals","stylesInDom","isOldIE","fn","memo","apply","memoize","all","atob","getElement","styleTarget","querySelector","HTMLIFrameElement","contentDocument","head","singleton","singletonCounter","stylesInsertedAtTop","fixUrls","addStylesToDom","styles","domStyle","id","refs","j","parts","addStyle","listToStyles","newStyles","base","part","css","media","sourceMap","insertStyleElement","Error","lastStyleElementInsertedAtTop","insertAt","nextSibling","insertBefore","firstChild","before","removeStyleElement","removeChild","createStyleElement","attrs","type","addAttrs","el","setAttribute","obj","update","result","styleIndex","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","Blob","btoa","link","rel","createLinkElement","autoFixUrls","convertToAbsoluteUrls","unescape","encodeURIComponent","JSON","stringify","blob","oldSrc","styleSheet","cssText","newObj","DEBUG","newList","mayRemove","replaceText","textStore","index","replacement","filter","Boolean","cssNode","childNodes","location","baseUrl","protocol","host","currentDir","pathname","replace","fullMatch","origUrl","newUrl","unquotedOrigUrl","trim","$1","test","Chart","defaults","defaultFontColor","myBar","bar","controllers","extend","getRuler","ruler","barWidth","barSpacing","maxForGroup","group","max","groups","chart","datasets","isDatasetVisible","calculateBarY","datasetIndex","me","meta","getMeta","yScale","getScaleForId","yAxisID","Number","getDataset","range","height","paddingTop","paddingBottom","min","pixel","bottom","Math","round","getPixelForValue","Controller","draw","ease","easingDecimal","clear","plugins","notify","helpers","each","boxes","box","chartArea","scale","dataset","getDatasetMeta","controller","_reverseDrawOrder","tooltip","transition","chartData","labels","animation","duration","legend","position","tooltips","titleFontFamily","titleFontSize","titleFontStyle","bodyFontFamily","bodyFontSize","bodySpacing","backgroundColor","titleMarginBottom","xPadding","yPadding","callbacks","tooltipItems","_chartInstance","text","preposition","rightpad","unitsLabel","yLabel","toFixed","scales","yAxes","gridLines","ticks","beginAtZero","xAxes","resultsLen","columns","lastGroup","results","slice","k","color","borderColor","borderWidth","presetArr","hidden","f","define","amd","self","u","a","require","code","1","2","colorNames","getRgba","string","rgb","match","parseInt","parseFloat","getHsla","alpha","isNaN","getHwb","rgbaString","rgba","percentaString","hslaString","hsla","num","hexDouble","str","toString","toUpperCase","getRgb","getHsl","getAlpha","vals","hexString","rgbString","percentString","b","hslString","hwbString","hwb","keyword","reverseNames","6","3","convert","Color","values","hsl","hsv","cmyk","setValues","red","lightness","v","w","whiteness","cyan","setSpace","rgbArray","hslArray","hsvArray","hwbArray","concat","cmykArray","rgbaArray","hslaArray","setChannel","green","blue","hue","saturation","saturationv","blackness","magenta","yellow","black","rgbNumber","luminosity","lum","chan","pow","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","ratio","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","w1","w2","toJSON","clone","prop","spaces","maxes","getValues","space","charAt","capped","chans","sname","args","Array","svalues","5","4","rgb2hsl","h","delta","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","reverseKeywords","rgb2xyz","rgb2lab","xyz","x","y","z","hsl2rgb","t1","t2","t3","hsv2rgb","hi","floor","q","hwb2rgb","wh","bl","cmyk2rgb","xyz2rgb","xyz2lab","lab2xyz","lab","y2","lab2lch","atan2","PI","sqrt","lab2rgb","lch2lab","lch","hr","cos","sin","keyword2rgb","cssKeywords","rgb2lch","hsl2hsv","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2hsl","sl","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2lch","lch2xyz","lch2rgb","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","blanchedalmond","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellowgreen","conversions","Converter","func","arg","pair","exec","convs","routeSpace","fspace","7","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","8","9","Bar","context","config","Bubble","Doughnut","Line","PolarArea","Radar","configMerge","aspectRatio","scatter","hover","tooltipItem","xLabel","line","Scatter","categoryPercentage","barPercentage","offsetGridLines","DatasetController","dataElementType","Rectangle","initialize","getBarCount","barCount","reset","rectangle","updateElement","xScale","xAxisID","scaleBase","getBasePixel","rectangleElementOptions","custom","_xScale","_yScale","_datasetIndex","_index","_model","calculateBarX","datasetLabel","calculateBarBase","width","calculateBarWidth","getValueAtIndexOrDefault","borderSkipped","pivot","stacked","currentDs","currentDsMeta","currentVal","tickWidth","datasetCount","categoryWidth","getPixelForTick","categorySpacing","fullBarWidth","barThickness","getBarIndex","barIndex","leftTick","isCombo","sumPos","sumNeg","ds","dsMeta","stackedVal","setHoverStyle","model","hoverBackgroundColor","getHoverColor","hoverBorderColor","hoverBorderWidth","removeHoverStyle","horizontalBar","calculateBarHeight","ctx","_chart","vm","_view","halfHeight","topY","bottomY","right","halfStroke","beginPath","fillStyle","strokeStyle","lineWidth","corners","startCorner","cornerAt","cornerIndex","moveTo","lineTo","fill","stroke","inRange","mouseX","mouseY","tickHeight","categoryHeight","fullBarHeight","barHeight","topTick","bubble","dataPoint","Point","points","point","pointElementOptions","dsIndex","getPixelForDecimal","NaN","radius","getRadius","hitRadius","skip","hoverRadius","dataVal","doughnut","animateRotate","animateScale","legendCallback","generateLabels","arc","arcOpts","onClick","legendItem","ilen","cutoutPercentage","rotation","circumference","pie","Arc","linkScales","noop","getRingIndex","ringIndex","opts","availableWidth","left","availableHeight","top","minSize","offset","startAngle","endAngle","start","end","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","outerRadius","innerRadius","radiusLength","getVisibleDatasetCount","offsetX","offsetY","total","calculateTotal","animationOpts","centerX","centerY","calculateCircumference","valueAtIndexOrDefault","abs","hoverWidth","lineEnabled","getValueOrDefault","showLine","showLines","spanGaps","datasetElementType","addElementAndReset","tension","updateBezierControlPoints","lineElementOptions","lineTension","_scale","_children","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","steppedLine","stepped","cubicInterpolationMode","scaleTop","scaleBottom","scaleZero","getPointBackgroundColor","pointBackgroundColor","getPointBorderColor","pointBorderColor","getPointBorderWidth","pointBorderWidth","pointOptions","includeOffset","pointRadius","pointHitRadius","calculatePointY","pointStyle","stackedRightValue","getRightValue","rightValue","controlPoints","area","capControlPoint","pt","splineCurveMonotone","splineCurve","previousItem","nextItem","controlPointPreviousX","previous","controlPointPreviousY","controlPointNextX","next","controlPointNextY","capBezierPoints","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","polarArea","lineArc","count","countVisibleElements","xCenter","yCenter","visibleCount","datasetStartAngle","distance","getDistanceFromCenterForValue","resetRadius","radar","_loop","getBasePosition","pointPosition","getPointPositionForValue","easing","onProgress","onComplete","Animation","Element","currentStep","numSteps","render","onAnimationProgress","onAnimationComplete","animationService","frameDuration","animations","dropFrames","request","addAnimation","chartInstance","animationObject","lazy","animating","requestAnimationFrame","cancelAnimation","findIndex","animationWrapper","requestAnimFrame","startDigest","startTime","Date","now","framesToDrop","canvasHelpers","drawPoint","edgeLength","xOffset","yOffset","closePath","SQRT2","fillRect","strokeRect","drawImage","types","instances","instance","uid","responsive","resize","bindEvents","ensureScalesHaveIDs","buildOrUpdateControllers","buildScales","updateLayout","resetElements","initToolTip","stop","silent","canvas","newWidth","getMaximumWidth","newHeight","maintainAspectRatio","isFinite","getMaximumHeight","retinaScale","newSize","onResize","responsiveAnimationDuration","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","items","dtype","isDefault","scaleType","scaleClass","scaleService","getScaleConstructor","addScalesToLayout","layoutService","newControllers","updateIndex","animationDuration","_data","buildOrUpdateElements","updateDatasets","animationOptions","easingFunction","easingEffects","stepDecimal","easeDecimal","getElementAtEvent","eventPosition","getRelativePosition","elementsArray","getElementsAtEvent","found","getElementsAtXAxis","inLabelRange","it","getElementsAtEventForMode","getDatasetAtEvent","_meta","generateLegend","unbindEvents","events","removeResizeListener","originalDevicePixelRatio","originalCanvasStyleWidth","originalCanvasStyleHeight","toBase64Image","toDataURL","Tooltip","_options","evt","eventHandler","updateHoverStyle","enabled","method","hoverOptions","tooltipsOptions","lastActive","lastTooltipActive","active","tooltipActive","onHover","handleEvent","_active","arrayEquals","addElements","scaleID","createMetaDataset","createMetaData","metaData","md","numData","numMetaData","elementOpts","valueOrDefault","inherits","configuration","_start","startVal","tooltipPosition","hasValue","isNumber","loopable","reverse","len","isArray","objClone","setFn","_base","extension","scaleMerge","getScaleDefaults","baseArray","valueObj","axisType","axisDefaults","defaultValue","array","where","collection","filterCallback","filtered","scope","findNextWhere","arrayToSearch","startIndex","currentItem","findPreviousWhere","extensions","ChartElement","constructor","Surrogate","__super__","almostEquals","epsilon","reduce","NEGATIVE_INFINITY","POSITIVE_INFINITY","sign","log10","LN10","toRadians","toDegrees","radians","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","aliasPixel","pixelWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","deltaX","pointsWithTangents","deltaK","mK","pointsLen","loop","niceNum","exponent","fraction","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","parseMaxStyle","styleValue","node","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","view","defaultView","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","cancelAnimFrame","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","clearTimeout","originalEvent","currentTarget","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","paddingLeft","getStyle","paddingRight","currentDevicePixelRatio","addEvent","eventType","attachEvent","removeEvent","handler","removeEventListener","detachEvent","arrayOfEvents","eventName","getConstraintWidth","getConstraintHeight","container","clientWidth","cw","clientHeight","ch","currentStyle","getPropertyValue","pixelRatio","devicePixelRatio","clearRect","fontString","pixelSize","fontStyle","fontFamily","longestText","font","arrayOfThings","cache","gc","garbageCollect","longest","thing","measureText","nestedThing","gcLen","textWidth","numberOfLabelLines","numberOfLines","drawRoundedRectangle","quadraticCurveTo","CanvasGradient","defaultColor","addResizeListener","hiddenIframe","classlist","tabIndex","border","margin","contentWindow","onresize","a0","a1","v0","v1","callCallback","_tArg","colorValue","CanvasPattern","getContext","defaultFontFamily","defaultFontSize","defaultFontStyle","addBox","removeBox","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","sort","fullWidth","chartWidth","chartHeight","chartAreaHeight","verticalBoxWidth","horizontalBoxHeight","maxChartAreaWidth","maxChartAreaHeight","minBoxSizes","isHorizontal","horizontal","totalLeftBoxesWidth","totalRightBoxesWidth","totalTopBoxesHeight","totalBottomBoxesHeight","fitBox","minBoxSize","scaleMargin","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBox","ci","boxWidth","padding","lineCap","lineDash","lineDashOffset","lineJoin","Legend","legendHitBoxes","doughnutMode","beforeUpdate","maxWidth","maxHeight","margins","beforeSetDimensions","setDimensions","afterSetDimensions","beforeBuildLabels","buildLabels","afterBuildLabels","beforeFit","fit","afterFit","afterUpdate","legendItems","labelOpts","globalDefault","itemOrDefault","fontSize","labelFont","hitboxes","lineWidths","totalHeight","textAlign","textBaseline","usePointStyle","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","fontColor","save","isLineWidthZero","setLineDash","offSet","restore","drawLegendBox","fillText","lh","hitBox","register","beforeInit","legendOpts","_plugins","plugin","unregister","getAll","PluginBase","afterInit","beforeDraw","afterDraw","pluginService","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","scaleLabel","labelString","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","Scale","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","numericalTick","userCallback","globalDefaults","optionTicks","tickFontSize","tickFontStyle","tickFontFamily","tickLabelFont","firstRotated","firstWidth","lastWidth","labelRotation","longestTextCache","cosRotation","sinRotation","originalLabelWidth","labelWidth","yLabelWidth","tickOpts","scaleLabelOpts","gridLineOpts","scaleLabelFontSize","isFullWidth","largestTextWidth","tallestLabelHeightInLines","lineSpace","longestLabelWidth","labelHeight","firstLabelWidth","lastLabelWidth","maxLabelWidth","rawValue","getLabelForIndex","getValueForPixel","finalVal","innerHeight","decimal","valueOffset","skipRatio","maxTicks","isRotated","useAutoskipper","maxTicksLimit","tickFontColor","tl","scaleLabelFontColor","scaleLabelFontStyle","scaleLabelFontFamily","scaleLabelFont","labelRotationRadians","longestRotatedLabel","itemsToDraw","xTickStart","xTickEnd","yTickStart","yTickEnd","isLastTick","lineColor","tx1","ty1","tx2","ty2","x1","y1","x2","labelX","labelY","zeroLineIndex","xLineValue","yLineValue","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","translate","scaleLabelX","scaleLabelY","isLeft","constructors","registerScaleType","scaleConstructor","updateScaleDefaults","additions","Title","chartOpts","pos","titleX","titleY","titleFont","titleOpts","titleBlock","pushOrConcat","toPush","createTooltipItem","titleSpacing","titleFontColor","titleAlign","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yAlign","xAlign","caretSize","cornerRadius","multiKeyBackground","beforeTitle","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","tooltipOpts","_bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","_titleFontFamily","_titleFontStyle","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","opacity","legendColorBackground","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","after","getAfterBody","getFooter","changed","labelColors","xPositions","yPositions","getAveragePosition","itemSort","body","caretPadding","tooltipSize","getTooltipSize","determineAlignment","getBackgroundPoint","combinedBodyLength","titleLineCount","footerLineCount","widthPadding","maxLineWidth","lf","rf","olf","orf","yf","midX","midY","paddingAndSize","radiusAndPadding","drawCaret","tooltipPoint","x3","y3","ptX","ptY","bgColor","drawTitle","drawBody","textColor","xLinePadding","fillLineOfText","drawColorBoxes","drawFooter","globalOpts","chartX","chartY","pointRelativePosition","betweenAngles","withinRadius","centreAngle","rangeFromCentre","sA","eA","lineToPoint","previousPoint","pointVM","bezierCurveTo","currentVM","lastDrawnIndex","globalOptionLineElements","halfWidth","leftX","rightX","DatasetScale","getLabels","xLabels","yLabels","minIndex","maxIndex","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","defaultConfig","tickValue","logDelta","tickString","numDecimal","LinearScale","LinearScaleBase","IDMatches","valuesPerType","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","handleTickRangeOptions","getTickLimit","ceil","handleDirectionalChanges","innerDimension","ticksAsNumbers","minSign","maxSign","suggestedMin","suggestedMax","spacing","fixedStepSize","stepSize","niceRange","niceMin","niceMax","numSpaces","arr","remain","toExponential","LogarithmicScale","minNotZero","tickVal","exp","significand","lastTick","tickValues","newVal","LinearRadialScale","getValueCount","drawingArea","backdropPaddingY","pointLabels","halfTextWidth","furthestRightIndex","furthestRightAngle","furthestLeftIndex","furthestLeftAngle","xProtrusionLeft","xProtrusionRight","radiusReductionRight","radiusReductionLeft","pointLabelFontSize","pointLabeFontStyle","pointLabeFontFamily","pointLabeFont","largestPossibleRadius","furthestRight","furthestLeft","getPointPosition","getIndexAngle","setCenterPoint","leftMovement","rightMovement","maxRight","maxLeft","angleMultiplier","startAngleRadians","scalingFactor","distanceFromCenter","thisAngle","angleLineOpts","angleLines","pointLabelOpts","yCenterOffset","yHeight","showLabelBackdrop","backdropColor","backdropPaddingX","outerDistance","outerPosition","pointLabelPosition","pointLabelFontColor","animate","moment","steps","maxStep","TimeScale","getLabelMoment","labelMoments","getLabelDiff","labelDiffs","buildLabelDiffs","getMomentStartOf","tick","unit","isoWeekday","startOf","tickUnit","scaleLabelMoments","labelMoment","parseTime","isValid","firstTick","momentsForDataset","datasetVisible","scaleLabelDiffs","diff","diffsForDataset","roundedStart","unitScale","scaleSizeInUnits","displayFormat","displayFormats","unitStepSize","innerWidth","tempFirstLabel","tickFormatFunction","tickLabelWidth","labelCapacity","minUnit","unitDefinitionIndex","unitDefinition","leadingUnitBuffer","trailingUnitBuffer","roundedEnd","newTick","tooltipFormat","format","formattedTick","tickMoments","asSeconds","parser","getMonth","millisecond","second","minute","hour","day","week","month","quarter","year","competitors_meta","imagemagick-6.8","imagemagick-6.9","opencv-3.1","opencv-3.3","opencv-4.1","skia-53","ipp-2017","vips-8.2","vips-8.5","vips-8.9","pillow-2.0","pillow-2.7","pillow-simd-3.2-sse4","pillow-simd-3.2-avx2","pillow-3.3","pillow-simd-3.3-sse4","pillow-simd-3.3-avx2","pillow-3.4","pillow-simd-3.4-sse4","pillow-simd-3.4-avx2","pillow-4.3","pillow-simd-4.3-sse4","pillow-simd-4.3-avx2","pillow-7.0","pillow-simd-7.0-sse4","pillow-simd-7.0-avx2","competitions_meta","resample-4k-rgb","bil","bic","lzs","image-io-4k-rgb","blur-4k-rgb","filter-4k-rgb","transposition-4k-rgb","conversion-4k-rgb","composition-4k-rgb","3dlut-4k-rgb","full-cycle-4k-rgb","fillSystemWithMeta","system"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","module.exports = global[\"partialCompetition\"] = require(\"-!./index.js\");","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","require(\"./stylesheet.css\");\n\nvar adapter = require(\"./chars-adapter\");\nvar data = require(\"./data/index\");\nvar objectAssign = require('object-assign');\n\n// Global chart instance. Should be destroyed every time.\nvar globalChart = null;\nvar globalSystem;\nvar globalCompetition;\nvar globalPreset;\nvar globalUnits;\n\nvar unitsPresets = {\n  seconds: {\n    label: 's',\n    valuePrecision: 4,\n    leftpad: 7,\n    reverseDrawOrder: false,\n    formatValue: function(time, competition) {\n      return time;\n    },\n    howFaster: function(current, first) {\n      return first / current;\n    }\n  },\n  megapixels: {\n    label: 'MP/s',\n    valuePrecision: 2,\n    leftpad: 7,\n    reverseDrawOrder: false,\n    formatValue: function(time, competition) {\n      var size = competition.source.size;\n      if (time)\n        return size[0] * size[1] / time / 1e6;\n    },\n    howFaster: function(current, first) {\n      return current / first;\n    }\n  },\n  operations: {\n    label: 'op/s',\n    valuePrecision: 2,\n    leftpad: 7,\n    reverseDrawOrder: false,\n    formatValue: function(time, competition) {\n      if (time)\n        return 1.0 / time;\n    },\n    howFaster: function(current, first) {\n      return current / first;\n    }\n  },\n}\n\n\nfunction partialCompetition(element, competitionName, presetName, units) {\n  var competitions = data.systems[0].competitions;\n  var competitors = [];\n  var i, competition, preset;\n\n  if ( ! units) {\n    units = 'seconds'\n  }\n\n  for (i = 0; i < competitions.length; i++) {\n    if (competitions[i].name == competitionName) {\n      competition = objectAssign({}, competitions[i]);\n      break;\n    }\n  }\n  if ( ! competition) {\n    console.log('Competition ' + competitionName + ' is not found.');\n    return;\n  }\n\n  if (presetName) {\n    if (typeof presetName === \"string\") {\n      for (i = 0; i < competition.presets.length; i++) {\n        if (competition.presets[i].name == presetName) {\n          preset = competition.presets[i].set;\n          break\n        }\n      }\n      if ( ! preset) {\n        console.error('Preset ' + presetName + ' is not found.');\n        return;\n      }\n    } else {\n      preset = presetName;\n    }\n\n    for (i = 0; i < competition.competitors.length; i++) {\n      var competitor = competition.competitors[i];\n      var idx = preset.indexOf(competitor.name);\n      if (idx > -1) {\n        competitors.push(competitor);\n        preset.splice(idx, 1);\n      }\n    }\n    if (preset.length) {\n      console.warn(\"Following competitors are not found:\", preset)\n    }\n\n    competition.competitors = competitors;\n  }\n\n  return adapter.chartForCompetition(\n    element,\n    competition,\n    unitsPresets[units]\n  );\n}\n\n\nfunction applyUnits(units) {\n  globalUnits = units;\n\n  if (globalChart) {\n    globalChart.destroy();\n  }\n\n  globalChart = adapter.chartForCompetition(\n    document.getElementById(\"chart-container\"),\n    globalCompetition,\n    unitsPresets[globalUnits]\n  );\n\n  if (globalPreset) {\n    adapter.applyPreset(globalChart, globalPreset.set);\n  }\n}\n\n\nfunction createSelect(select, list, callback) {\n  var elements = [];\n  select.innerHTML = '';\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var element = document.createElement('a');\n    element.href = '#';\n    element.innerText = item.title;\n    element.addEventListener('click', function(e) {\n      e.preventDefault();\n    });\n    elements.push(element);\n    select.appendChild(document.createElement('li')).appendChild(element);\n    select.appendChild(document.createTextNode(\" \"));\n    callback(i, element, item);\n  }\n\n  function selectItem(n) {\n    for (var i = 0; i < elements.length; i++) {\n      var element = elements[i];\n      element.className = (n == i) ? 'selected' : '';\n    }\n  }\n\n  return selectItem;\n}\n\n\nfunction setTopic(parent, topic) {\n  for (var i = 0; i < parent.classList.length; i++) {\n    var theClass = parent.classList[i];\n    if (theClass.substr(0, 'topic__'.length) == 'topic__') {\n      parent.classList.remove(theClass);\n    }\n  }\n  if (topic) {\n    parent.classList.add('topic__' + topic);\n  }\n}\n\n\nfunction populatePresets(presets) {\n  var select = document.getElementById(\"select-preset\");\n  var parent = select.parentNode;\n\n  parent.style.display = presets.length ? 'block' : 'none';\n\n  var selectItem = createSelect(select, presets, function(i, element) {\n    element.addEventListener('click', applyPreset.bind(null, i));\n  });\n\n  function applyPreset(n) {\n    var preset = presets[n];\n    globalPreset = preset;\n    selectItem(n);\n    setTopic(parent, preset.topic);\n    adapter.applyPreset(globalChart, preset.set);\n  }\n  return applyPreset;\n}\n\n\nfunction populateCompetitions(competitions) {\n  var select = document.getElementById(\"select-competition\");\n  var parent = select.parentNode;\n  var info = parent.getElementsByClassName('info')[0];\n  \n  var selectItem = createSelect(select, competitions, function(i, element) {\n    element.addEventListener('click', applyCompetition.bind(null, i));\n  });\n\n  function applyCompetition(n) {\n    var competition = competitions[n];\n    globalCompetition = competition;\n\n    if (globalChart) {\n      globalChart.destroy();\n    }\n\n    globalChart = adapter.chartForCompetition(\n      document.getElementById(\"chart-container\"),\n      competition,\n      unitsPresets[globalUnits]\n    );\n\n    var innerHTML = \"\";\n    if (competition.topic) {\n      innerHTML = '<a class=\"pseudo\" href=\"#' +\n        competition.topic + '\">More info about operation</a>';\n    }\n    info.innerHTML = innerHTML;\n\n    selectItem(n);\n\n    setTopic(parent, competition.topic);\n\n    if (competition.presets) {\n      var applyPreset = populatePresets(competition.presets);\n\n      for (var i = 0; i < competition.presets.length; i++) {\n        if (competition.presets[i].default) {\n          applyPreset(i);\n          break;\n        }\n      }\n    } else {\n      populatePresets([]);\n      globalPreset = null;\n    }\n  }\n  return applyCompetition;\n}\n\n\nfunction populateSystems(systems) {\n  var select = document.getElementById(\"select-system\");\n  var parent = select.parentNode;\n  var info = parent.getElementsByClassName('info')[0];\n  \n  var selectItem = createSelect(select, systems, function(i, element) {\n    element.addEventListener('click', applySystem.bind(null, i));\n  });\n\n  function applySystem(n) {\n    globalSystem = systems[n];\n    var applyCompetition = populateCompetitions(globalSystem.competitions);\n    applyCompetition(0);\n    \n    selectItem(n);\n\n    var innerHTML = \"\";\n    if (globalSystem.OS) {\n      innerHTML += \"<strong>OS</strong> \" + globalSystem.OS + \"<br>\";\n    }\n    if (globalSystem.CPU) {\n      innerHTML += \"<strong>CPU</strong> \" + globalSystem.CPU + \"<br>\";\n    }\n    if (globalSystem.system_note) {\n      innerHTML += \"<br>\" + globalSystem.system_note + \"<br>\";\n    }\n    info.innerHTML = innerHTML;\n  }\n\n  return applySystem;\n}\n\n\nfunction setupUnits() {\n  var topics = document.getElementById('switch-units').getElementsByTagName(\"a\");\n\n  for (var i = 0; i < topics.length; i++) {\n    if (topics[i].classList.contains('selected')) {\n      globalUnits = topics[i].getAttribute('data-unit');\n    }\n\n    topics[i].addEventListener('click', function(e) {\n      for (var i = 0; i < topics.length; i++) {\n        topics[i].classList.remove('selected');\n      }\n      this.classList.add('selected');\n      applyUnits(this.getAttribute('data-unit'));\n\n      e.preventDefault();\n    });\n  }\n}\n\n\ndocument.addEventListener(\"DOMContentLoaded\", function(){\n\n  var applySystem = populateSystems(data.systems);\n  setupUnits();\n  applySystem(0);\n  \n});\n\nmodule.exports = partialCompetition;\n","\nvar content = require(\"!!../node_modules/postcss-loader/lib/index.js??ref--4-1!./stylesheet.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../node_modules/postcss-loader/lib/index.js??ref--4-1!./stylesheet.css\", function() {\n\t\tvar newContent = require(\"!!../node_modules/postcss-loader/lib/index.js??ref--4-1!./stylesheet.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","module.exports = \"html {\\n    padding: 0;\\n    margin: 0;\\n    font-family: 'Helvetica Neue', 'Helvetica', 'Arial', sans-serif;\\n    font-size: 14px;\\n    line-height: 1.5;\\n}\\nbody {\\n    min-width: 690px;\\n    max-width: 1100px;\\n    padding: 2%;\\n    margin: 0 auto;\\n}\\n\\nh1, h2, h3, h4 {\\n    font-family: 'Roboto Condensed', 'Helvetica Neue', 'Helvetica', 'Arial', sans-serif;\\n    font-weight: 700;\\n    margin-bottom: 0;\\n}\\nh1 {\\n    font-size: 2.5em;\\n}\\nh2 {\\n    font-size: 2em;\\n}\\nh3 {\\n    font-size: 1.3em;\\n}\\nh4 {\\n    color: #aaa;\\n    margin-bottom: 0;\\n    font-size: 1.1em;\\n}\\na {\\n    color: #000095;\\n}\\na.pseudo {\\n    text-decoration: none;\\n    border-bottom: 1px dashed;\\n}\\na.pseudo.selected {\\n    text-decoration: none;\\n    border-bottom: none;\\n    color: inherit;\\n    font-weight: bold;\\n}\\nul, p {\\n    margin-bottom: 0;\\n}\\n\\ncode {\\n    padding: 0 3px;\\n    font-family: 'Inconsolata', monospace;\\n    border-radius: 2px;\\n    border: 1px solid #ececec;\\n    background: #f8f8f8;\\n}\\n\\nul.select {\\n    padding: 0;\\n    margin: 0;\\n    list-style-type: none;\\n}\\n    ul.select > li {}\\n        ul.select > li> a {\\n            text-decoration: none;\\n        }\\n        ul.select > li> a.selected {\\n            color: inherit;\\n            text-decoration: none;\\n            font-weight: bold;\\n            border-bottom: 0px;\\n            cursor: default;\\n        }\\nul.select.-large {\\n    font-size: 16px;\\n}\\n\\n.selects-grid {\\n    display: flex;\\n    margin-top: 40px;\\n}\\n    .selects-grid__cell {\\n        position: relative;\\n        margin-right: 6%;\\n        margin-bottom: 4%;\\n    }\\n    .selects-grid__cell:last-child {\\n        margin-right: 0;\\n    }\\n        .selects-grid__cell::before {\\n            content: \\\"\\\";\\n            display: block;\\n            position: absolute;\\n            left: -14px;\\n            right: -14px;\\n            top: -14px;\\n            bottom: -14px;\\n            background: #f8f8f8;\\n            z-index: -1;\\n        }\\n        .selects-grid__cell::after {\\n            content: \\\"\\\";\\n            display: block;\\n            width: 100px;\\n            height: 100px;\\n            background: #f8f8f8;\\n            position: absolute;\\n            top: 50%;\\n            left: -141px;\\n            z-index: -2;\\n            margin-top: -50px;\\n            -webkit-transform: rotate(45deg);\\n            transform: rotate(45deg);\\n            box-shadow: 0px 3px 8px #ccc;\\n        }\\n        .selects-grid__cell:first-child::after {\\n            content: none;\\n        }\\n        .selects-grid__cell > :first-child {\\n            margin-top: 0;\\n        }\\n    .selects-grid__system {\\n        min-width: 24%;\\n    }\\n    .selects-grid__competition {\\n        min-width: 30%;\\n    }\\n    .selects-grid__chartset {\\n        min-width: 20%;\\n    }\\n\\n#switch-units {\\n    text-align: right;\\n    position: relative;\\n    top: -1em;\\n}\\n\\n#select-preset {\\n    float: left;\\n    margin-right: 20px;\\n}\\n\\nsection {\\n    margin-top: 50px;\\n}\\n    section p {\\n        max-width: 690px;\\n    }\\n.chart {\\n    margin-top: 40px;\\n    max-width: 860px;\\n}\\n\\n.samples {\\n    display: flex;\\n    flex-wrap: wrap;\\n}\\n    .samples figure {\\n        margin: 1em 30px 0 0;\\n    }\\n    .samples figure:last-child {\\n        margin-right: 0;\\n    }\\n    .samples figcaption {\\n        font-family: 'Roboto Condensed', 'Helvetica Neue', 'Helvetica', 'Arial', sans-serif;\\n        font-weight: 700;\\n        color: #666;\\n        margin: 0;\\n    }\\n\\ndl.libraries {\\n    max-width: 690px;\\n}\\n    dl.libraries dt {\\n        float: left;\\n        margin-right: 10px;\\n\\n        font-family: 'Roboto Condensed', 'Helvetica Neue', 'Helvetica', 'Arial', sans-serif;\\n        font-weight: 700;\\n        color: #333;\\n        font-size: 16px;\\n    }\\n    dl.libraries dd {\\n        margin: 0 0 12px 120px;\\n    }\\n    dl.libraries dd:after {\\n        content: \\\"\\\";\\n        display: block;\\n        clear: left;\\n    }\\n\"","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target) {\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertInto + \" \" + options.insertAt.before);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","var Chart = require(\"chart.js/dist/Chart.js\");\n\nChart.defaults.global.defaultFontColor = 'black';\nChart.defaults.myBar = Chart.defaults.bar;\nChart.controllers.myBar = Chart.controllers.bar.extend({\n    // Increase bars width\n    getRuler: function(index) {\n        var ruler = Chart.controllers.bar.prototype.getRuler.call(this, index);\n        ruler.barWidth += 10;\n        ruler.barSpacing -= 10;\n        return ruler;\n    },\n    maxForGroup: function(group) {\n        var max = null;\n        var groups = this.chart.data.groups;\n        var datasets = this.chart.data.datasets;\n        for (var j = 0; j < groups.length; j++) {\n            if (group != groups[j]) {\n                continue;\n            }\n            for (var i = 0; i < datasets.length; i++) {\n                var value = datasets[i].data[j];\n\n                if ( ! this.chart.isDatasetVisible(i) || ! value) {\n                    continue;\n                }\n                if (max === null || value > max) {\n                    max = value;\n                }\n            }\n        }\n        return max;\n    },\n    calculateBarY: function(index, datasetIndex) {\n        var me = this;\n        var meta = me.getMeta();\n        var yScale = me.getScaleForId(meta.yAxisID);\n        var value = Number(me.getDataset().data[index]);\n\n        if (me.chart.data.groups && me.chart.data.groups.length) {\n            var group = me.chart.data.groups[index];\n            var max = me.maxForGroup(group);\n\n            me = yScale;\n            var innerDimension = me.height - (me.paddingTop + me.paddingBottom);\n            var range = innerDimension / (max - me.min);\n            var pixel = (me.bottom - me.paddingBottom) - (range * (value - me.min));\n            return Math.round(pixel);\n        }\n\n        return yScale.getPixelForValue(value);\n    }\n});\n\nChart.Controller.prototype.draw = function(ease) {\n    var me = this;\n    var easingDecimal = ease || 1;\n    me.clear();\n\n    Chart.plugins.notify('beforeDraw', [me, easingDecimal]);\n\n    // Draw all the scales\n    Chart.helpers.each(me.boxes, function(box) {\n        box.draw(me.chartArea);\n    }, me);\n    if (me.scale) {\n        me.scale.draw();\n    }\n\n    Chart.plugins.notify('beforeDatasetsDraw', [me, easingDecimal]);\n\n    // Draw each dataset via its respective controller (reversed to support proper line stacking)\n    Chart.helpers.each(me.data.datasets, function(dataset, datasetIndex) {\n        if (me.isDatasetVisible(datasetIndex)) {\n            me.getDatasetMeta(datasetIndex).controller.draw(ease);\n        }\n    }, me, this.options._reverseDrawOrder);\n\n    Chart.plugins.notify('afterDatasetsDraw', [me, easingDecimal]);\n\n    // Finally draw the tooltip\n    me.tooltip.transition(easingDecimal).draw();\n\n    Chart.plugins.notify('afterDraw', [me, easingDecimal]);\n};\n\n\nfunction rightpad(s, size) {\n    while (s.length < size)\n        s += ' ';\n    return s;\n}\nfunction leftpad(s, size) {\n    while (s.length < size)\n        s = ' ' + s;\n    return s;\n}\n\n\nfunction chartForCompetition(element, competition, units) {\n  var chartData = {\n    type: 'myBar',\n    data: {\n      groups: [],\n      labels: [],\n      datasets: [],\n    },\n    options: {\n      _reverseDrawOrder: units.reverseDrawOrder,\n      title: {},\n      // maintainAspectRatio: false, \n      // responsive: false,\n      animation: {\n        duration: 0,\n      },\n      legend: {\n        display: false,\n        position: 'left',\n      },\n      tooltips: {\n        units: units.label,\n        mode: \"label\",\n        titleFontFamily: \"'Roboto Condensed', 'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n        titleFontSize: 14,\n        titleFontStyle: 'bold',\n        bodyFontFamily: \"'Inconsolata', monospace\",\n        bodyFontSize: 14,\n        bodySpacing: 4,\n        backgroundColor: 'rgba(0,0,0,0.9)',\n        titleMarginBottom: 10,\n        xPadding: 10,\n        yPadding: 10,\n        callbacks: {\n          title: function(tooltipItems, data) {\n            var chart = this._chartInstance.options.title.text;\n            var title = Chart.defaults.global.tooltips.callbacks.title(tooltipItems, data);\n            if (competition.preposition) {\n              chart += competition.preposition;\n            }\n            return chart + \" \" + title;\n          },\n          label: function(item, data) {\n            var chart = this._chartInstance;\n            var first;\n            for (var i = 0; i < data.datasets.length; i++) {\n              if ( ! chart.isDatasetVisible(i)) {\n                continue;\n              }\n              first = data.datasets[i].data[item.index];\n              if (first === null) {\n                continue;\n              }\n              break;\n            }\n            \n            var l = data.datasets[item.datasetIndex].label || '';\n            var label = \" \" + rightpad(l, 28);\n            var unitsLabel = chart.options.tooltips.units;\n            var value = item.yLabel.toFixed(units.valuePrecision);\n            var howFaster = units.howFaster(item.yLabel, first);\n            if (item.yLabel) {\n              label += leftpad('' + value, units.leftpad) + ' ' + unitsLabel;\n              if (item.yLabel != first) {\n                label += '  ' + howFaster.toFixed(2) + 'x faster';\n              }\n            }\n            return label;\n          }\n        }\n      },\n      scales: {\n        yAxes: [{\n          display: false,\n          gridLines: {display: false},\n          ticks: {beginAtZero: true},\n        }],\n        xAxes: [{\n          gridLines: {display: false},\n        }],\n      }\n    }\n  };\n\n  chartData.options.title.text = competition.title;\n\n  var resultsLen = competition.columns.length;\n\n  if (competition.competitors.length) {\n    var competitor = competition.competitors[0];\n    var lastGroup = null;\n\n    for (var j = 0; j < competitor.results.length; j++) {\n      var result = competitor.results[j];\n      var group = result.slice(0, -2).join(\"/\");\n\n      if (result.length != resultsLen) {\n        throw new Error(\"results length for \" +\n                        competitor.title + \" doesn't match required. \" +\n                        \"Got \" + result.length + \", expected \" + resultsLen);\n      }\n\n      var label = [];\n      for (var k = 0; k < result.length - 1; k++) {\n        if (competition.columns[k]['map']) {\n          label.push(competition.columns[k]['map'][result[k]])\n        } else {\n          label.push(result[k])\n        }\n      }\n\n      if (lastGroup && group != lastGroup) {\n        chartData.data.labels.push(\"\");\n        if (group) {\n          chartData.data.groups.push(\"\");\n        }\n      }\n      lastGroup = group;\n\n      chartData.data.labels.push(label.join(\" \"));\n      if (group) {\n        chartData.data.groups.push(group);\n      }\n    }\n  }\n\n  for (var i = 0; i < competition.competitors.length; i++) {\n    var competitor = competition.competitors[i];\n    var color = competitor.color;\n    var data = [];\n    var lastGroup = null;\n\n    if (typeof color != \"string\") {\n      color = \"hsla(\"+color[0]+\",\"+color[1]+\"%,\"+color[2]+\"%,1.0)\";\n    }\n\n    chartData.data.datasets.push({\n      label: competitor.title,\n      name: competitor.name,\n      data: data,\n      backgroundColor: color,\n      borderColor: \"rgba(255, 255, 255, .5)\",\n      borderWidth: 1,\n    });\n\n    for (var j = 0; j < competitor.results.length; j++) {\n      var result = competitor.results[j];\n      var group = result.slice(0, -2).join(\"/\");\n\n      if (lastGroup && group != lastGroup) {\n        data.push(null);\n      }\n      lastGroup = group;\n\n      data.push(units.formatValue(result[result.length - 1], competition));\n    }\n  }\n\n  return new Chart(element, chartData);\n}\n\n\nfunction applyPreset(chart, presetArr) {\n  var preset = {};\n  for (var i = 0; i < presetArr.length; i++) {\n    preset[presetArr[i]] = true;\n  }\n\n  for (var i = 0; i < chart.data.datasets.length; i++) {\n    var meta = chart.getDatasetMeta(i);\n    var dataset = chart.data.datasets[i];\n\n    meta.hidden = ! preset[dataset.name];\n  }\n\n  chart.update();\n}\n\n\nmodule.exports = {\n  Chart: Chart,\n  chartForCompetition: chartForCompetition,\n  applyPreset: applyPreset,\n};\n","/*!\n * Chart.js\n * http://chartjs.org/\n * Version: 2.3.0\n *\n * Copyright 2016 Nick Downie\n * Released under the MIT license\n * https://github.com/chartjs/Chart.js/blob/master/LICENSE.md\n */\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Chart = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\n},{}],2:[function(require,module,exports){\n/* MIT license */\r\nvar colorNames = require(6);\r\n\r\nmodule.exports = {\r\n   getRgba: getRgba,\r\n   getHsla: getHsla,\r\n   getRgb: getRgb,\r\n   getHsl: getHsl,\r\n   getHwb: getHwb,\r\n   getAlpha: getAlpha,\r\n\r\n   hexString: hexString,\r\n   rgbString: rgbString,\r\n   rgbaString: rgbaString,\r\n   percentString: percentString,\r\n   percentaString: percentaString,\r\n   hslString: hslString,\r\n   hslaString: hslaString,\r\n   hwbString: hwbString,\r\n   keyword: keyword\r\n}\r\n\r\nfunction getRgba(string) {\r\n   if (!string) {\r\n      return;\r\n   }\r\n   var abbr =  /^#([a-fA-F0-9]{3})$/,\r\n       hex =  /^#([a-fA-F0-9]{6})$/,\r\n       rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/,\r\n       per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/,\r\n       keyword = /(\\w+)/;\r\n\r\n   var rgb = [0, 0, 0],\r\n       a = 1,\r\n       match = string.match(abbr);\r\n   if (match) {\r\n      match = match[1];\r\n      for (var i = 0; i < rgb.length; i++) {\r\n         rgb[i] = parseInt(match[i] + match[i], 16);\r\n      }\r\n   }\r\n   else if (match = string.match(hex)) {\r\n      match = match[1];\r\n      for (var i = 0; i < rgb.length; i++) {\r\n         rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\r\n      }\r\n   }\r\n   else if (match = string.match(rgba)) {\r\n      for (var i = 0; i < rgb.length; i++) {\r\n         rgb[i] = parseInt(match[i + 1]);\r\n      }\r\n      a = parseFloat(match[4]);\r\n   }\r\n   else if (match = string.match(per)) {\r\n      for (var i = 0; i < rgb.length; i++) {\r\n         rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\r\n      }\r\n      a = parseFloat(match[4]);\r\n   }\r\n   else if (match = string.match(keyword)) {\r\n      if (match[1] == \"transparent\") {\r\n         return [0, 0, 0, 0];\r\n      }\r\n      rgb = colorNames[match[1]];\r\n      if (!rgb) {\r\n         return;\r\n      }\r\n   }\r\n\r\n   for (var i = 0; i < rgb.length; i++) {\r\n      rgb[i] = scale(rgb[i], 0, 255);\r\n   }\r\n   if (!a && a != 0) {\r\n      a = 1;\r\n   }\r\n   else {\r\n      a = scale(a, 0, 1);\r\n   }\r\n   rgb[3] = a;\r\n   return rgb;\r\n}\r\n\r\nfunction getHsla(string) {\r\n   if (!string) {\r\n      return;\r\n   }\r\n   var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\r\n   var match = string.match(hsl);\r\n   if (match) {\r\n      var alpha = parseFloat(match[4]);\r\n      var h = scale(parseInt(match[1]), 0, 360),\r\n          s = scale(parseFloat(match[2]), 0, 100),\r\n          l = scale(parseFloat(match[3]), 0, 100),\r\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\r\n      return [h, s, l, a];\r\n   }\r\n}\r\n\r\nfunction getHwb(string) {\r\n   if (!string) {\r\n      return;\r\n   }\r\n   var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\r\n   var match = string.match(hwb);\r\n   if (match) {\r\n    var alpha = parseFloat(match[4]);\r\n      var h = scale(parseInt(match[1]), 0, 360),\r\n          w = scale(parseFloat(match[2]), 0, 100),\r\n          b = scale(parseFloat(match[3]), 0, 100),\r\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\r\n      return [h, w, b, a];\r\n   }\r\n}\r\n\r\nfunction getRgb(string) {\r\n   var rgba = getRgba(string);\r\n   return rgba && rgba.slice(0, 3);\r\n}\r\n\r\nfunction getHsl(string) {\r\n  var hsla = getHsla(string);\r\n  return hsla && hsla.slice(0, 3);\r\n}\r\n\r\nfunction getAlpha(string) {\r\n   var vals = getRgba(string);\r\n   if (vals) {\r\n      return vals[3];\r\n   }\r\n   else if (vals = getHsla(string)) {\r\n      return vals[3];\r\n   }\r\n   else if (vals = getHwb(string)) {\r\n      return vals[3];\r\n   }\r\n}\r\n\r\n// generators\r\nfunction hexString(rgb) {\r\n   return \"#\" + hexDouble(rgb[0]) + hexDouble(rgb[1])\r\n              + hexDouble(rgb[2]);\r\n}\r\n\r\nfunction rgbString(rgba, alpha) {\r\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\r\n      return rgbaString(rgba, alpha);\r\n   }\r\n   return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\r\n}\r\n\r\nfunction rgbaString(rgba, alpha) {\r\n   if (alpha === undefined) {\r\n      alpha = (rgba[3] !== undefined ? rgba[3] : 1);\r\n   }\r\n   return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2]\r\n           + \", \" + alpha + \")\";\r\n}\r\n\r\nfunction percentString(rgba, alpha) {\r\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\r\n      return percentaString(rgba, alpha);\r\n   }\r\n   var r = Math.round(rgba[0]/255 * 100),\r\n       g = Math.round(rgba[1]/255 * 100),\r\n       b = Math.round(rgba[2]/255 * 100);\r\n\r\n   return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\r\n}\r\n\r\nfunction percentaString(rgba, alpha) {\r\n   var r = Math.round(rgba[0]/255 * 100),\r\n       g = Math.round(rgba[1]/255 * 100),\r\n       b = Math.round(rgba[2]/255 * 100);\r\n   return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\r\n}\r\n\r\nfunction hslString(hsla, alpha) {\r\n   if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {\r\n      return hslaString(hsla, alpha);\r\n   }\r\n   return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\r\n}\r\n\r\nfunction hslaString(hsla, alpha) {\r\n   if (alpha === undefined) {\r\n      alpha = (hsla[3] !== undefined ? hsla[3] : 1);\r\n   }\r\n   return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \"\r\n           + alpha + \")\";\r\n}\r\n\r\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\r\n// (hwb have alpha optional & 1 is default value)\r\nfunction hwbString(hwb, alpha) {\r\n   if (alpha === undefined) {\r\n      alpha = (hwb[3] !== undefined ? hwb[3] : 1);\r\n   }\r\n   return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\"\r\n           + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\r\n}\r\n\r\nfunction keyword(rgb) {\r\n  return reverseNames[rgb.slice(0, 3)];\r\n}\r\n\r\n// helpers\r\nfunction scale(num, min, max) {\r\n   return Math.min(Math.max(min, num), max);\r\n}\r\n\r\nfunction hexDouble(num) {\r\n  var str = num.toString(16).toUpperCase();\r\n  return (str.length < 2) ? \"0\" + str : str;\r\n}\r\n\r\n\r\n//create a list of reverse color names\r\nvar reverseNames = {};\r\nfor (var name in colorNames) {\r\n   reverseNames[colorNames[name]] = name;\r\n}\r\n\n},{\"6\":6}],3:[function(require,module,exports){\n/* MIT license */\r\nvar convert = require(5);\r\nvar string = require(2);\r\n\r\nvar Color = function (obj) {\r\n\tif (obj instanceof Color) {\r\n\t\treturn obj;\r\n\t}\r\n\tif (!(this instanceof Color)) {\r\n\t\treturn new Color(obj);\r\n\t}\r\n\r\n\tthis.values = {\r\n\t\trgb: [0, 0, 0],\r\n\t\thsl: [0, 0, 0],\r\n\t\thsv: [0, 0, 0],\r\n\t\thwb: [0, 0, 0],\r\n\t\tcmyk: [0, 0, 0, 0],\r\n\t\talpha: 1\r\n\t};\r\n\r\n\t// parse Color() argument\r\n\tvar vals;\r\n\tif (typeof obj === 'string') {\r\n\t\tvals = string.getRgba(obj);\r\n\t\tif (vals) {\r\n\t\t\tthis.setValues('rgb', vals);\r\n\t\t} else if (vals = string.getHsla(obj)) {\r\n\t\t\tthis.setValues('hsl', vals);\r\n\t\t} else if (vals = string.getHwb(obj)) {\r\n\t\t\tthis.setValues('hwb', vals);\r\n\t\t} else {\r\n\t\t\tthrow new Error('Unable to parse color from string \"' + obj + '\"');\r\n\t\t}\r\n\t} else if (typeof obj === 'object') {\r\n\t\tvals = obj;\r\n\t\tif (vals.r !== undefined || vals.red !== undefined) {\r\n\t\t\tthis.setValues('rgb', vals);\r\n\t\t} else if (vals.l !== undefined || vals.lightness !== undefined) {\r\n\t\t\tthis.setValues('hsl', vals);\r\n\t\t} else if (vals.v !== undefined || vals.value !== undefined) {\r\n\t\t\tthis.setValues('hsv', vals);\r\n\t\t} else if (vals.w !== undefined || vals.whiteness !== undefined) {\r\n\t\t\tthis.setValues('hwb', vals);\r\n\t\t} else if (vals.c !== undefined || vals.cyan !== undefined) {\r\n\t\t\tthis.setValues('cmyk', vals);\r\n\t\t} else {\r\n\t\t\tthrow new Error('Unable to parse color from object ' + JSON.stringify(obj));\r\n\t\t}\r\n\t}\r\n};\r\n\r\nColor.prototype = {\r\n\trgb: function () {\r\n\t\treturn this.setSpace('rgb', arguments);\r\n\t},\r\n\thsl: function () {\r\n\t\treturn this.setSpace('hsl', arguments);\r\n\t},\r\n\thsv: function () {\r\n\t\treturn this.setSpace('hsv', arguments);\r\n\t},\r\n\thwb: function () {\r\n\t\treturn this.setSpace('hwb', arguments);\r\n\t},\r\n\tcmyk: function () {\r\n\t\treturn this.setSpace('cmyk', arguments);\r\n\t},\r\n\r\n\trgbArray: function () {\r\n\t\treturn this.values.rgb;\r\n\t},\r\n\thslArray: function () {\r\n\t\treturn this.values.hsl;\r\n\t},\r\n\thsvArray: function () {\r\n\t\treturn this.values.hsv;\r\n\t},\r\n\thwbArray: function () {\r\n\t\tvar values = this.values;\r\n\t\tif (values.alpha !== 1) {\r\n\t\t\treturn values.hwb.concat([values.alpha]);\r\n\t\t}\r\n\t\treturn values.hwb;\r\n\t},\r\n\tcmykArray: function () {\r\n\t\treturn this.values.cmyk;\r\n\t},\r\n\trgbaArray: function () {\r\n\t\tvar values = this.values;\r\n\t\treturn values.rgb.concat([values.alpha]);\r\n\t},\r\n\thslaArray: function () {\r\n\t\tvar values = this.values;\r\n\t\treturn values.hsl.concat([values.alpha]);\r\n\t},\r\n\talpha: function (val) {\r\n\t\tif (val === undefined) {\r\n\t\t\treturn this.values.alpha;\r\n\t\t}\r\n\t\tthis.setValues('alpha', val);\r\n\t\treturn this;\r\n\t},\r\n\r\n\tred: function (val) {\r\n\t\treturn this.setChannel('rgb', 0, val);\r\n\t},\r\n\tgreen: function (val) {\r\n\t\treturn this.setChannel('rgb', 1, val);\r\n\t},\r\n\tblue: function (val) {\r\n\t\treturn this.setChannel('rgb', 2, val);\r\n\t},\r\n\thue: function (val) {\r\n\t\tif (val) {\r\n\t\t\tval %= 360;\r\n\t\t\tval = val < 0 ? 360 + val : val;\r\n\t\t}\r\n\t\treturn this.setChannel('hsl', 0, val);\r\n\t},\r\n\tsaturation: function (val) {\r\n\t\treturn this.setChannel('hsl', 1, val);\r\n\t},\r\n\tlightness: function (val) {\r\n\t\treturn this.setChannel('hsl', 2, val);\r\n\t},\r\n\tsaturationv: function (val) {\r\n\t\treturn this.setChannel('hsv', 1, val);\r\n\t},\r\n\twhiteness: function (val) {\r\n\t\treturn this.setChannel('hwb', 1, val);\r\n\t},\r\n\tblackness: function (val) {\r\n\t\treturn this.setChannel('hwb', 2, val);\r\n\t},\r\n\tvalue: function (val) {\r\n\t\treturn this.setChannel('hsv', 2, val);\r\n\t},\r\n\tcyan: function (val) {\r\n\t\treturn this.setChannel('cmyk', 0, val);\r\n\t},\r\n\tmagenta: function (val) {\r\n\t\treturn this.setChannel('cmyk', 1, val);\r\n\t},\r\n\tyellow: function (val) {\r\n\t\treturn this.setChannel('cmyk', 2, val);\r\n\t},\r\n\tblack: function (val) {\r\n\t\treturn this.setChannel('cmyk', 3, val);\r\n\t},\r\n\r\n\thexString: function () {\r\n\t\treturn string.hexString(this.values.rgb);\r\n\t},\r\n\trgbString: function () {\r\n\t\treturn string.rgbString(this.values.rgb, this.values.alpha);\r\n\t},\r\n\trgbaString: function () {\r\n\t\treturn string.rgbaString(this.values.rgb, this.values.alpha);\r\n\t},\r\n\tpercentString: function () {\r\n\t\treturn string.percentString(this.values.rgb, this.values.alpha);\r\n\t},\r\n\thslString: function () {\r\n\t\treturn string.hslString(this.values.hsl, this.values.alpha);\r\n\t},\r\n\thslaString: function () {\r\n\t\treturn string.hslaString(this.values.hsl, this.values.alpha);\r\n\t},\r\n\thwbString: function () {\r\n\t\treturn string.hwbString(this.values.hwb, this.values.alpha);\r\n\t},\r\n\tkeyword: function () {\r\n\t\treturn string.keyword(this.values.rgb, this.values.alpha);\r\n\t},\r\n\r\n\trgbNumber: function () {\r\n\t\tvar rgb = this.values.rgb;\r\n\t\treturn (rgb[0] << 16) | (rgb[1] << 8) | rgb[2];\r\n\t},\r\n\r\n\tluminosity: function () {\r\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\r\n\t\tvar rgb = this.values.rgb;\r\n\t\tvar lum = [];\r\n\t\tfor (var i = 0; i < rgb.length; i++) {\r\n\t\t\tvar chan = rgb[i] / 255;\r\n\t\t\tlum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\r\n\t\t}\r\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\r\n\t},\r\n\r\n\tcontrast: function (color2) {\r\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\r\n\t\tvar lum1 = this.luminosity();\r\n\t\tvar lum2 = color2.luminosity();\r\n\t\tif (lum1 > lum2) {\r\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\r\n\t\t}\r\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\r\n\t},\r\n\r\n\tlevel: function (color2) {\r\n\t\tvar contrastRatio = this.contrast(color2);\r\n\t\tif (contrastRatio >= 7.1) {\r\n\t\t\treturn 'AAA';\r\n\t\t}\r\n\r\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\r\n\t},\r\n\r\n\tdark: function () {\r\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\r\n\t\tvar rgb = this.values.rgb;\r\n\t\tvar yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\r\n\t\treturn yiq < 128;\r\n\t},\r\n\r\n\tlight: function () {\r\n\t\treturn !this.dark();\r\n\t},\r\n\r\n\tnegate: function () {\r\n\t\tvar rgb = [];\r\n\t\tfor (var i = 0; i < 3; i++) {\r\n\t\t\trgb[i] = 255 - this.values.rgb[i];\r\n\t\t}\r\n\t\tthis.setValues('rgb', rgb);\r\n\t\treturn this;\r\n\t},\r\n\r\n\tlighten: function (ratio) {\r\n\t\tvar hsl = this.values.hsl;\r\n\t\thsl[2] += hsl[2] * ratio;\r\n\t\tthis.setValues('hsl', hsl);\r\n\t\treturn this;\r\n\t},\r\n\r\n\tdarken: function (ratio) {\r\n\t\tvar hsl = this.values.hsl;\r\n\t\thsl[2] -= hsl[2] * ratio;\r\n\t\tthis.setValues('hsl', hsl);\r\n\t\treturn this;\r\n\t},\r\n\r\n\tsaturate: function (ratio) {\r\n\t\tvar hsl = this.values.hsl;\r\n\t\thsl[1] += hsl[1] * ratio;\r\n\t\tthis.setValues('hsl', hsl);\r\n\t\treturn this;\r\n\t},\r\n\r\n\tdesaturate: function (ratio) {\r\n\t\tvar hsl = this.values.hsl;\r\n\t\thsl[1] -= hsl[1] * ratio;\r\n\t\tthis.setValues('hsl', hsl);\r\n\t\treturn this;\r\n\t},\r\n\r\n\twhiten: function (ratio) {\r\n\t\tvar hwb = this.values.hwb;\r\n\t\thwb[1] += hwb[1] * ratio;\r\n\t\tthis.setValues('hwb', hwb);\r\n\t\treturn this;\r\n\t},\r\n\r\n\tblacken: function (ratio) {\r\n\t\tvar hwb = this.values.hwb;\r\n\t\thwb[2] += hwb[2] * ratio;\r\n\t\tthis.setValues('hwb', hwb);\r\n\t\treturn this;\r\n\t},\r\n\r\n\tgreyscale: function () {\r\n\t\tvar rgb = this.values.rgb;\r\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\r\n\t\tvar val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\r\n\t\tthis.setValues('rgb', [val, val, val]);\r\n\t\treturn this;\r\n\t},\r\n\r\n\tclearer: function (ratio) {\r\n\t\tvar alpha = this.values.alpha;\r\n\t\tthis.setValues('alpha', alpha - (alpha * ratio));\r\n\t\treturn this;\r\n\t},\r\n\r\n\topaquer: function (ratio) {\r\n\t\tvar alpha = this.values.alpha;\r\n\t\tthis.setValues('alpha', alpha + (alpha * ratio));\r\n\t\treturn this;\r\n\t},\r\n\r\n\trotate: function (degrees) {\r\n\t\tvar hsl = this.values.hsl;\r\n\t\tvar hue = (hsl[0] + degrees) % 360;\r\n\t\thsl[0] = hue < 0 ? 360 + hue : hue;\r\n\t\tthis.setValues('hsl', hsl);\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Ported from sass implementation in C\r\n\t * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\r\n\t */\r\n\tmix: function (mixinColor, weight) {\r\n\t\tvar color1 = this;\r\n\t\tvar color2 = mixinColor;\r\n\t\tvar p = weight === undefined ? 0.5 : weight;\r\n\r\n\t\tvar w = 2 * p - 1;\r\n\t\tvar a = color1.alpha() - color2.alpha();\r\n\r\n\t\tvar w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\r\n\t\tvar w2 = 1 - w1;\r\n\r\n\t\treturn this\r\n\t\t\t.rgb(\r\n\t\t\t\tw1 * color1.red() + w2 * color2.red(),\r\n\t\t\t\tw1 * color1.green() + w2 * color2.green(),\r\n\t\t\t\tw1 * color1.blue() + w2 * color2.blue()\r\n\t\t\t)\r\n\t\t\t.alpha(color1.alpha() * p + color2.alpha() * (1 - p));\r\n\t},\r\n\r\n\ttoJSON: function () {\r\n\t\treturn this.rgb();\r\n\t},\r\n\r\n\tclone: function () {\r\n\t\t// NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\r\n\t\t// making the final build way to big to embed in Chart.js. So let's do it manually,\r\n\t\t// assuming that values to clone are 1 dimension arrays containing only numbers,\r\n\t\t// except 'alpha' which is a number.\r\n\t\tvar result = new Color();\r\n\t\tvar source = this.values;\r\n\t\tvar target = result.values;\r\n\t\tvar value, type;\r\n\r\n\t\tfor (var prop in source) {\r\n\t\t\tif (source.hasOwnProperty(prop)) {\r\n\t\t\t\tvalue = source[prop];\r\n\t\t\t\ttype = ({}).toString.call(value);\r\n\t\t\t\tif (type === '[object Array]') {\r\n\t\t\t\t\ttarget[prop] = value.slice(0);\r\n\t\t\t\t} else if (type === '[object Number]') {\r\n\t\t\t\t\ttarget[prop] = value;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.error('unexpected color value:', value);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n};\r\n\r\nColor.prototype.spaces = {\r\n\trgb: ['red', 'green', 'blue'],\r\n\thsl: ['hue', 'saturation', 'lightness'],\r\n\thsv: ['hue', 'saturation', 'value'],\r\n\thwb: ['hue', 'whiteness', 'blackness'],\r\n\tcmyk: ['cyan', 'magenta', 'yellow', 'black']\r\n};\r\n\r\nColor.prototype.maxes = {\r\n\trgb: [255, 255, 255],\r\n\thsl: [360, 100, 100],\r\n\thsv: [360, 100, 100],\r\n\thwb: [360, 100, 100],\r\n\tcmyk: [100, 100, 100, 100]\r\n};\r\n\r\nColor.prototype.getValues = function (space) {\r\n\tvar values = this.values;\r\n\tvar vals = {};\r\n\r\n\tfor (var i = 0; i < space.length; i++) {\r\n\t\tvals[space.charAt(i)] = values[space][i];\r\n\t}\r\n\r\n\tif (values.alpha !== 1) {\r\n\t\tvals.a = values.alpha;\r\n\t}\r\n\r\n\t// {r: 255, g: 255, b: 255, a: 0.4}\r\n\treturn vals;\r\n};\r\n\r\nColor.prototype.setValues = function (space, vals) {\r\n\tvar values = this.values;\r\n\tvar spaces = this.spaces;\r\n\tvar maxes = this.maxes;\r\n\tvar alpha = 1;\r\n\tvar i;\r\n\r\n\tif (space === 'alpha') {\r\n\t\talpha = vals;\r\n\t} else if (vals.length) {\r\n\t\t// [10, 10, 10]\r\n\t\tvalues[space] = vals.slice(0, space.length);\r\n\t\talpha = vals[space.length];\r\n\t} else if (vals[space.charAt(0)] !== undefined) {\r\n\t\t// {r: 10, g: 10, b: 10}\r\n\t\tfor (i = 0; i < space.length; i++) {\r\n\t\t\tvalues[space][i] = vals[space.charAt(i)];\r\n\t\t}\r\n\r\n\t\talpha = vals.a;\r\n\t} else if (vals[spaces[space][0]] !== undefined) {\r\n\t\t// {red: 10, green: 10, blue: 10}\r\n\t\tvar chans = spaces[space];\r\n\r\n\t\tfor (i = 0; i < space.length; i++) {\r\n\t\t\tvalues[space][i] = vals[chans[i]];\r\n\t\t}\r\n\r\n\t\talpha = vals.alpha;\r\n\t}\r\n\r\n\tvalues.alpha = Math.max(0, Math.min(1, (alpha === undefined ? values.alpha : alpha)));\r\n\r\n\tif (space === 'alpha') {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tvar capped;\r\n\r\n\t// cap values of the space prior converting all values\r\n\tfor (i = 0; i < space.length; i++) {\r\n\t\tcapped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\r\n\t\tvalues[space][i] = Math.round(capped);\r\n\t}\r\n\r\n\t// convert to all the other color spaces\r\n\tfor (var sname in spaces) {\r\n\t\tif (sname !== space) {\r\n\t\t\tvalues[sname] = convert[space][sname](values[space]);\r\n\t\t}\r\n\t}\r\n\r\n\treturn true;\r\n};\r\n\r\nColor.prototype.setSpace = function (space, args) {\r\n\tvar vals = args[0];\r\n\r\n\tif (vals === undefined) {\r\n\t\t// color.rgb()\r\n\t\treturn this.getValues(space);\r\n\t}\r\n\r\n\t// color.rgb(10, 10, 10)\r\n\tif (typeof vals === 'number') {\r\n\t\tvals = Array.prototype.slice.call(args);\r\n\t}\r\n\r\n\tthis.setValues(space, vals);\r\n\treturn this;\r\n};\r\n\r\nColor.prototype.setChannel = function (space, index, val) {\r\n\tvar svalues = this.values[space];\r\n\tif (val === undefined) {\r\n\t\t// color.red()\r\n\t\treturn svalues[index];\r\n\t} else if (val === svalues[index]) {\r\n\t\t// color.red(color.red())\r\n\t\treturn this;\r\n\t}\r\n\r\n\t// color.red(100)\r\n\tsvalues[index] = val;\r\n\tthis.setValues(space, svalues);\r\n\r\n\treturn this;\r\n};\r\n\r\nif (typeof window !== 'undefined') {\r\n\twindow.Color = Color;\r\n}\r\n\r\nmodule.exports = Color;\r\n\n},{\"2\":2,\"5\":5}],4:[function(require,module,exports){\n/* MIT license */\n\nmodule.exports = {\n  rgb2hsl: rgb2hsl,\n  rgb2hsv: rgb2hsv,\n  rgb2hwb: rgb2hwb,\n  rgb2cmyk: rgb2cmyk,\n  rgb2keyword: rgb2keyword,\n  rgb2xyz: rgb2xyz,\n  rgb2lab: rgb2lab,\n  rgb2lch: rgb2lch,\n\n  hsl2rgb: hsl2rgb,\n  hsl2hsv: hsl2hsv,\n  hsl2hwb: hsl2hwb,\n  hsl2cmyk: hsl2cmyk,\n  hsl2keyword: hsl2keyword,\n\n  hsv2rgb: hsv2rgb,\n  hsv2hsl: hsv2hsl,\n  hsv2hwb: hsv2hwb,\n  hsv2cmyk: hsv2cmyk,\n  hsv2keyword: hsv2keyword,\n\n  hwb2rgb: hwb2rgb,\n  hwb2hsl: hwb2hsl,\n  hwb2hsv: hwb2hsv,\n  hwb2cmyk: hwb2cmyk,\n  hwb2keyword: hwb2keyword,\n\n  cmyk2rgb: cmyk2rgb,\n  cmyk2hsl: cmyk2hsl,\n  cmyk2hsv: cmyk2hsv,\n  cmyk2hwb: cmyk2hwb,\n  cmyk2keyword: cmyk2keyword,\n\n  keyword2rgb: keyword2rgb,\n  keyword2hsl: keyword2hsl,\n  keyword2hsv: keyword2hsv,\n  keyword2hwb: keyword2hwb,\n  keyword2cmyk: keyword2cmyk,\n  keyword2lab: keyword2lab,\n  keyword2xyz: keyword2xyz,\n\n  xyz2rgb: xyz2rgb,\n  xyz2lab: xyz2lab,\n  xyz2lch: xyz2lch,\n\n  lab2xyz: lab2xyz,\n  lab2rgb: lab2rgb,\n  lab2lch: lab2lch,\n\n  lch2lab: lch2lab,\n  lch2xyz: lch2xyz,\n  lch2rgb: lch2rgb\n}\n\n\nfunction rgb2hsl(rgb) {\n  var r = rgb[0]/255,\n      g = rgb[1]/255,\n      b = rgb[2]/255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, l;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g)/ delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  l = (min + max) / 2;\n\n  if (max == min)\n    s = 0;\n  else if (l <= 0.5)\n    s = delta / (max + min);\n  else\n    s = delta / (2 - max - min);\n\n  return [h, s * 100, l * 100];\n}\n\nfunction rgb2hsv(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, v;\n\n  if (max == 0)\n    s = 0;\n  else\n    s = (delta/max * 1000)/10;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g) / delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  v = ((max / 255) * 1000) / 10;\n\n  return [h, s, v];\n}\n\nfunction rgb2hwb(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      h = rgb2hsl(rgb)[0],\n      w = 1/255 * Math.min(r, Math.min(g, b)),\n      b = 1 - 1/255 * Math.max(r, Math.max(g, b));\n\n  return [h, w * 100, b * 100];\n}\n\nfunction rgb2cmyk(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      c, m, y, k;\n\n  k = Math.min(1 - r, 1 - g, 1 - b);\n  c = (1 - r - k) / (1 - k) || 0;\n  m = (1 - g - k) / (1 - k) || 0;\n  y = (1 - b - k) / (1 - k) || 0;\n  return [c * 100, m * 100, y * 100, k * 100];\n}\n\nfunction rgb2keyword(rgb) {\n  return reverseKeywords[JSON.stringify(rgb)];\n}\n\nfunction rgb2xyz(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255;\n\n  // assume sRGB\n  r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n  g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n  b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n  var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n  var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n  var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n  return [x * 100, y *100, z * 100];\n}\n\nfunction rgb2lab(rgb) {\n  var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction rgb2lch(args) {\n  return lab2lch(rgb2lab(args));\n}\n\nfunction hsl2rgb(hsl) {\n  var h = hsl[0] / 360,\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      t1, t2, t3, rgb, val;\n\n  if (s == 0) {\n    val = l * 255;\n    return [val, val, val];\n  }\n\n  if (l < 0.5)\n    t2 = l * (1 + s);\n  else\n    t2 = l + s - l * s;\n  t1 = 2 * l - t2;\n\n  rgb = [0, 0, 0];\n  for (var i = 0; i < 3; i++) {\n    t3 = h + 1 / 3 * - (i - 1);\n    t3 < 0 && t3++;\n    t3 > 1 && t3--;\n\n    if (6 * t3 < 1)\n      val = t1 + (t2 - t1) * 6 * t3;\n    else if (2 * t3 < 1)\n      val = t2;\n    else if (3 * t3 < 2)\n      val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n    else\n      val = t1;\n\n    rgb[i] = val * 255;\n  }\n\n  return rgb;\n}\n\nfunction hsl2hsv(hsl) {\n  var h = hsl[0],\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      sv, v;\n\n  if(l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n  }\n\n  l *= 2;\n  s *= (l <= 1) ? l : 2 - l;\n  v = (l + s) / 2;\n  sv = (2 * s) / (l + s);\n  return [h, sv * 100, v * 100];\n}\n\nfunction hsl2hwb(args) {\n  return rgb2hwb(hsl2rgb(args));\n}\n\nfunction hsl2cmyk(args) {\n  return rgb2cmyk(hsl2rgb(args));\n}\n\nfunction hsl2keyword(args) {\n  return rgb2keyword(hsl2rgb(args));\n}\n\n\nfunction hsv2rgb(hsv) {\n  var h = hsv[0] / 60,\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      hi = Math.floor(h) % 6;\n\n  var f = h - Math.floor(h),\n      p = 255 * v * (1 - s),\n      q = 255 * v * (1 - (s * f)),\n      t = 255 * v * (1 - (s * (1 - f))),\n      v = 255 * v;\n\n  switch(hi) {\n    case 0:\n      return [v, t, p];\n    case 1:\n      return [q, v, p];\n    case 2:\n      return [p, v, t];\n    case 3:\n      return [p, q, v];\n    case 4:\n      return [t, p, v];\n    case 5:\n      return [v, p, q];\n  }\n}\n\nfunction hsv2hsl(hsv) {\n  var h = hsv[0],\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      sl, l;\n\n  l = (2 - s) * v;\n  sl = s * v;\n  sl /= (l <= 1) ? l : 2 - l;\n  sl = sl || 0;\n  l /= 2;\n  return [h, sl * 100, l * 100];\n}\n\nfunction hsv2hwb(args) {\n  return rgb2hwb(hsv2rgb(args))\n}\n\nfunction hsv2cmyk(args) {\n  return rgb2cmyk(hsv2rgb(args));\n}\n\nfunction hsv2keyword(args) {\n  return rgb2keyword(hsv2rgb(args));\n}\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nfunction hwb2rgb(hwb) {\n  var h = hwb[0] / 360,\n      wh = hwb[1] / 100,\n      bl = hwb[2] / 100,\n      ratio = wh + bl,\n      i, v, f, n;\n\n  // wh + bl cant be > 1\n  if (ratio > 1) {\n    wh /= ratio;\n    bl /= ratio;\n  }\n\n  i = Math.floor(6 * h);\n  v = 1 - bl;\n  f = 6 * h - i;\n  if ((i & 0x01) != 0) {\n    f = 1 - f;\n  }\n  n = wh + f * (v - wh);  // linear interpolation\n\n  switch (i) {\n    default:\n    case 6:\n    case 0: r = v; g = n; b = wh; break;\n    case 1: r = n; g = v; b = wh; break;\n    case 2: r = wh; g = v; b = n; break;\n    case 3: r = wh; g = n; b = v; break;\n    case 4: r = n; g = wh; b = v; break;\n    case 5: r = v; g = wh; b = n; break;\n  }\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction hwb2hsl(args) {\n  return rgb2hsl(hwb2rgb(args));\n}\n\nfunction hwb2hsv(args) {\n  return rgb2hsv(hwb2rgb(args));\n}\n\nfunction hwb2cmyk(args) {\n  return rgb2cmyk(hwb2rgb(args));\n}\n\nfunction hwb2keyword(args) {\n  return rgb2keyword(hwb2rgb(args));\n}\n\nfunction cmyk2rgb(cmyk) {\n  var c = cmyk[0] / 100,\n      m = cmyk[1] / 100,\n      y = cmyk[2] / 100,\n      k = cmyk[3] / 100,\n      r, g, b;\n\n  r = 1 - Math.min(1, c * (1 - k) + k);\n  g = 1 - Math.min(1, m * (1 - k) + k);\n  b = 1 - Math.min(1, y * (1 - k) + k);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction cmyk2hsl(args) {\n  return rgb2hsl(cmyk2rgb(args));\n}\n\nfunction cmyk2hsv(args) {\n  return rgb2hsv(cmyk2rgb(args));\n}\n\nfunction cmyk2hwb(args) {\n  return rgb2hwb(cmyk2rgb(args));\n}\n\nfunction cmyk2keyword(args) {\n  return rgb2keyword(cmyk2rgb(args));\n}\n\n\nfunction xyz2rgb(xyz) {\n  var x = xyz[0] / 100,\n      y = xyz[1] / 100,\n      z = xyz[2] / 100,\n      r, g, b;\n\n  r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n  g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n  b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n  // assume sRGB\n  r = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n    : r = (r * 12.92);\n\n  g = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n    : g = (g * 12.92);\n\n  b = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n    : b = (b * 12.92);\n\n  r = Math.min(Math.max(0, r), 1);\n  g = Math.min(Math.max(0, g), 1);\n  b = Math.min(Math.max(0, b), 1);\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction xyz2lab(xyz) {\n  var x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction xyz2lch(args) {\n  return lab2lch(xyz2lab(args));\n}\n\nfunction lab2xyz(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      x, y, z, y2;\n\n  if (l <= 8) {\n    y = (l * 100) / 903.3;\n    y2 = (7.787 * (y / 100)) + (16 / 116);\n  } else {\n    y = 100 * Math.pow((l + 16) / 116, 3);\n    y2 = Math.pow(y / 100, 1/3);\n  }\n\n  x = x / 95.047 <= 0.008856 ? x = (95.047 * ((a / 500) + y2 - (16 / 116))) / 7.787 : 95.047 * Math.pow((a / 500) + y2, 3);\n\n  z = z / 108.883 <= 0.008859 ? z = (108.883 * (y2 - (b / 200) - (16 / 116))) / 7.787 : 108.883 * Math.pow(y2 - (b / 200), 3);\n\n  return [x, y, z];\n}\n\nfunction lab2lch(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      hr, h, c;\n\n  hr = Math.atan2(b, a);\n  h = hr * 360 / 2 / Math.PI;\n  if (h < 0) {\n    h += 360;\n  }\n  c = Math.sqrt(a * a + b * b);\n  return [l, c, h];\n}\n\nfunction lab2rgb(args) {\n  return xyz2rgb(lab2xyz(args));\n}\n\nfunction lch2lab(lch) {\n  var l = lch[0],\n      c = lch[1],\n      h = lch[2],\n      a, b, hr;\n\n  hr = h / 360 * 2 * Math.PI;\n  a = c * Math.cos(hr);\n  b = c * Math.sin(hr);\n  return [l, a, b];\n}\n\nfunction lch2xyz(args) {\n  return lab2xyz(lch2lab(args));\n}\n\nfunction lch2rgb(args) {\n  return lab2rgb(lch2lab(args));\n}\n\nfunction keyword2rgb(keyword) {\n  return cssKeywords[keyword];\n}\n\nfunction keyword2hsl(args) {\n  return rgb2hsl(keyword2rgb(args));\n}\n\nfunction keyword2hsv(args) {\n  return rgb2hsv(keyword2rgb(args));\n}\n\nfunction keyword2hwb(args) {\n  return rgb2hwb(keyword2rgb(args));\n}\n\nfunction keyword2cmyk(args) {\n  return rgb2cmyk(keyword2rgb(args));\n}\n\nfunction keyword2lab(args) {\n  return rgb2lab(keyword2rgb(args));\n}\n\nfunction keyword2xyz(args) {\n  return rgb2xyz(keyword2rgb(args));\n}\n\nvar cssKeywords = {\n  aliceblue:  [240,248,255],\n  antiquewhite: [250,235,215],\n  aqua: [0,255,255],\n  aquamarine: [127,255,212],\n  azure:  [240,255,255],\n  beige:  [245,245,220],\n  bisque: [255,228,196],\n  black:  [0,0,0],\n  blanchedalmond: [255,235,205],\n  blue: [0,0,255],\n  blueviolet: [138,43,226],\n  brown:  [165,42,42],\n  burlywood:  [222,184,135],\n  cadetblue:  [95,158,160],\n  chartreuse: [127,255,0],\n  chocolate:  [210,105,30],\n  coral:  [255,127,80],\n  cornflowerblue: [100,149,237],\n  cornsilk: [255,248,220],\n  crimson:  [220,20,60],\n  cyan: [0,255,255],\n  darkblue: [0,0,139],\n  darkcyan: [0,139,139],\n  darkgoldenrod:  [184,134,11],\n  darkgray: [169,169,169],\n  darkgreen:  [0,100,0],\n  darkgrey: [169,169,169],\n  darkkhaki:  [189,183,107],\n  darkmagenta:  [139,0,139],\n  darkolivegreen: [85,107,47],\n  darkorange: [255,140,0],\n  darkorchid: [153,50,204],\n  darkred:  [139,0,0],\n  darksalmon: [233,150,122],\n  darkseagreen: [143,188,143],\n  darkslateblue:  [72,61,139],\n  darkslategray:  [47,79,79],\n  darkslategrey:  [47,79,79],\n  darkturquoise:  [0,206,209],\n  darkviolet: [148,0,211],\n  deeppink: [255,20,147],\n  deepskyblue:  [0,191,255],\n  dimgray:  [105,105,105],\n  dimgrey:  [105,105,105],\n  dodgerblue: [30,144,255],\n  firebrick:  [178,34,34],\n  floralwhite:  [255,250,240],\n  forestgreen:  [34,139,34],\n  fuchsia:  [255,0,255],\n  gainsboro:  [220,220,220],\n  ghostwhite: [248,248,255],\n  gold: [255,215,0],\n  goldenrod:  [218,165,32],\n  gray: [128,128,128],\n  green:  [0,128,0],\n  greenyellow:  [173,255,47],\n  grey: [128,128,128],\n  honeydew: [240,255,240],\n  hotpink:  [255,105,180],\n  indianred:  [205,92,92],\n  indigo: [75,0,130],\n  ivory:  [255,255,240],\n  khaki:  [240,230,140],\n  lavender: [230,230,250],\n  lavenderblush:  [255,240,245],\n  lawngreen:  [124,252,0],\n  lemonchiffon: [255,250,205],\n  lightblue:  [173,216,230],\n  lightcoral: [240,128,128],\n  lightcyan:  [224,255,255],\n  lightgoldenrodyellow: [250,250,210],\n  lightgray:  [211,211,211],\n  lightgreen: [144,238,144],\n  lightgrey:  [211,211,211],\n  lightpink:  [255,182,193],\n  lightsalmon:  [255,160,122],\n  lightseagreen:  [32,178,170],\n  lightskyblue: [135,206,250],\n  lightslategray: [119,136,153],\n  lightslategrey: [119,136,153],\n  lightsteelblue: [176,196,222],\n  lightyellow:  [255,255,224],\n  lime: [0,255,0],\n  limegreen:  [50,205,50],\n  linen:  [250,240,230],\n  magenta:  [255,0,255],\n  maroon: [128,0,0],\n  mediumaquamarine: [102,205,170],\n  mediumblue: [0,0,205],\n  mediumorchid: [186,85,211],\n  mediumpurple: [147,112,219],\n  mediumseagreen: [60,179,113],\n  mediumslateblue:  [123,104,238],\n  mediumspringgreen:  [0,250,154],\n  mediumturquoise:  [72,209,204],\n  mediumvioletred:  [199,21,133],\n  midnightblue: [25,25,112],\n  mintcream:  [245,255,250],\n  mistyrose:  [255,228,225],\n  moccasin: [255,228,181],\n  navajowhite:  [255,222,173],\n  navy: [0,0,128],\n  oldlace:  [253,245,230],\n  olive:  [128,128,0],\n  olivedrab:  [107,142,35],\n  orange: [255,165,0],\n  orangered:  [255,69,0],\n  orchid: [218,112,214],\n  palegoldenrod:  [238,232,170],\n  palegreen:  [152,251,152],\n  paleturquoise:  [175,238,238],\n  palevioletred:  [219,112,147],\n  papayawhip: [255,239,213],\n  peachpuff:  [255,218,185],\n  peru: [205,133,63],\n  pink: [255,192,203],\n  plum: [221,160,221],\n  powderblue: [176,224,230],\n  purple: [128,0,128],\n  rebeccapurple: [102, 51, 153],\n  red:  [255,0,0],\n  rosybrown:  [188,143,143],\n  royalblue:  [65,105,225],\n  saddlebrown:  [139,69,19],\n  salmon: [250,128,114],\n  sandybrown: [244,164,96],\n  seagreen: [46,139,87],\n  seashell: [255,245,238],\n  sienna: [160,82,45],\n  silver: [192,192,192],\n  skyblue:  [135,206,235],\n  slateblue:  [106,90,205],\n  slategray:  [112,128,144],\n  slategrey:  [112,128,144],\n  snow: [255,250,250],\n  springgreen:  [0,255,127],\n  steelblue:  [70,130,180],\n  tan:  [210,180,140],\n  teal: [0,128,128],\n  thistle:  [216,191,216],\n  tomato: [255,99,71],\n  turquoise:  [64,224,208],\n  violet: [238,130,238],\n  wheat:  [245,222,179],\n  white:  [255,255,255],\n  whitesmoke: [245,245,245],\n  yellow: [255,255,0],\n  yellowgreen:  [154,205,50]\n};\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n}\n\n},{}],5:[function(require,module,exports){\nvar conversions = require(4);\n\nvar convert = function() {\n   return new Converter();\n}\n\nfor (var func in conversions) {\n  // export Raw versions\n  convert[func + \"Raw\"] =  (function(func) {\n    // accept array or plain args\n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      return conversions[func](arg);\n    }\n  })(func);\n\n  var pair = /(\\w+)2(\\w+)/.exec(func),\n      from = pair[1],\n      to = pair[2];\n\n  // export rgb2hsl and [\"rgb\"][\"hsl\"]\n  convert[from] = convert[from] || {};\n\n  convert[from][to] = convert[func] = (function(func) { \n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      \n      var val = conversions[func](arg);\n      if (typeof val == \"string\" || val === undefined)\n        return val; // keyword\n\n      for (var i = 0; i < val.length; i++)\n        val[i] = Math.round(val[i]);\n      return val;\n    }\n  })(func);\n}\n\n\n/* Converter does lazy conversion and caching */\nvar Converter = function() {\n   this.convs = {};\n};\n\n/* Either get the values for a space or\n  set the values for a space, depending on args */\nConverter.prototype.routeSpace = function(space, args) {\n   var values = args[0];\n   if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n   }\n   // color.rgb(10, 10, 10)\n   if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);        \n   }\n\n   return this.setValues(space, values);\n};\n  \n/* Set the values for a space, invalidating cache */\nConverter.prototype.setValues = function(space, values) {\n   this.space = space;\n   this.convs = {};\n   this.convs[space] = values;\n   return this;\n};\n\n/* Get the values for a space. If there's already\n  a conversion for the space, fetch it, otherwise\n  compute it */\nConverter.prototype.getValues = function(space) {\n   var vals = this.convs[space];\n   if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n\n      this.convs[space] = vals;\n   }\n  return vals;\n};\n\n[\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function(space) {\n   Converter.prototype[space] = function(vals) {\n      return this.routeSpace(space, arguments);\n   }\n});\n\nmodule.exports = convert;\n},{\"4\":4}],6:[function(require,module,exports){\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\n},{}],7:[function(require,module,exports){\n/**\n * @namespace Chart\n */\nvar Chart = require(27)();\n\nrequire(26)(Chart);\nrequire(22)(Chart);\nrequire(25)(Chart);\nrequire(21)(Chart);\nrequire(23)(Chart);\nrequire(24)(Chart);\nrequire(28)(Chart);\nrequire(32)(Chart);\nrequire(30)(Chart);\nrequire(31)(Chart);\nrequire(33)(Chart);\nrequire(29)(Chart);\nrequire(34)(Chart);\n\nrequire(35)(Chart);\nrequire(36)(Chart);\nrequire(37)(Chart);\nrequire(38)(Chart);\n\nrequire(41)(Chart);\nrequire(39)(Chart);\nrequire(40)(Chart);\nrequire(42)(Chart);\nrequire(43)(Chart);\nrequire(44)(Chart);\n\n// Controllers must be loaded after elements\n// See Chart.core.datasetController.dataElementType\nrequire(15)(Chart);\nrequire(16)(Chart);\nrequire(17)(Chart);\nrequire(18)(Chart);\nrequire(19)(Chart);\nrequire(20)(Chart);\n\nrequire(8)(Chart);\nrequire(9)(Chart);\nrequire(10)(Chart);\nrequire(11)(Chart);\nrequire(12)(Chart);\nrequire(13)(Chart);\nrequire(14)(Chart);\n\nwindow.Chart = module.exports = Chart;\n\n},{\"10\":10,\"11\":11,\"12\":12,\"13\":13,\"14\":14,\"15\":15,\"16\":16,\"17\":17,\"18\":18,\"19\":19,\"20\":20,\"21\":21,\"22\":22,\"23\":23,\"24\":24,\"25\":25,\"26\":26,\"27\":27,\"28\":28,\"29\":29,\"30\":30,\"31\":31,\"32\":32,\"33\":33,\"34\":34,\"35\":35,\"36\":36,\"37\":37,\"38\":38,\"39\":39,\"40\":40,\"41\":41,\"42\":42,\"43\":43,\"44\":44,\"8\":8,\"9\":9}],8:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Bar = function(context, config) {\n\t\tconfig.type = 'bar';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n},{}],9:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Bubble = function(context, config) {\n\t\tconfig.type = 'bubble';\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n},{}],10:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Doughnut = function(context, config) {\n\t\tconfig.type = 'doughnut';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n},{}],11:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Line = function(context, config) {\n\t\tconfig.type = 'line';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n},{}],12:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.PolarArea = function(context, config) {\n\t\tconfig.type = 'polarArea';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n},{}],13:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Radar = function(context, config) {\n\t\tconfig.options = Chart.helpers.configMerge({aspectRatio: 1}, config.options);\n\t\tconfig.type = 'radar';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n},{}],14:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar defaultConfig = {\n\t\thover: {\n\t\t\tmode: 'single'\n\t\t},\n\n\t\tscales: {\n\t\t\txAxes: [{\n\t\t\t\ttype: 'linear', // scatter should not use a category axis\n\t\t\t\tposition: 'bottom',\n\t\t\t\tid: 'x-axis-1' // need an ID so datasets can reference the scale\n\t\t\t}],\n\t\t\tyAxes: [{\n\t\t\t\ttype: 'linear',\n\t\t\t\tposition: 'left',\n\t\t\t\tid: 'y-axis-1'\n\t\t\t}]\n\t\t},\n\n\t\ttooltips: {\n\t\t\tcallbacks: {\n\t\t\t\ttitle: function() {\n\t\t\t\t\t// Title doesn't make sense for scatter since we format the data as a point\n\t\t\t\t\treturn '';\n\t\t\t\t},\n\t\t\t\tlabel: function(tooltipItem) {\n\t\t\t\t\treturn '(' + tooltipItem.xLabel + ', ' + tooltipItem.yLabel + ')';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t// Register the default config for this type\n\tChart.defaults.scatter = defaultConfig;\n\n\t// Scatter charts use line controllers\n\tChart.controllers.scatter = Chart.controllers.line;\n\n\tChart.Scatter = function(context, config) {\n\t\tconfig.type = 'scatter';\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n},{}],15:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\tChart.defaults.bar = {\n\t\thover: {\n\t\t\tmode: 'label'\n\t\t},\n\n\t\tscales: {\n\t\t\txAxes: [{\n\t\t\t\ttype: 'category',\n\n\t\t\t\t// Specific to Bar Controller\n\t\t\t\tcategoryPercentage: 0.8,\n\t\t\t\tbarPercentage: 0.9,\n\n\t\t\t\t// grid line settings\n\t\t\t\tgridLines: {\n\t\t\t\t\toffsetGridLines: true\n\t\t\t\t}\n\t\t\t}],\n\t\t\tyAxes: [{\n\t\t\t\ttype: 'linear'\n\t\t\t}]\n\t\t}\n\t};\n\n\tChart.controllers.bar = Chart.DatasetController.extend({\n\n\t\tdataElementType: Chart.elements.Rectangle,\n\n\t\tinitialize: function(chart, datasetIndex) {\n\t\t\tChart.DatasetController.prototype.initialize.call(this, chart, datasetIndex);\n\n\t\t\t// Use this to indicate that this is a bar dataset.\n\t\t\tthis.getMeta().bar = true;\n\t\t},\n\n\t\t// Get the number of datasets that display bars. We use this to correctly calculate the bar width\n\t\tgetBarCount: function() {\n\t\t\tvar me = this;\n\t\t\tvar barCount = 0;\n\t\t\thelpers.each(me.chart.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = me.chart.getDatasetMeta(datasetIndex);\n\t\t\t\tif (meta.bar && me.chart.isDatasetVisible(datasetIndex)) {\n\t\t\t\t\t++barCount;\n\t\t\t\t}\n\t\t\t}, me);\n\t\t\treturn barCount;\n\t\t},\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\thelpers.each(me.getMeta().data, function(rectangle, index) {\n\t\t\t\tme.updateElement(rectangle, index, reset);\n\t\t\t}, me);\n\t\t},\n\n\t\tupdateElement: function(rectangle, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar scaleBase = yScale.getBasePixel();\n\t\t\tvar rectangleElementOptions = me.chart.options.elements.rectangle;\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\n\t\t\thelpers.extend(rectangle, {\n\t\t\t\t// Utility\n\t\t\t\t_xScale: xScale,\n\t\t\t\t_yScale: yScale,\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: me.calculateBarX(index, me.index),\n\t\t\t\t\ty: reset ? scaleBase : me.calculateBarY(index, me.index),\n\n\t\t\t\t\t// Tooltip\n\t\t\t\t\tlabel: me.chart.data.labels[index],\n\t\t\t\t\tdatasetLabel: dataset.label,\n\n\t\t\t\t\t// Appearance\n\t\t\t\t\tbase: reset ? scaleBase : me.calculateBarBase(me.index, index),\n\t\t\t\t\twidth: me.calculateBarWidth(index),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor),\n\t\t\t\t\tborderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleElementOptions.borderSkipped,\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth)\n\t\t\t\t}\n\t\t\t});\n\t\t\trectangle.pivot();\n\t\t},\n\n\t\tcalculateBarBase: function(datasetIndex, index) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar base = 0;\n\n\t\t\tif (yScale.options.stacked) {\n\t\t\t\tvar chart = me.chart;\n\t\t\t\tvar datasets = chart.data.datasets;\n\t\t\t\tvar value = Number(datasets[datasetIndex].data[index]);\n\n\t\t\t\tfor (var i = 0; i < datasetIndex; i++) {\n\t\t\t\t\tvar currentDs = datasets[i];\n\t\t\t\t\tvar currentDsMeta = chart.getDatasetMeta(i);\n\t\t\t\t\tif (currentDsMeta.bar && currentDsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n\t\t\t\t\t\tvar currentVal = Number(currentDs.data[index]);\n\t\t\t\t\t\tbase += value < 0 ? Math.min(currentVal, 0) : Math.max(currentVal, 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn yScale.getPixelForValue(base);\n\t\t\t}\n\n\t\t\treturn yScale.getBasePixel();\n\t\t},\n\n\t\tgetRuler: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar datasetCount = me.getBarCount();\n\n\t\t\tvar tickWidth;\n\n\t\t\tif (xScale.options.type === 'category') {\n\t\t\t\ttickWidth = xScale.getPixelForTick(index + 1) - xScale.getPixelForTick(index);\n\t\t\t} else {\n\t\t\t\t// Average width\n\t\t\t\ttickWidth = xScale.width / xScale.ticks.length;\n\t\t\t}\n\t\t\tvar categoryWidth = tickWidth * xScale.options.categoryPercentage;\n\t\t\tvar categorySpacing = (tickWidth - (tickWidth * xScale.options.categoryPercentage)) / 2;\n\t\t\tvar fullBarWidth = categoryWidth / datasetCount;\n\n\t\t\tif (xScale.ticks.length !== me.chart.data.labels.length) {\n\t\t\t\tvar perc = xScale.ticks.length / me.chart.data.labels.length;\n\t\t\t\tfullBarWidth = fullBarWidth * perc;\n\t\t\t}\n\n\t\t\tvar barWidth = fullBarWidth * xScale.options.barPercentage;\n\t\t\tvar barSpacing = fullBarWidth - (fullBarWidth * xScale.options.barPercentage);\n\n\t\t\treturn {\n\t\t\t\tdatasetCount: datasetCount,\n\t\t\t\ttickWidth: tickWidth,\n\t\t\t\tcategoryWidth: categoryWidth,\n\t\t\t\tcategorySpacing: categorySpacing,\n\t\t\t\tfullBarWidth: fullBarWidth,\n\t\t\t\tbarWidth: barWidth,\n\t\t\t\tbarSpacing: barSpacing\n\t\t\t};\n\t\t},\n\n\t\tcalculateBarWidth: function(index) {\n\t\t\tvar xScale = this.getScaleForId(this.getMeta().xAxisID);\n\t\t\tif (xScale.options.barThickness) {\n\t\t\t\treturn xScale.options.barThickness;\n\t\t\t}\n\t\t\tvar ruler = this.getRuler(index);\n\t\t\treturn xScale.options.stacked ? ruler.categoryWidth : ruler.barWidth;\n\t\t},\n\n\t\t// Get bar index from the given dataset index accounting for the fact that not all bars are visible\n\t\tgetBarIndex: function(datasetIndex) {\n\t\t\tvar barIndex = 0;\n\t\t\tvar meta, j;\n\n\t\t\tfor (j = 0; j < datasetIndex; ++j) {\n\t\t\t\tmeta = this.chart.getDatasetMeta(j);\n\t\t\t\tif (meta.bar && this.chart.isDatasetVisible(j)) {\n\t\t\t\t\t++barIndex;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn barIndex;\n\t\t},\n\n\t\tcalculateBarX: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar barIndex = me.getBarIndex(datasetIndex);\n\n\t\t\tvar ruler = me.getRuler(index);\n\t\t\tvar leftTick = xScale.getPixelForValue(null, index, datasetIndex, me.chart.isCombo);\n\t\t\tleftTick -= me.chart.isCombo ? (ruler.tickWidth / 2) : 0;\n\n\t\t\tif (xScale.options.stacked) {\n\t\t\t\treturn leftTick + (ruler.categoryWidth / 2) + ruler.categorySpacing;\n\t\t\t}\n\n\t\t\treturn leftTick +\n\t\t\t\t(ruler.barWidth / 2) +\n\t\t\t\truler.categorySpacing +\n\t\t\t\t(ruler.barWidth * barIndex) +\n\t\t\t\t(ruler.barSpacing / 2) +\n\t\t\t\t(ruler.barSpacing * barIndex);\n\t\t},\n\n\t\tcalculateBarY: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar value = Number(me.getDataset().data[index]);\n\n\t\t\tif (yScale.options.stacked) {\n\n\t\t\t\tvar sumPos = 0,\n\t\t\t\t\tsumNeg = 0;\n\n\t\t\t\tfor (var i = 0; i < datasetIndex; i++) {\n\t\t\t\t\tvar ds = me.chart.data.datasets[i];\n\t\t\t\t\tvar dsMeta = me.chart.getDatasetMeta(i);\n\t\t\t\t\tif (dsMeta.bar && dsMeta.yAxisID === yScale.id && me.chart.isDatasetVisible(i)) {\n\t\t\t\t\t\tvar stackedVal = Number(ds.data[index]);\n\t\t\t\t\t\tif (stackedVal < 0) {\n\t\t\t\t\t\t\tsumNeg += stackedVal || 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsumPos += stackedVal || 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (value < 0) {\n\t\t\t\t\treturn yScale.getPixelForValue(sumNeg + value);\n\t\t\t\t}\n\t\t\t\treturn yScale.getPixelForValue(sumPos + value);\n\t\t\t}\n\n\t\t\treturn yScale.getPixelForValue(value);\n\t\t},\n\n\t\tdraw: function(ease) {\n\t\t\tvar me = this;\n\t\t\tvar easingDecimal = ease || 1;\n\t\t\thelpers.each(me.getMeta().data, function(rectangle, index) {\n\t\t\t\tvar d = me.getDataset().data[index];\n\t\t\t\tif (d !== null && d !== undefined && !isNaN(d)) {\n\t\t\t\t\trectangle.transition(easingDecimal).draw();\n\t\t\t\t}\n\t\t\t}, me);\n\t\t},\n\n\t\tsetHoverStyle: function(rectangle) {\n\t\t\tvar dataset = this.chart.data.datasets[rectangle._datasetIndex];\n\t\t\tvar index = rectangle._index;\n\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar model = rectangle._model;\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.getValueAtIndexOrDefault(dataset.hoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.getValueAtIndexOrDefault(dataset.hoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.getValueAtIndexOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\tremoveHoverStyle: function(rectangle) {\n\t\t\tvar dataset = this.chart.data.datasets[rectangle._datasetIndex];\n\t\t\tvar index = rectangle._index;\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar model = rectangle._model;\n\t\t\tvar rectangleElementOptions = this.chart.options.elements.rectangle;\n\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth);\n\t\t}\n\n\t});\n\n\n\t// including horizontalBar in the bar file, instead of a file of its own\n\t// it extends bar (like pie extends doughnut)\n\tChart.defaults.horizontalBar = {\n\t\thover: {\n\t\t\tmode: 'label'\n\t\t},\n\n\t\tscales: {\n\t\t\txAxes: [{\n\t\t\t\ttype: 'linear',\n\t\t\t\tposition: 'bottom'\n\t\t\t}],\n\t\t\tyAxes: [{\n\t\t\t\tposition: 'left',\n\t\t\t\ttype: 'category',\n\n\t\t\t\t// Specific to Horizontal Bar Controller\n\t\t\t\tcategoryPercentage: 0.8,\n\t\t\t\tbarPercentage: 0.9,\n\n\t\t\t\t// grid line settings\n\t\t\t\tgridLines: {\n\t\t\t\t\toffsetGridLines: true\n\t\t\t\t}\n\t\t\t}]\n\t\t},\n\t\telements: {\n\t\t\trectangle: {\n\t\t\t\tborderSkipped: 'left'\n\t\t\t}\n\t\t},\n\t\ttooltips: {\n\t\t\tcallbacks: {\n\t\t\t\ttitle: function(tooltipItems, data) {\n\t\t\t\t\t// Pick first xLabel for now\n\t\t\t\t\tvar title = '';\n\n\t\t\t\t\tif (tooltipItems.length > 0) {\n\t\t\t\t\t\tif (tooltipItems[0].yLabel) {\n\t\t\t\t\t\t\ttitle = tooltipItems[0].yLabel;\n\t\t\t\t\t\t} else if (data.labels.length > 0 && tooltipItems[0].index < data.labels.length) {\n\t\t\t\t\t\t\ttitle = data.labels[tooltipItems[0].index];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn title;\n\t\t\t\t},\n\t\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\t\tvar datasetLabel = data.datasets[tooltipItem.datasetIndex].label || '';\n\t\t\t\t\treturn datasetLabel + ': ' + tooltipItem.xLabel;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tChart.controllers.horizontalBar = Chart.controllers.bar.extend({\n\t\tupdateElement: function(rectangle, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar scaleBase = xScale.getBasePixel();\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar rectangleElementOptions = me.chart.options.elements.rectangle;\n\n\t\t\thelpers.extend(rectangle, {\n\t\t\t\t// Utility\n\t\t\t\t_xScale: xScale,\n\t\t\t\t_yScale: yScale,\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: reset ? scaleBase : me.calculateBarX(index, me.index),\n\t\t\t\t\ty: me.calculateBarY(index, me.index),\n\n\t\t\t\t\t// Tooltip\n\t\t\t\t\tlabel: me.chart.data.labels[index],\n\t\t\t\t\tdatasetLabel: dataset.label,\n\n\t\t\t\t\t// Appearance\n\t\t\t\t\tbase: reset ? scaleBase : me.calculateBarBase(me.index, index),\n\t\t\t\t\theight: me.calculateBarHeight(index),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor),\n\t\t\t\t\tborderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleElementOptions.borderSkipped,\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth)\n\t\t\t\t},\n\n\t\t\t\tdraw: function() {\n\t\t\t\t\tvar ctx = this._chart.ctx;\n\t\t\t\t\tvar vm = this._view;\n\n\t\t\t\t\tvar halfHeight = vm.height / 2,\n\t\t\t\t\t\ttopY = vm.y - halfHeight,\n\t\t\t\t\t\tbottomY = vm.y + halfHeight,\n\t\t\t\t\t\tright = vm.base - (vm.base - vm.x),\n\t\t\t\t\t\thalfStroke = vm.borderWidth / 2;\n\n\t\t\t\t\t// Canvas doesn't allow us to stroke inside the width so we can\n\t\t\t\t\t// adjust the sizes to fit if we're setting a stroke on the line\n\t\t\t\t\tif (vm.borderWidth) {\n\t\t\t\t\t\ttopY += halfStroke;\n\t\t\t\t\t\tbottomY -= halfStroke;\n\t\t\t\t\t\tright += halfStroke;\n\t\t\t\t\t}\n\n\t\t\t\t\tctx.beginPath();\n\n\t\t\t\t\tctx.fillStyle = vm.backgroundColor;\n\t\t\t\t\tctx.strokeStyle = vm.borderColor;\n\t\t\t\t\tctx.lineWidth = vm.borderWidth;\n\n\t\t\t\t\t// Corner points, from bottom-left to bottom-right clockwise\n\t\t\t\t\t// | 1 2 |\n\t\t\t\t\t// | 0 3 |\n\t\t\t\t\tvar corners = [\n\t\t\t\t\t\t[vm.base, bottomY],\n\t\t\t\t\t\t[vm.base, topY],\n\t\t\t\t\t\t[right, topY],\n\t\t\t\t\t\t[right, bottomY]\n\t\t\t\t\t];\n\n\t\t\t\t\t// Find first (starting) corner with fallback to 'bottom'\n\t\t\t\t\tvar borders = ['bottom', 'left', 'top', 'right'];\n\t\t\t\t\tvar startCorner = borders.indexOf(vm.borderSkipped, 0);\n\t\t\t\t\tif (startCorner === -1) {\n\t\t\t\t\t\tstartCorner = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tfunction cornerAt(cornerIndex) {\n\t\t\t\t\t\treturn corners[(startCorner + cornerIndex) % 4];\n\t\t\t\t\t}\n\n\t\t\t\t\t// Draw rectangle from 'startCorner'\n\t\t\t\t\tctx.moveTo.apply(ctx, cornerAt(0));\n\t\t\t\t\tfor (var i = 1; i < 4; i++) {\n\t\t\t\t\t\tctx.lineTo.apply(ctx, cornerAt(i));\n\t\t\t\t\t}\n\n\t\t\t\t\tctx.fill();\n\t\t\t\t\tif (vm.borderWidth) {\n\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tinRange: function(mouseX, mouseY) {\n\t\t\t\t\tvar vm = this._view;\n\t\t\t\t\tvar inRange = false;\n\n\t\t\t\t\tif (vm) {\n\t\t\t\t\t\tif (vm.x < vm.base) {\n\t\t\t\t\t\t\tinRange = (mouseY >= vm.y - vm.height / 2 && mouseY <= vm.y + vm.height / 2) && (mouseX >= vm.x && mouseX <= vm.base);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tinRange = (mouseY >= vm.y - vm.height / 2 && mouseY <= vm.y + vm.height / 2) && (mouseX >= vm.base && mouseX <= vm.x);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn inRange;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\trectangle.pivot();\n\t\t},\n\n\t\tcalculateBarBase: function(datasetIndex, index) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar base = 0;\n\n\t\t\tif (xScale.options.stacked) {\n\t\t\t\tvar chart = me.chart;\n\t\t\t\tvar datasets = chart.data.datasets;\n\t\t\t\tvar value = Number(datasets[datasetIndex].data[index]);\n\n\t\t\t\tfor (var i = 0; i < datasetIndex; i++) {\n\t\t\t\t\tvar currentDs = datasets[i];\n\t\t\t\t\tvar currentDsMeta = chart.getDatasetMeta(i);\n\t\t\t\t\tif (currentDsMeta.bar && currentDsMeta.xAxisID === xScale.id && chart.isDatasetVisible(i)) {\n\t\t\t\t\t\tvar currentVal = Number(currentDs.data[index]);\n\t\t\t\t\t\tbase += value < 0 ? Math.min(currentVal, 0) : Math.max(currentVal, 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn xScale.getPixelForValue(base);\n\t\t\t}\n\n\t\t\treturn xScale.getBasePixel();\n\t\t},\n\n\t\tgetRuler: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar datasetCount = me.getBarCount();\n\n\t\t\tvar tickHeight;\n\t\t\tif (yScale.options.type === 'category') {\n\t\t\t\ttickHeight = yScale.getPixelForTick(index + 1) - yScale.getPixelForTick(index);\n\t\t\t} else {\n\t\t\t\t// Average width\n\t\t\t\ttickHeight = yScale.width / yScale.ticks.length;\n\t\t\t}\n\t\t\tvar categoryHeight = tickHeight * yScale.options.categoryPercentage;\n\t\t\tvar categorySpacing = (tickHeight - (tickHeight * yScale.options.categoryPercentage)) / 2;\n\t\t\tvar fullBarHeight = categoryHeight / datasetCount;\n\n\t\t\tif (yScale.ticks.length !== me.chart.data.labels.length) {\n\t\t\t\tvar perc = yScale.ticks.length / me.chart.data.labels.length;\n\t\t\t\tfullBarHeight = fullBarHeight * perc;\n\t\t\t}\n\n\t\t\tvar barHeight = fullBarHeight * yScale.options.barPercentage;\n\t\t\tvar barSpacing = fullBarHeight - (fullBarHeight * yScale.options.barPercentage);\n\n\t\t\treturn {\n\t\t\t\tdatasetCount: datasetCount,\n\t\t\t\ttickHeight: tickHeight,\n\t\t\t\tcategoryHeight: categoryHeight,\n\t\t\t\tcategorySpacing: categorySpacing,\n\t\t\t\tfullBarHeight: fullBarHeight,\n\t\t\t\tbarHeight: barHeight,\n\t\t\t\tbarSpacing: barSpacing\n\t\t\t};\n\t\t},\n\n\t\tcalculateBarHeight: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar yScale = me.getScaleForId(me.getMeta().yAxisID);\n\t\t\tif (yScale.options.barThickness) {\n\t\t\t\treturn yScale.options.barThickness;\n\t\t\t}\n\t\t\tvar ruler = me.getRuler(index);\n\t\t\treturn yScale.options.stacked ? ruler.categoryHeight : ruler.barHeight;\n\t\t},\n\n\t\tcalculateBarX: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar value = Number(me.getDataset().data[index]);\n\n\t\t\tif (xScale.options.stacked) {\n\n\t\t\t\tvar sumPos = 0,\n\t\t\t\t\tsumNeg = 0;\n\n\t\t\t\tfor (var i = 0; i < datasetIndex; i++) {\n\t\t\t\t\tvar ds = me.chart.data.datasets[i];\n\t\t\t\t\tvar dsMeta = me.chart.getDatasetMeta(i);\n\t\t\t\t\tif (dsMeta.bar && dsMeta.xAxisID === xScale.id && me.chart.isDatasetVisible(i)) {\n\t\t\t\t\t\tvar stackedVal = Number(ds.data[index]);\n\t\t\t\t\t\tif (stackedVal < 0) {\n\t\t\t\t\t\t\tsumNeg += stackedVal || 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsumPos += stackedVal || 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (value < 0) {\n\t\t\t\t\treturn xScale.getPixelForValue(sumNeg + value);\n\t\t\t\t}\n\t\t\t\treturn xScale.getPixelForValue(sumPos + value);\n\t\t\t}\n\n\t\t\treturn xScale.getPixelForValue(value);\n\t\t},\n\n\t\tcalculateBarY: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar barIndex = me.getBarIndex(datasetIndex);\n\n\t\t\tvar ruler = me.getRuler(index);\n\t\t\tvar topTick = yScale.getPixelForValue(null, index, datasetIndex, me.chart.isCombo);\n\t\t\ttopTick -= me.chart.isCombo ? (ruler.tickHeight / 2) : 0;\n\n\t\t\tif (yScale.options.stacked) {\n\t\t\t\treturn topTick + (ruler.categoryHeight / 2) + ruler.categorySpacing;\n\t\t\t}\n\n\t\t\treturn topTick +\n\t\t\t\t(ruler.barHeight / 2) +\n\t\t\t\truler.categorySpacing +\n\t\t\t\t(ruler.barHeight * barIndex) +\n\t\t\t\t(ruler.barSpacing / 2) +\n\t\t\t\t(ruler.barSpacing * barIndex);\n\t\t}\n\t});\n};\n\n},{}],16:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\tChart.defaults.bubble = {\n\t\thover: {\n\t\t\tmode: 'single'\n\t\t},\n\n\t\tscales: {\n\t\t\txAxes: [{\n\t\t\t\ttype: 'linear', // bubble should probably use a linear scale by default\n\t\t\t\tposition: 'bottom',\n\t\t\t\tid: 'x-axis-0' // need an ID so datasets can reference the scale\n\t\t\t}],\n\t\t\tyAxes: [{\n\t\t\t\ttype: 'linear',\n\t\t\t\tposition: 'left',\n\t\t\t\tid: 'y-axis-0'\n\t\t\t}]\n\t\t},\n\n\t\ttooltips: {\n\t\t\tcallbacks: {\n\t\t\t\ttitle: function() {\n\t\t\t\t\t// Title doesn't make sense for scatter since we format the data as a point\n\t\t\t\t\treturn '';\n\t\t\t\t},\n\t\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\t\tvar datasetLabel = data.datasets[tooltipItem.datasetIndex].label || '';\n\t\t\t\t\tvar dataPoint = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\t\t\t\t\treturn datasetLabel + ': (' + dataPoint.x + ', ' + dataPoint.y + ', ' + dataPoint.r + ')';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tChart.controllers.bubble = Chart.DatasetController.extend({\n\n\t\tdataElementType: Chart.elements.Point,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar points = meta.data;\n\n\t\t\t// Update Points\n\t\t\thelpers.each(points, function(point, index) {\n\t\t\t\tme.updateElement(point, index, reset);\n\t\t\t});\n\t\t},\n\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar data = dataset.data[index];\n\t\t\tvar pointElementOptions = me.chart.options.elements.point;\n\t\t\tvar dsIndex = me.index;\n\n\t\t\thelpers.extend(point, {\n\t\t\t\t// Utility\n\t\t\t\t_xScale: xScale,\n\t\t\t\t_yScale: yScale,\n\t\t\t\t_datasetIndex: dsIndex,\n\t\t\t\t_index: index,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex, me.chart.isCombo),\n\t\t\t\t\ty: reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex),\n\t\t\t\t\t// Appearance\n\t\t\t\t\tradius: reset ? 0 : custom.radius ? custom.radius : me.getRadius(data),\n\n\t\t\t\t\t// Tooltip\n\t\t\t\t\thitRadius: custom.hitRadius ? custom.hitRadius : helpers.getValueAtIndexOrDefault(dataset.hitRadius, index, pointElementOptions.hitRadius)\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Trick to reset the styles of the point\n\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(me, point, pointElementOptions);\n\n\t\t\tvar model = point._model;\n\t\t\tmodel.skip = custom.skip ? custom.skip : (isNaN(model.x) || isNaN(model.y));\n\n\t\t\tpoint.pivot();\n\t\t},\n\n\t\tgetRadius: function(value) {\n\t\t\treturn value.r || this.chart.options.elements.point.radius;\n\t\t},\n\n\t\tsetHoverStyle: function(point) {\n\t\t\tvar me = this;\n\t\t\tChart.DatasetController.prototype.setHoverStyle.call(me, point);\n\n\t\t\t// Radius\n\t\t\tvar dataset = me.chart.data.datasets[point._datasetIndex];\n\t\t\tvar index = point._index;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar model = point._model;\n\t\t\tmodel.radius = custom.hoverRadius ? custom.hoverRadius : (helpers.getValueAtIndexOrDefault(dataset.hoverRadius, index, me.chart.options.elements.point.hoverRadius)) + me.getRadius(dataset.data[index]);\n\t\t},\n\n\t\tremoveHoverStyle: function(point) {\n\t\t\tvar me = this;\n\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(me, point, me.chart.options.elements.point);\n\n\t\t\tvar dataVal = me.chart.data.datasets[point._datasetIndex].data[point._index];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar model = point._model;\n\n\t\t\tmodel.radius = custom.radius ? custom.radius : me.getRadius(dataVal);\n\t\t}\n\t});\n};\n\n},{}],17:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers,\n\t\tdefaults = Chart.defaults;\n\n\tdefaults.doughnut = {\n\t\tanimation: {\n\t\t\t// Boolean - Whether we animate the rotation of the Doughnut\n\t\t\tanimateRotate: true,\n\t\t\t// Boolean - Whether we animate scaling the Doughnut from the centre\n\t\t\tanimateScale: false\n\t\t},\n\t\taspectRatio: 1,\n\t\thover: {\n\t\t\tmode: 'single'\n\t\t},\n\t\tlegendCallback: function(chart) {\n\t\t\tvar text = [];\n\t\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\t\tvar data = chart.data;\n\t\t\tvar datasets = data.datasets;\n\t\t\tvar labels = data.labels;\n\n\t\t\tif (datasets.length) {\n\t\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\t\tif (labels[i]) {\n\t\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t\t}\n\t\t\t\t\ttext.push('</li>');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttext.push('</ul>');\n\t\t\treturn text.join('');\n\t\t},\n\t\tlegend: {\n\t\t\tlabels: {\n\t\t\t\tgenerateLabels: function(chart) {\n\t\t\t\t\tvar data = chart.data;\n\t\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\t\tvar custom = arc && arc.custom || {};\n\t\t\t\t\t\t\tvar getValueAtIndexOrDefault = helpers.getValueAtIndexOrDefault;\n\t\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : getValueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n\t\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : getValueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n\t\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : getValueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonClick: function(e, legendItem) {\n\t\t\t\tvar index = legendItem.index;\n\t\t\t\tvar chart = this.chart;\n\t\t\t\tvar i, ilen, meta;\n\n\t\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\t\t// toggle visibility of index if exists\n\t\t\t\t\tif (meta.data[index]) {\n\t\t\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tchart.update();\n\t\t\t}\n\t\t},\n\n\t\t// The percentage of the chart that we cut out of the middle.\n\t\tcutoutPercentage: 50,\n\n\t\t// The rotation of the chart, where the first data arc begins.\n\t\trotation: Math.PI * -0.5,\n\n\t\t// The total circumference of the chart.\n\t\tcircumference: Math.PI * 2.0,\n\n\t\t// Need to override these to give a nice default\n\t\ttooltips: {\n\t\t\tcallbacks: {\n\t\t\t\ttitle: function() {\n\t\t\t\t\treturn '';\n\t\t\t\t},\n\t\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\t\treturn data.labels[tooltipItem.index] + ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tdefaults.pie = helpers.clone(defaults.doughnut);\n\thelpers.extend(defaults.pie, {\n\t\tcutoutPercentage: 0\n\t});\n\n\n\tChart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({\n\n\t\tdataElementType: Chart.elements.Arc,\n\n\t\tlinkScales: helpers.noop,\n\n\t\t// Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n\t\tgetRingIndex: function(datasetIndex) {\n\t\t\tvar ringIndex = 0;\n\n\t\t\tfor (var j = 0; j < datasetIndex; ++j) {\n\t\t\t\tif (this.chart.isDatasetVisible(j)) {\n\t\t\t\t\t++ringIndex;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn ringIndex;\n\t\t},\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart,\n\t\t\t\tchartArea = chart.chartArea,\n\t\t\t\topts = chart.options,\n\t\t\t\tarcOpts = opts.elements.arc,\n\t\t\t\tavailableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth,\n\t\t\t\tavailableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth,\n\t\t\t\tminSize = Math.min(availableWidth, availableHeight),\n\t\t\t\toffset = {\n\t\t\t\t\tx: 0,\n\t\t\t\t\ty: 0\n\t\t\t\t},\n\t\t\t\tmeta = me.getMeta(),\n\t\t\t\tcutoutPercentage = opts.cutoutPercentage,\n\t\t\t\tcircumference = opts.circumference;\n\n\t\t\t// If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\t\t\tif (circumference < Math.PI * 2.0) {\n\t\t\t\tvar startAngle = opts.rotation % (Math.PI * 2.0);\n\t\t\t\tstartAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n\t\t\t\tvar endAngle = startAngle + circumference;\n\t\t\t\tvar start = {x: Math.cos(startAngle), y: Math.sin(startAngle)};\n\t\t\t\tvar end = {x: Math.cos(endAngle), y: Math.sin(endAngle)};\n\t\t\t\tvar contains0 = (startAngle <= 0 && 0 <= endAngle) || (startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle);\n\t\t\t\tvar contains90 = (startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle);\n\t\t\t\tvar contains180 = (startAngle <= -Math.PI && -Math.PI <= endAngle) || (startAngle <= Math.PI && Math.PI <= endAngle);\n\t\t\t\tvar contains270 = (startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle);\n\t\t\t\tvar cutout = cutoutPercentage / 100.0;\n\t\t\t\tvar min = {x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)), y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))};\n\t\t\t\tvar max = {x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)), y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))};\n\t\t\t\tvar size = {width: (max.x - min.x) * 0.5, height: (max.y - min.y) * 0.5};\n\t\t\t\tminSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n\t\t\t\toffset = {x: (max.x + min.x) * -0.5, y: (max.y + min.y) * -0.5};\n\t\t\t}\n\n\t\t\tchart.borderWidth = me.getMaxBorderWidth(meta.data);\n\t\t\tchart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n\t\t\tchart.innerRadius = Math.max(cutoutPercentage ? (chart.outerRadius / 100) * (cutoutPercentage) : 1, 0);\n\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\t\t\tchart.offsetX = offset.x * chart.outerRadius;\n\t\t\tchart.offsetY = offset.y * chart.outerRadius;\n\n\t\t\tmeta.total = me.calculateTotal();\n\n\t\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.getRingIndex(me.index));\n\t\t\tme.innerRadius = me.outerRadius - chart.radiusLength;\n\n\t\t\thelpers.each(meta.data, function(arc, index) {\n\t\t\t\tme.updateElement(arc, index, reset);\n\t\t\t});\n\t\t},\n\n\t\tupdateElement: function(arc, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart,\n\t\t\t\tchartArea = chart.chartArea,\n\t\t\t\topts = chart.options,\n\t\t\t\tanimationOpts = opts.animation,\n\t\t\t\tcenterX = (chartArea.left + chartArea.right) / 2,\n\t\t\t\tcenterY = (chartArea.top + chartArea.bottom) / 2,\n\t\t\t\tstartAngle = opts.rotation, // non reset case handled later\n\t\t\t\tendAngle = opts.rotation, // non reset case handled later\n\t\t\t\tdataset = me.getDataset(),\n\t\t\t\tcircumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI)),\n\t\t\t\tinnerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius,\n\t\t\t\touterRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius,\n\t\t\t\tvalueAtIndexOrDefault = helpers.getValueAtIndexOrDefault;\n\n\t\t\thelpers.extend(arc, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: centerX + chart.offsetX,\n\t\t\t\t\ty: centerY + chart.offsetY,\n\t\t\t\t\tstartAngle: startAngle,\n\t\t\t\t\tendAngle: endAngle,\n\t\t\t\t\tcircumference: circumference,\n\t\t\t\t\touterRadius: outerRadius,\n\t\t\t\t\tinnerRadius: innerRadius,\n\t\t\t\t\tlabel: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tvar model = arc._model;\n\t\t\t// Resets the visual styles\n\t\t\tthis.removeHoverStyle(arc);\n\n\t\t\t// Set correct angles if not resetting\n\t\t\tif (!reset || !animationOpts.animateRotate) {\n\t\t\t\tif (index === 0) {\n\t\t\t\t\tmodel.startAngle = opts.rotation;\n\t\t\t\t} else {\n\t\t\t\t\tmodel.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n\t\t\t\t}\n\n\t\t\t\tmodel.endAngle = model.startAngle + model.circumference;\n\t\t\t}\n\n\t\t\tarc.pivot();\n\t\t},\n\n\t\tremoveHoverStyle: function(arc) {\n\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\n\t\t},\n\n\t\tcalculateTotal: function() {\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar total = 0;\n\t\t\tvar value;\n\n\t\t\thelpers.each(meta.data, function(element, index) {\n\t\t\t\tvalue = dataset.data[index];\n\t\t\t\tif (!isNaN(value) && !element.hidden) {\n\t\t\t\t\ttotal += Math.abs(value);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t/* if (total === 0) {\n\t\t\t\ttotal = NaN;\n\t\t\t}*/\n\n\t\t\treturn total;\n\t\t},\n\n\t\tcalculateCircumference: function(value) {\n\t\t\tvar total = this.getMeta().total;\n\t\t\tif (total > 0 && !isNaN(value)) {\n\t\t\t\treturn (Math.PI * 2.0) * (value / total);\n\t\t\t}\n\t\t\treturn 0;\n\t\t},\n\n\t\t// gets the max border or hover width to properly scale pie charts\n\t\tgetMaxBorderWidth: function(elements) {\n\t\t\tvar max = 0,\n\t\t\t\tindex = this.index,\n\t\t\t\tlength = elements.length,\n\t\t\t\tborderWidth,\n\t\t\t\thoverWidth;\n\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tborderWidth = elements[i]._model ? elements[i]._model.borderWidth : 0;\n\t\t\t\thoverWidth = elements[i]._chart ? elements[i]._chart.config.data.datasets[index].hoverBorderWidth : 0;\n\n\t\t\t\tmax = borderWidth > max ? borderWidth : max;\n\t\t\t\tmax = hoverWidth > max ? hoverWidth : max;\n\t\t\t}\n\t\t\treturn max;\n\t\t}\n\t});\n};\n\n},{}],18:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\tChart.defaults.line = {\n\t\tshowLines: true,\n\t\tspanGaps: false,\n\n\t\thover: {\n\t\t\tmode: 'label'\n\t\t},\n\n\t\tscales: {\n\t\t\txAxes: [{\n\t\t\t\ttype: 'category',\n\t\t\t\tid: 'x-axis-0'\n\t\t\t}],\n\t\t\tyAxes: [{\n\t\t\t\ttype: 'linear',\n\t\t\t\tid: 'y-axis-0'\n\t\t\t}]\n\t\t}\n\t};\n\n\tfunction lineEnabled(dataset, options) {\n\t\treturn helpers.getValueOrDefault(dataset.showLine, options.showLines);\n\t}\n\n\tChart.controllers.line = Chart.DatasetController.extend({\n\n\t\tdatasetElementType: Chart.elements.Line,\n\n\t\tdataElementType: Chart.elements.Point,\n\n\t\taddElementAndReset: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.chart.options;\n\t\t\tvar meta = me.getMeta();\n\n\t\t\tChart.DatasetController.prototype.addElementAndReset.call(me, index);\n\n\t\t\t// Make sure bezier control points are updated\n\t\t\tif (lineEnabled(me.getDataset(), options) && meta.dataset._model.tension !== 0) {\n\t\t\t\tme.updateBezierControlPoints();\n\t\t\t}\n\t\t},\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar line = meta.dataset;\n\t\t\tvar points = meta.data || [];\n\t\t\tvar options = me.chart.options;\n\t\t\tvar lineElementOptions = options.elements.line;\n\t\t\tvar scale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar i, ilen, custom;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar showLine = lineEnabled(dataset, options);\n\n\t\t\t// Update Line\n\t\t\tif (showLine) {\n\t\t\t\tcustom = line.custom || {};\n\n\t\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t\t}\n\n\t\t\t\t// Utility\n\t\t\t\tline._scale = scale;\n\t\t\t\tline._datasetIndex = me.index;\n\t\t\t\t// Data\n\t\t\t\tline._children = points;\n\t\t\t\t// Model\n\t\t\t\tline._model = {\n\t\t\t\t\t// Appearance\n\t\t\t\t\t// The default behavior of lines is to break at null values, according\n\t\t\t\t\t// to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n\t\t\t\t\t// This option gives linse the ability to span gaps\n\t\t\t\t\tspanGaps: dataset.spanGaps ? dataset.spanGaps : options.spanGaps,\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.getValueOrDefault(dataset.lineTension, lineElementOptions.tension),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\n\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\n\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\n\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\n\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\n\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\n\t\t\t\t\tsteppedLine: custom.steppedLine ? custom.steppedLine : helpers.getValueOrDefault(dataset.steppedLine, lineElementOptions.stepped),\n\t\t\t\t\tcubicInterpolationMode: custom.cubicInterpolationMode ? custom.cubicInterpolationMode : helpers.getValueOrDefault(dataset.cubicInterpolationMode, lineElementOptions.cubicInterpolationMode),\n\t\t\t\t\t// Scale\n\t\t\t\t\tscaleTop: scale.top,\n\t\t\t\t\tscaleBottom: scale.bottom,\n\t\t\t\t\tscaleZero: scale.getBasePixel()\n\t\t\t\t};\n\n\t\t\t\tline.pivot();\n\t\t\t}\n\n\t\t\t// Update Points\n\t\t\tfor (i=0, ilen=points.length; i<ilen; ++i) {\n\t\t\t\tme.updateElement(points[i], i, reset);\n\t\t\t}\n\n\t\t\tif (showLine && line._model.tension !== 0) {\n\t\t\t\tme.updateBezierControlPoints();\n\t\t\t}\n\n\t\t\t// Now pivot the point for animation\n\t\t\tfor (i=0, ilen=points.length; i<ilen; ++i) {\n\t\t\t\tpoints[i].pivot();\n\t\t\t}\n\t\t},\n\n\t\tgetPointBackgroundColor: function(point, index) {\n\t\t\tvar backgroundColor = this.chart.options.elements.point.backgroundColor;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (custom.backgroundColor) {\n\t\t\t\tbackgroundColor = custom.backgroundColor;\n\t\t\t} else if (dataset.pointBackgroundColor) {\n\t\t\t\tbackgroundColor = helpers.getValueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);\n\t\t\t} else if (dataset.backgroundColor) {\n\t\t\t\tbackgroundColor = dataset.backgroundColor;\n\t\t\t}\n\n\t\t\treturn backgroundColor;\n\t\t},\n\n\t\tgetPointBorderColor: function(point, index) {\n\t\t\tvar borderColor = this.chart.options.elements.point.borderColor;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (custom.borderColor) {\n\t\t\t\tborderColor = custom.borderColor;\n\t\t\t} else if (dataset.pointBorderColor) {\n\t\t\t\tborderColor = helpers.getValueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);\n\t\t\t} else if (dataset.borderColor) {\n\t\t\t\tborderColor = dataset.borderColor;\n\t\t\t}\n\n\t\t\treturn borderColor;\n\t\t},\n\n\t\tgetPointBorderWidth: function(point, index) {\n\t\t\tvar borderWidth = this.chart.options.elements.point.borderWidth;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (custom.borderWidth) {\n\t\t\t\tborderWidth = custom.borderWidth;\n\t\t\t} else if (dataset.pointBorderWidth) {\n\t\t\t\tborderWidth = helpers.getValueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);\n\t\t\t} else if (dataset.borderWidth) {\n\t\t\t\tborderWidth = dataset.borderWidth;\n\t\t\t}\n\n\t\t\treturn borderWidth;\n\t\t},\n\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar datasetIndex = me.index;\n\t\t\tvar value = dataset.data[index];\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar pointOptions = me.chart.options.elements.point;\n\t\t\tvar x, y;\n\t\t\tvar labels = me.chart.data.labels || [];\n\t\t\tvar includeOffset = (labels.length === 1 || dataset.data.length === 1) || me.chart.isCombo;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\t\t\tif ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\n\t\t\t\tdataset.pointHitRadius = dataset.hitRadius;\n\t\t\t}\n\n\t\t\tx = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex, includeOffset);\n\t\t\ty = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex);\n\n\t\t\t// Utility\n\t\t\tpoint._xScale = xScale;\n\t\t\tpoint._yScale = yScale;\n\t\t\tpoint._datasetIndex = datasetIndex;\n\t\t\tpoint._index = index;\n\n\t\t\t// Desired view properties\n\t\t\tpoint._model = {\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t\t// Appearance\n\t\t\t\tradius: custom.radius || helpers.getValueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),\n\t\t\t\tpointStyle: custom.pointStyle || helpers.getValueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),\n\t\t\t\tbackgroundColor: me.getPointBackgroundColor(point, index),\n\t\t\t\tborderColor: me.getPointBorderColor(point, index),\n\t\t\t\tborderWidth: me.getPointBorderWidth(point, index),\n\t\t\t\ttension: meta.dataset._model ? meta.dataset._model.tension : 0,\n\t\t\t\tsteppedLine: meta.dataset._model ? meta.dataset._model.steppedLine : false,\n\t\t\t\t// Tooltip\n\t\t\t\thitRadius: custom.hitRadius || helpers.getValueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)\n\t\t\t};\n\t\t},\n\n\t\tcalculatePointY: function(value, index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar sumPos = 0;\n\t\t\tvar sumNeg = 0;\n\t\t\tvar i, ds, dsMeta;\n\n\t\t\tif (yScale.options.stacked) {\n\t\t\t\tfor (i = 0; i < datasetIndex; i++) {\n\t\t\t\t\tds = chart.data.datasets[i];\n\t\t\t\t\tdsMeta = chart.getDatasetMeta(i);\n\t\t\t\t\tif (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n\t\t\t\t\t\tvar stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\t\t\t\t\t\tif (stackedRightValue < 0) {\n\t\t\t\t\t\t\tsumNeg += stackedRightValue || 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsumPos += stackedRightValue || 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar rightValue = Number(yScale.getRightValue(value));\n\t\t\t\tif (rightValue < 0) {\n\t\t\t\t\treturn yScale.getPixelForValue(sumNeg + rightValue);\n\t\t\t\t}\n\t\t\t\treturn yScale.getPixelForValue(sumPos + rightValue);\n\t\t\t}\n\n\t\t\treturn yScale.getPixelForValue(value);\n\t\t},\n\n\t\tupdateBezierControlPoints: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar area = me.chart.chartArea;\n\t\t\tvar points = (meta.data || []);\n\t\t\tvar i, ilen, point, model, controlPoints;\n\n\t\t\t// Only consider points that are drawn in case the spanGaps option is used\n\t\t\tif (meta.dataset._model.spanGaps) {\n\t\t\t\tpoints = points.filter(function(pt) {\n\t\t\t\t\treturn !pt._model.skip;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfunction capControlPoint(pt, min, max) {\n\t\t\t\treturn Math.max(Math.min(pt, max), min);\n\t\t\t}\n\n\t\t\tif (meta.dataset._model.cubicInterpolationMode === 'monotone') {\n\t\t\t\thelpers.splineCurveMonotone(points);\n\t\t\t} else {\n\t\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\t\tpoint = points[i];\n\t\t\t\t\tmodel = point._model;\n\t\t\t\t\tcontrolPoints = helpers.splineCurve(\n\t\t\t\t\t\thelpers.previousItem(points, i)._model,\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\thelpers.nextItem(points, i)._model,\n\t\t\t\t\t\tmeta.dataset._model.tension\n\t\t\t\t\t);\n\t\t\t\t\tmodel.controlPointPreviousX = controlPoints.previous.x;\n\t\t\t\t\tmodel.controlPointPreviousY = controlPoints.previous.y;\n\t\t\t\t\tmodel.controlPointNextX = controlPoints.next.x;\n\t\t\t\t\tmodel.controlPointNextY = controlPoints.next.y;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (me.chart.options.elements.line.capBezierPoints) {\n\t\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\t\tmodel = points[i]._model;\n\t\t\t\t\tmodel.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n\t\t\t\t\tmodel.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n\t\t\t\t\tmodel.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n\t\t\t\t\tmodel.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tdraw: function(ease) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar points = meta.data || [];\n\t\t\tvar easingDecimal = ease || 1;\n\t\t\tvar i, ilen;\n\n\t\t\t// Transition Point Locations\n\t\t\tfor (i=0, ilen=points.length; i<ilen; ++i) {\n\t\t\t\tpoints[i].transition(easingDecimal);\n\t\t\t}\n\n\t\t\t// Transition and Draw the line\n\t\t\tif (lineEnabled(me.getDataset(), me.chart.options)) {\n\t\t\t\tmeta.dataset.transition(easingDecimal).draw();\n\t\t\t}\n\n\t\t\t// Draw the points\n\t\t\tfor (i=0, ilen=points.length; i<ilen; ++i) {\n\t\t\t\tpoints[i].draw();\n\t\t\t}\n\t\t},\n\n\t\tsetHoverStyle: function(point) {\n\t\t\t// Point\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\tvar index = point._index;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar model = point._model;\n\n\t\t\tmodel.radius = custom.hoverRadius || helpers.getValueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor || helpers.getValueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor || helpers.getValueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth || helpers.getValueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\tremoveHoverStyle: function(point) {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.chart.data.datasets[point._datasetIndex];\n\t\t\tvar index = point._index;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar model = point._model;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\n\t\t\tmodel.radius = custom.radius || helpers.getValueAtIndexOrDefault(dataset.pointRadius, index, me.chart.options.elements.point.radius);\n\t\t\tmodel.backgroundColor = me.getPointBackgroundColor(point, index);\n\t\t\tmodel.borderColor = me.getPointBorderColor(point, index);\n\t\t\tmodel.borderWidth = me.getPointBorderWidth(point, index);\n\t\t}\n\t});\n};\n\n},{}],19:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\tChart.defaults.polarArea = {\n\n\t\tscale: {\n\t\t\ttype: 'radialLinear',\n\t\t\tlineArc: true, // so that lines are circular\n\t\t\tticks: {\n\t\t\t\tbeginAtZero: true\n\t\t\t}\n\t\t},\n\n\t\t// Boolean - Whether to animate the rotation of the chart\n\t\tanimation: {\n\t\t\tanimateRotate: true,\n\t\t\tanimateScale: true\n\t\t},\n\n\t\tstartAngle: -0.5 * Math.PI,\n\t\taspectRatio: 1,\n\t\tlegendCallback: function(chart) {\n\t\t\tvar text = [];\n\t\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\t\tvar data = chart.data;\n\t\t\tvar datasets = data.datasets;\n\t\t\tvar labels = data.labels;\n\n\t\t\tif (datasets.length) {\n\t\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\">');\n\t\t\t\t\tif (labels[i]) {\n\t\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t\t}\n\t\t\t\t\ttext.push('</span></li>');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttext.push('</ul>');\n\t\t\treturn text.join('');\n\t\t},\n\t\tlegend: {\n\t\t\tlabels: {\n\t\t\t\tgenerateLabels: function(chart) {\n\t\t\t\t\tvar data = chart.data;\n\t\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\t\tvar custom = arc.custom || {};\n\t\t\t\t\t\t\tvar getValueAtIndexOrDefault = helpers.getValueAtIndexOrDefault;\n\t\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : getValueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n\t\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : getValueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n\t\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : getValueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonClick: function(e, legendItem) {\n\t\t\t\tvar index = legendItem.index;\n\t\t\t\tvar chart = this.chart;\n\t\t\t\tvar i, ilen, meta;\n\n\t\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t\t}\n\n\t\t\t\tchart.update();\n\t\t\t}\n\t\t},\n\n\t\t// Need to override these to give a nice default\n\t\ttooltips: {\n\t\t\tcallbacks: {\n\t\t\t\ttitle: function() {\n\t\t\t\t\treturn '';\n\t\t\t\t},\n\t\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\t\treturn data.labels[tooltipItem.index] + ': ' + tooltipItem.yLabel;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tChart.controllers.polarArea = Chart.DatasetController.extend({\n\n\t\tdataElementType: Chart.elements.Arc,\n\n\t\tlinkScales: helpers.noop,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar opts = chart.options;\n\t\t\tvar arcOpts = opts.elements.arc;\n\t\t\tvar minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\t\t\tchart.outerRadius = Math.max((minSize - arcOpts.borderWidth / 2) / 2, 0);\n\t\t\tchart.innerRadius = Math.max(opts.cutoutPercentage ? (chart.outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\n\t\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.index);\n\t\t\tme.innerRadius = me.outerRadius - chart.radiusLength;\n\n\t\t\tmeta.count = me.countVisibleElements();\n\n\t\t\thelpers.each(meta.data, function(arc, index) {\n\t\t\t\tme.updateElement(arc, index, reset);\n\t\t\t});\n\t\t},\n\n\t\tupdateElement: function(arc, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar opts = chart.options;\n\t\t\tvar animationOpts = opts.animation;\n\t\t\tvar scale = chart.scale;\n\t\t\tvar getValueAtIndexOrDefault = helpers.getValueAtIndexOrDefault;\n\t\t\tvar labels = chart.data.labels;\n\n\t\t\tvar circumference = me.calculateCircumference(dataset.data[index]);\n\t\t\tvar centerX = scale.xCenter;\n\t\t\tvar centerY = scale.yCenter;\n\n\t\t\t// If there is NaN data before us, we need to calculate the starting angle correctly.\n\t\t\t// We could be way more efficient here, but its unlikely that the polar area chart will have a lot of data\n\t\t\tvar visibleCount = 0;\n\t\t\tvar meta = me.getMeta();\n\t\t\tfor (var i = 0; i < index; ++i) {\n\t\t\t\tif (!isNaN(dataset.data[i]) && !meta.data[i].hidden) {\n\t\t\t\t\t++visibleCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// var negHalfPI = -0.5 * Math.PI;\n\t\t\tvar datasetStartAngle = opts.startAngle;\n\t\t\tvar distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\t\t\tvar startAngle = datasetStartAngle + (circumference * visibleCount);\n\t\t\tvar endAngle = startAngle + (arc.hidden ? 0 : circumference);\n\n\t\t\tvar resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\n\t\t\thelpers.extend(arc, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\t\t\t\t_scale: scale,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: centerX,\n\t\t\t\t\ty: centerY,\n\t\t\t\t\tinnerRadius: 0,\n\t\t\t\t\touterRadius: reset ? resetRadius : distance,\n\t\t\t\t\tstartAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n\t\t\t\t\tendAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n\t\t\t\t\tlabel: getValueAtIndexOrDefault(labels, index, labels[index])\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Apply border and fill style\n\t\t\tme.removeHoverStyle(arc);\n\n\t\t\tarc.pivot();\n\t\t},\n\n\t\tremoveHoverStyle: function(arc) {\n\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\n\t\t},\n\n\t\tcountVisibleElements: function() {\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar count = 0;\n\n\t\t\thelpers.each(meta.data, function(element, index) {\n\t\t\t\tif (!isNaN(dataset.data[index]) && !element.hidden) {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn count;\n\t\t},\n\n\t\tcalculateCircumference: function(value) {\n\t\t\tvar count = this.getMeta().count;\n\t\t\tif (count > 0 && !isNaN(value)) {\n\t\t\t\treturn (2 * Math.PI) / count;\n\t\t\t}\n\t\t\treturn 0;\n\t\t}\n\t});\n};\n\n},{}],20:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\tChart.defaults.radar = {\n\t\tscale: {\n\t\t\ttype: 'radialLinear'\n\t\t},\n\t\telements: {\n\t\t\tline: {\n\t\t\t\ttension: 0 // no bezier in radar\n\t\t\t}\n\t\t}\n\t};\n\n\tChart.controllers.radar = Chart.DatasetController.extend({\n\n\t\tdatasetElementType: Chart.elements.Line,\n\n\t\tdataElementType: Chart.elements.Point,\n\n\t\tlinkScales: helpers.noop,\n\n\t\taddElementAndReset: function(index) {\n\t\t\tChart.DatasetController.prototype.addElementAndReset.call(this, index);\n\n\t\t\t// Make sure bezier control points are updated\n\t\t\tthis.updateBezierControlPoints();\n\t\t},\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar line = meta.dataset;\n\t\t\tvar points = meta.data;\n\t\t\tvar custom = line.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar lineElementOptions = me.chart.options.elements.line;\n\t\t\tvar scale = me.chart.scale;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t}\n\n\t\t\thelpers.extend(meta.dataset, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t// Data\n\t\t\t\t_children: points,\n\t\t\t\t_loop: true,\n\t\t\t\t// Model\n\t\t\t\t_model: {\n\t\t\t\t\t// Appearance\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.getValueOrDefault(dataset.lineTension, lineElementOptions.tension),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\n\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\n\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\n\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\n\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\n\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\n\n\t\t\t\t\t// Scale\n\t\t\t\t\tscaleTop: scale.top,\n\t\t\t\t\tscaleBottom: scale.bottom,\n\t\t\t\t\tscaleZero: scale.getBasePosition()\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmeta.dataset.pivot();\n\n\t\t\t// Update Points\n\t\t\thelpers.each(points, function(point, index) {\n\t\t\t\tme.updateElement(point, index, reset);\n\t\t\t}, me);\n\n\n\t\t\t// Update bezier control points\n\t\t\tme.updateBezierControlPoints();\n\t\t},\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar scale = me.chart.scale;\n\t\t\tvar pointElementOptions = me.chart.options.elements.point;\n\t\t\tvar pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n\t\t\thelpers.extend(point, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\t\t\t\t_scale: scale,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: reset ? scale.xCenter : pointPosition.x, // value not used in dataset scale, but we want a consistent API between scales\n\t\t\t\t\ty: reset ? scale.yCenter : pointPosition.y,\n\n\t\t\t\t\t// Appearance\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.getValueOrDefault(dataset.tension, me.chart.options.elements.line.tension),\n\t\t\t\t\tradius: custom.radius ? custom.radius : helpers.getValueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth),\n\t\t\t\t\tpointStyle: custom.pointStyle ? custom.pointStyle : helpers.getValueAtIndexOrDefault(dataset.pointStyle, index, pointElementOptions.pointStyle),\n\n\t\t\t\t\t// Tooltip\n\t\t\t\t\thitRadius: custom.hitRadius ? custom.hitRadius : helpers.getValueAtIndexOrDefault(dataset.hitRadius, index, pointElementOptions.hitRadius)\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tpoint._model.skip = custom.skip ? custom.skip : (isNaN(point._model.x) || isNaN(point._model.y));\n\t\t},\n\t\tupdateBezierControlPoints: function() {\n\t\t\tvar chartArea = this.chart.chartArea;\n\t\t\tvar meta = this.getMeta();\n\n\t\t\thelpers.each(meta.data, function(point, index) {\n\t\t\t\tvar model = point._model;\n\t\t\t\tvar controlPoints = helpers.splineCurve(\n\t\t\t\t\thelpers.previousItem(meta.data, index, true)._model,\n\t\t\t\t\tmodel,\n\t\t\t\t\thelpers.nextItem(meta.data, index, true)._model,\n\t\t\t\t\tmodel.tension\n\t\t\t\t);\n\n\t\t\t\t// Prevent the bezier going outside of the bounds of the graph\n\t\t\t\tmodel.controlPointPreviousX = Math.max(Math.min(controlPoints.previous.x, chartArea.right), chartArea.left);\n\t\t\t\tmodel.controlPointPreviousY = Math.max(Math.min(controlPoints.previous.y, chartArea.bottom), chartArea.top);\n\n\t\t\t\tmodel.controlPointNextX = Math.max(Math.min(controlPoints.next.x, chartArea.right), chartArea.left);\n\t\t\t\tmodel.controlPointNextY = Math.max(Math.min(controlPoints.next.y, chartArea.bottom), chartArea.top);\n\n\t\t\t\t// Now pivot the point for animation\n\t\t\t\tpoint.pivot();\n\t\t\t});\n\t\t},\n\n\t\tdraw: function(ease) {\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar easingDecimal = ease || 1;\n\n\t\t\t// Transition Point Locations\n\t\t\thelpers.each(meta.data, function(point) {\n\t\t\t\tpoint.transition(easingDecimal);\n\t\t\t});\n\n\t\t\t// Transition and Draw the line\n\t\t\tmeta.dataset.transition(easingDecimal).draw();\n\n\t\t\t// Draw the points\n\t\t\thelpers.each(meta.data, function(point) {\n\t\t\t\tpoint.draw();\n\t\t\t});\n\t\t},\n\n\t\tsetHoverStyle: function(point) {\n\t\t\t// Point\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar index = point._index;\n\t\t\tvar model = point._model;\n\n\t\t\tmodel.radius = custom.hoverRadius ? custom.hoverRadius : helpers.getValueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.getValueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.getValueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.getValueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\tremoveHoverStyle: function(point) {\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar index = point._index;\n\t\t\tvar model = point._model;\n\t\t\tvar pointElementOptions = this.chart.options.elements.point;\n\n\t\t\tmodel.radius = custom.radius ? custom.radius : helpers.getValueAtIndexOrDefault(dataset.radius, index, pointElementOptions.radius);\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth);\n\t\t}\n\t});\n};\n\n},{}],21:[function(require,module,exports){\n/* global window: false */\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\tChart.defaults.global.animation = {\n\t\tduration: 1000,\n\t\teasing: 'easeOutQuart',\n\t\tonProgress: helpers.noop,\n\t\tonComplete: helpers.noop\n\t};\n\n\tChart.Animation = Chart.Element.extend({\n\t\tcurrentStep: null, // the current animation step\n\t\tnumSteps: 60, // default number of steps\n\t\teasing: '', // the easing to use for this animation\n\t\trender: null, // render function used by the animation service\n\n\t\tonAnimationProgress: null, // user specified callback to fire on each step of the animation\n\t\tonAnimationComplete: null // user specified callback to fire when the animation finishes\n\t});\n\n\tChart.animationService = {\n\t\tframeDuration: 17,\n\t\tanimations: [],\n\t\tdropFrames: 0,\n\t\trequest: null,\n\t\taddAnimation: function(chartInstance, animationObject, duration, lazy) {\n\t\t\tvar me = this;\n\n\t\t\tif (!lazy) {\n\t\t\t\tchartInstance.animating = true;\n\t\t\t}\n\n\t\t\tfor (var index = 0; index < me.animations.length; ++index) {\n\t\t\t\tif (me.animations[index].chartInstance === chartInstance) {\n\t\t\t\t\t// replacing an in progress animation\n\t\t\t\t\tme.animations[index].animationObject = animationObject;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.animations.push({\n\t\t\t\tchartInstance: chartInstance,\n\t\t\t\tanimationObject: animationObject\n\t\t\t});\n\n\t\t\t// If there are no animations queued, manually kickstart a digest, for lack of a better word\n\t\t\tif (me.animations.length === 1) {\n\t\t\t\tme.requestAnimationFrame();\n\t\t\t}\n\t\t},\n\t\t// Cancel the animation for a given chart instance\n\t\tcancelAnimation: function(chartInstance) {\n\t\t\tvar index = helpers.findIndex(this.animations, function(animationWrapper) {\n\t\t\t\treturn animationWrapper.chartInstance === chartInstance;\n\t\t\t});\n\n\t\t\tif (index !== -1) {\n\t\t\t\tthis.animations.splice(index, 1);\n\t\t\t\tchartInstance.animating = false;\n\t\t\t}\n\t\t},\n\t\trequestAnimationFrame: function() {\n\t\t\tvar me = this;\n\t\t\tif (me.request === null) {\n\t\t\t\t// Skip animation frame requests until the active one is executed.\n\t\t\t\t// This can happen when processing mouse events, e.g. 'mousemove'\n\t\t\t\t// and 'mouseout' events will trigger multiple renders.\n\t\t\t\tme.request = helpers.requestAnimFrame.call(window, function() {\n\t\t\t\t\tme.request = null;\n\t\t\t\t\tme.startDigest();\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tstartDigest: function() {\n\t\t\tvar me = this;\n\n\t\t\tvar startTime = Date.now();\n\t\t\tvar framesToDrop = 0;\n\n\t\t\tif (me.dropFrames > 1) {\n\t\t\t\tframesToDrop = Math.floor(me.dropFrames);\n\t\t\t\tme.dropFrames = me.dropFrames % 1;\n\t\t\t}\n\n\t\t\tvar i = 0;\n\t\t\twhile (i < me.animations.length) {\n\t\t\t\tif (me.animations[i].animationObject.currentStep === null) {\n\t\t\t\t\tme.animations[i].animationObject.currentStep = 0;\n\t\t\t\t}\n\n\t\t\t\tme.animations[i].animationObject.currentStep += 1 + framesToDrop;\n\n\t\t\t\tif (me.animations[i].animationObject.currentStep > me.animations[i].animationObject.numSteps) {\n\t\t\t\t\tme.animations[i].animationObject.currentStep = me.animations[i].animationObject.numSteps;\n\t\t\t\t}\n\n\t\t\t\tme.animations[i].animationObject.render(me.animations[i].chartInstance, me.animations[i].animationObject);\n\t\t\t\tif (me.animations[i].animationObject.onAnimationProgress && me.animations[i].animationObject.onAnimationProgress.call) {\n\t\t\t\t\tme.animations[i].animationObject.onAnimationProgress.call(me.animations[i].chartInstance, me.animations[i]);\n\t\t\t\t}\n\n\t\t\t\tif (me.animations[i].animationObject.currentStep === me.animations[i].animationObject.numSteps) {\n\t\t\t\t\tif (me.animations[i].animationObject.onAnimationComplete && me.animations[i].animationObject.onAnimationComplete.call) {\n\t\t\t\t\t\tme.animations[i].animationObject.onAnimationComplete.call(me.animations[i].chartInstance, me.animations[i]);\n\t\t\t\t\t}\n\n\t\t\t\t\t// executed the last frame. Remove the animation.\n\t\t\t\t\tme.animations[i].chartInstance.animating = false;\n\n\t\t\t\t\tme.animations.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\t++i;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar endTime = Date.now();\n\t\t\tvar dropFrames = (endTime - startTime) / me.frameDuration;\n\n\t\t\tme.dropFrames += dropFrames;\n\n\t\t\t// Do we have more stuff to animate?\n\t\t\tif (me.animations.length > 0) {\n\t\t\t\tme.requestAnimationFrame();\n\t\t\t}\n\t\t}\n\t};\n};\n\n},{}],22:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\t// Global Chart canvas helpers object for drawing items to canvas\n\tvar helpers = Chart.canvasHelpers = {};\n\n\thelpers.drawPoint = function(ctx, pointStyle, radius, x, y) {\n\t\tvar type, edgeLength, xOffset, yOffset, height, size;\n\n\t\tif (typeof pointStyle === 'object') {\n\t\t\ttype = pointStyle.toString();\n\t\t\tif (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n\t\t\t\tctx.drawImage(pointStyle, x - pointStyle.width / 2, y - pointStyle.height / 2);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (isNaN(radius) || radius <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (pointStyle) {\n\t\t// Default includes circle\n\t\tdefault:\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(x, y, radius, 0, Math.PI * 2);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'triangle':\n\t\t\tctx.beginPath();\n\t\t\tedgeLength = 3 * radius / Math.sqrt(3);\n\t\t\theight = edgeLength * Math.sqrt(3) / 2;\n\t\t\tctx.moveTo(x - edgeLength / 2, y + height / 3);\n\t\t\tctx.lineTo(x + edgeLength / 2, y + height / 3);\n\t\t\tctx.lineTo(x, y - 2 * height / 3);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'rect':\n\t\t\tsize = 1 / Math.SQRT2 * radius;\n\t\t\tctx.beginPath();\n\t\t\tctx.fillRect(x - size, y - size, 2 * size, 2 * size);\n\t\t\tctx.strokeRect(x - size, y - size, 2 * size, 2 * size);\n\t\t\tbreak;\n\t\tcase 'rectRot':\n\t\t\tsize = 1 / Math.SQRT2 * radius;\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x - size, y);\n\t\t\tctx.lineTo(x, y + size);\n\t\t\tctx.lineTo(x + size, y);\n\t\t\tctx.lineTo(x, y - size);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'cross':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x, y + radius);\n\t\t\tctx.lineTo(x, y - radius);\n\t\t\tctx.moveTo(x - radius, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'crossRot':\n\t\t\tctx.beginPath();\n\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\n\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x - xOffset, y + yOffset);\n\t\t\tctx.lineTo(x + xOffset, y - yOffset);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'star':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x, y + radius);\n\t\t\tctx.lineTo(x, y - radius);\n\t\t\tctx.moveTo(x - radius, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\n\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x - xOffset, y + yOffset);\n\t\t\tctx.lineTo(x + xOffset, y - yOffset);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'line':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x - radius, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'dash':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\t}\n\n\t\tctx.stroke();\n\t};\n};\n\n},{}],23:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\t// Create a dictionary of chart types, to allow for extension of existing types\n\tChart.types = {};\n\n\t// Store a reference to each instance - allowing us to globally resize chart instances on window resize.\n\t// Destroy method on the chart will remove the instance of the chart from this reference.\n\tChart.instances = {};\n\n\t// Controllers available for dataset visualization eg. bar, line, slice, etc.\n\tChart.controllers = {};\n\n\t/**\n\t * @class Chart.Controller\n\t * The main controller of a chart.\n\t */\n\tChart.Controller = function(instance) {\n\n\t\tthis.chart = instance;\n\t\tthis.config = instance.config;\n\t\tthis.options = this.config.options = helpers.configMerge(Chart.defaults.global, Chart.defaults[this.config.type], this.config.options || {});\n\t\tthis.id = helpers.uid();\n\n\t\tObject.defineProperty(this, 'data', {\n\t\t\tget: function() {\n\t\t\t\treturn this.config.data;\n\t\t\t}\n\t\t});\n\n\t\t// Add the chart instance to the global namespace\n\t\tChart.instances[this.id] = this;\n\n\t\tif (this.options.responsive) {\n\t\t\t// Silent resize before chart draws\n\t\t\tthis.resize(true);\n\t\t}\n\n\t\tthis.initialize();\n\n\t\treturn this;\n\t};\n\n\thelpers.extend(Chart.Controller.prototype, /** @lends Chart.Controller */ {\n\n\t\tinitialize: function() {\n\t\t\tvar me = this;\n\t\t\t// Before init plugin notification\n\t\t\tChart.plugins.notify('beforeInit', [me]);\n\n\t\t\tme.bindEvents();\n\n\t\t\t// Make sure controllers are built first so that each dataset is bound to an axis before the scales\n\t\t\t// are built\n\t\t\tme.ensureScalesHaveIDs();\n\t\t\tme.buildOrUpdateControllers();\n\t\t\tme.buildScales();\n\t\t\tme.updateLayout();\n\t\t\tme.resetElements();\n\t\t\tme.initToolTip();\n\t\t\tme.update();\n\n\t\t\t// After init plugin notification\n\t\t\tChart.plugins.notify('afterInit', [me]);\n\n\t\t\treturn me;\n\t\t},\n\n\t\tclear: function() {\n\t\t\thelpers.clear(this.chart);\n\t\t\treturn this;\n\t\t},\n\n\t\tstop: function() {\n\t\t\t// Stops any current animation loop occuring\n\t\t\tChart.animationService.cancelAnimation(this);\n\t\t\treturn this;\n\t\t},\n\n\t\tresize: function(silent) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar canvas = chart.canvas;\n\t\t\tvar newWidth = helpers.getMaximumWidth(canvas);\n\t\t\tvar aspectRatio = chart.aspectRatio;\n\t\t\tvar newHeight = (me.options.maintainAspectRatio && isNaN(aspectRatio) === false && isFinite(aspectRatio) && aspectRatio !== 0) ? newWidth / aspectRatio : helpers.getMaximumHeight(canvas);\n\n\t\t\tvar sizeChanged = chart.width !== newWidth || chart.height !== newHeight;\n\n\t\t\tif (!sizeChanged) {\n\t\t\t\treturn me;\n\t\t\t}\n\n\t\t\tcanvas.width = chart.width = newWidth;\n\t\t\tcanvas.height = chart.height = newHeight;\n\n\t\t\thelpers.retinaScale(chart);\n\n\t\t\t// Notify any plugins about the resize\n\t\t\tvar newSize = {width: newWidth, height: newHeight};\n\t\t\tChart.plugins.notify('resize', [me, newSize]);\n\n\t\t\t// Notify of resize\n\t\t\tif (me.options.onResize) {\n\t\t\t\tme.options.onResize(me, newSize);\n\t\t\t}\n\n\t\t\tif (!silent) {\n\t\t\t\tme.stop();\n\t\t\t\tme.update(me.options.responsiveAnimationDuration);\n\t\t\t}\n\n\t\t\treturn me;\n\t\t},\n\n\t\tensureScalesHaveIDs: function() {\n\t\t\tvar options = this.options;\n\t\t\tvar scalesOptions = options.scales || {};\n\t\t\tvar scaleOptions = options.scale;\n\n\t\t\thelpers.each(scalesOptions.xAxes, function(xAxisOptions, index) {\n\t\t\t\txAxisOptions.id = xAxisOptions.id || ('x-axis-' + index);\n\t\t\t});\n\n\t\t\thelpers.each(scalesOptions.yAxes, function(yAxisOptions, index) {\n\t\t\t\tyAxisOptions.id = yAxisOptions.id || ('y-axis-' + index);\n\t\t\t});\n\n\t\t\tif (scaleOptions) {\n\t\t\t\tscaleOptions.id = scaleOptions.id || 'scale';\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Builds a map of scale ID to scale object for future lookup.\n\t\t */\n\t\tbuildScales: function() {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar scales = me.scales = {};\n\t\t\tvar items = [];\n\n\t\t\tif (options.scales) {\n\t\t\t\titems = items.concat(\n\t\t\t\t\t(options.scales.xAxes || []).map(function(xAxisOptions) {\n\t\t\t\t\t\treturn {options: xAxisOptions, dtype: 'category'};\n\t\t\t\t\t}),\n\t\t\t\t\t(options.scales.yAxes || []).map(function(yAxisOptions) {\n\t\t\t\t\t\treturn {options: yAxisOptions, dtype: 'linear'};\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (options.scale) {\n\t\t\t\titems.push({options: options.scale, dtype: 'radialLinear', isDefault: true});\n\t\t\t}\n\n\t\t\thelpers.each(items, function(item) {\n\t\t\t\tvar scaleOptions = item.options;\n\t\t\t\tvar scaleType = helpers.getValueOrDefault(scaleOptions.type, item.dtype);\n\t\t\t\tvar scaleClass = Chart.scaleService.getScaleConstructor(scaleType);\n\t\t\t\tif (!scaleClass) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar scale = new scaleClass({\n\t\t\t\t\tid: scaleOptions.id,\n\t\t\t\t\toptions: scaleOptions,\n\t\t\t\t\tctx: me.chart.ctx,\n\t\t\t\t\tchart: me\n\t\t\t\t});\n\n\t\t\t\tscales[scale.id] = scale;\n\n\t\t\t\t// TODO(SB): I think we should be able to remove this custom case (options.scale)\n\t\t\t\t// and consider it as a regular scale part of the \"scales\"\" map only! This would\n\t\t\t\t// make the logic easier and remove some useless? custom code.\n\t\t\t\tif (item.isDefault) {\n\t\t\t\t\tme.scale = scale;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tChart.scaleService.addScalesToLayout(this);\n\t\t},\n\n\t\tupdateLayout: function() {\n\t\t\tChart.layoutService.update(this, this.chart.width, this.chart.height);\n\t\t},\n\n\t\tbuildOrUpdateControllers: function() {\n\t\t\tvar me = this;\n\t\t\tvar types = [];\n\t\t\tvar newControllers = [];\n\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = me.getDatasetMeta(datasetIndex);\n\t\t\t\tif (!meta.type) {\n\t\t\t\t\tmeta.type = dataset.type || me.config.type;\n\t\t\t\t}\n\n\t\t\t\ttypes.push(meta.type);\n\n\t\t\t\tif (meta.controller) {\n\t\t\t\t\tmeta.controller.updateIndex(datasetIndex);\n\t\t\t\t} else {\n\t\t\t\t\tmeta.controller = new Chart.controllers[meta.type](me, datasetIndex);\n\t\t\t\t\tnewControllers.push(meta.controller);\n\t\t\t\t}\n\t\t\t}, me);\n\n\t\t\tif (types.length > 1) {\n\t\t\t\tfor (var i = 1; i < types.length; i++) {\n\t\t\t\t\tif (types[i] !== types[i - 1]) {\n\t\t\t\t\t\tme.isCombo = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn newControllers;\n\t\t},\n\n\t\tresetElements: function() {\n\t\t\tvar me = this;\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tme.getDatasetMeta(datasetIndex).controller.reset();\n\t\t\t}, me);\n\t\t},\n\n\t\tupdate: function(animationDuration, lazy) {\n\t\t\tvar me = this;\n\t\t\tChart.plugins.notify('beforeUpdate', [me]);\n\n\t\t\t// In case the entire data object changed\n\t\t\tme.tooltip._data = me.data;\n\n\t\t\t// Make sure dataset controllers are updated and new controllers are reset\n\t\t\tvar newControllers = me.buildOrUpdateControllers();\n\n\t\t\t// Make sure all dataset controllers have correct meta data counts\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tme.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n\t\t\t}, me);\n\n\t\t\tChart.layoutService.update(me, me.chart.width, me.chart.height);\n\n\t\t\t// Apply changes to the dataets that require the scales to have been calculated i.e BorderColor chages\n\t\t\tChart.plugins.notify('afterScaleUpdate', [me]);\n\n\t\t\t// Can only reset the new controllers after the scales have been updated\n\t\t\thelpers.each(newControllers, function(controller) {\n\t\t\t\tcontroller.reset();\n\t\t\t});\n\n\t\t\tme.updateDatasets();\n\n\t\t\t// Do this before render so that any plugins that need final scale updates can use it\n\t\t\tChart.plugins.notify('afterUpdate', [me]);\n\n\t\t\tme.render(animationDuration, lazy);\n\t\t},\n\n\t\t/**\n\t\t * @method beforeDatasetsUpdate\n\t\t * @description Called before all datasets are updated. If a plugin returns false,\n\t\t * the datasets update will be cancelled until another chart update is triggered.\n\t\t * @param {Object} instance the chart instance being updated.\n\t\t * @returns {Boolean} false to cancel the datasets update.\n\t\t * @memberof Chart.PluginBase\n\t\t * @since version 2.1.5\n\t\t * @instance\n\t\t */\n\n\t\t/**\n\t\t * @method afterDatasetsUpdate\n\t\t * @description Called after all datasets have been updated. Note that this\n\t\t * extension will not be called if the datasets update has been cancelled.\n\t\t * @param {Object} instance the chart instance being updated.\n\t\t * @memberof Chart.PluginBase\n\t\t * @since version 2.1.5\n\t\t * @instance\n\t\t */\n\n\t\t/**\n\t\t * Updates all datasets unless a plugin returns false to the beforeDatasetsUpdate\n\t\t * extension, in which case no datasets will be updated and the afterDatasetsUpdate\n\t\t * notification will be skipped.\n\t\t * @protected\n\t\t * @instance\n\t\t */\n\t\tupdateDatasets: function() {\n\t\t\tvar me = this;\n\t\t\tvar i, ilen;\n\n\t\t\tif (Chart.plugins.notify('beforeDatasetsUpdate', [me])) {\n\t\t\t\tfor (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\t\t\tme.getDatasetMeta(i).controller.update();\n\t\t\t\t}\n\n\t\t\t\tChart.plugins.notify('afterDatasetsUpdate', [me]);\n\t\t\t}\n\t\t},\n\n\t\trender: function(duration, lazy) {\n\t\t\tvar me = this;\n\t\t\tChart.plugins.notify('beforeRender', [me]);\n\n\t\t\tvar animationOptions = me.options.animation;\n\t\t\tif (animationOptions && ((typeof duration !== 'undefined' && duration !== 0) || (typeof duration === 'undefined' && animationOptions.duration !== 0))) {\n\t\t\t\tvar animation = new Chart.Animation();\n\t\t\t\tanimation.numSteps = (duration || animationOptions.duration) / 16.66; // 60 fps\n\t\t\t\tanimation.easing = animationOptions.easing;\n\n\t\t\t\t// render function\n\t\t\t\tanimation.render = function(chartInstance, animationObject) {\n\t\t\t\t\tvar easingFunction = helpers.easingEffects[animationObject.easing];\n\t\t\t\t\tvar stepDecimal = animationObject.currentStep / animationObject.numSteps;\n\t\t\t\t\tvar easeDecimal = easingFunction(stepDecimal);\n\n\t\t\t\t\tchartInstance.draw(easeDecimal, stepDecimal, animationObject.currentStep);\n\t\t\t\t};\n\n\t\t\t\t// user events\n\t\t\t\tanimation.onAnimationProgress = animationOptions.onProgress;\n\t\t\t\tanimation.onAnimationComplete = animationOptions.onComplete;\n\n\t\t\t\tChart.animationService.addAnimation(me, animation, duration, lazy);\n\t\t\t} else {\n\t\t\t\tme.draw();\n\t\t\t\tif (animationOptions && animationOptions.onComplete && animationOptions.onComplete.call) {\n\t\t\t\t\tanimationOptions.onComplete.call(me);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn me;\n\t\t},\n\n\t\tdraw: function(ease) {\n\t\t\tvar me = this;\n\t\t\tvar easingDecimal = ease || 1;\n\t\t\tme.clear();\n\n\t\t\tChart.plugins.notify('beforeDraw', [me, easingDecimal]);\n\n\t\t\t// Draw all the scales\n\t\t\thelpers.each(me.boxes, function(box) {\n\t\t\t\tbox.draw(me.chartArea);\n\t\t\t}, me);\n\t\t\tif (me.scale) {\n\t\t\t\tme.scale.draw();\n\t\t\t}\n\n\t\t\tChart.plugins.notify('beforeDatasetsDraw', [me, easingDecimal]);\n\n\t\t\t// Draw each dataset via its respective controller (reversed to support proper line stacking)\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tif (me.isDatasetVisible(datasetIndex)) {\n\t\t\t\t\tme.getDatasetMeta(datasetIndex).controller.draw(ease);\n\t\t\t\t}\n\t\t\t}, me, true);\n\n\t\t\tChart.plugins.notify('afterDatasetsDraw', [me, easingDecimal]);\n\n\t\t\t// Finally draw the tooltip\n\t\t\tme.tooltip.transition(easingDecimal).draw();\n\n\t\t\tChart.plugins.notify('afterDraw', [me, easingDecimal]);\n\t\t},\n\n\t\t// Get the single element that was clicked on\n\t\t// @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n\t\tgetElementAtEvent: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar eventPosition = helpers.getRelativePosition(e, me.chart);\n\t\t\tvar elementsArray = [];\n\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tif (me.isDatasetVisible(datasetIndex)) {\n\t\t\t\t\tvar meta = me.getDatasetMeta(datasetIndex);\n\t\t\t\t\thelpers.each(meta.data, function(element) {\n\t\t\t\t\t\tif (element.inRange(eventPosition.x, eventPosition.y)) {\n\t\t\t\t\t\t\telementsArray.push(element);\n\t\t\t\t\t\t\treturn elementsArray;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn elementsArray.slice(0, 1);\n\t\t},\n\n\t\tgetElementsAtEvent: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar eventPosition = helpers.getRelativePosition(e, me.chart);\n\t\t\tvar elementsArray = [];\n\n\t\t\tvar found = function() {\n\t\t\t\tif (me.data.datasets) {\n\t\t\t\t\tfor (var i = 0; i < me.data.datasets.length; i++) {\n\t\t\t\t\t\tvar meta = me.getDatasetMeta(i);\n\t\t\t\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\t\t\t\tfor (var j = 0; j < meta.data.length; j++) {\n\t\t\t\t\t\t\t\tif (meta.data[j].inRange(eventPosition.x, eventPosition.y)) {\n\t\t\t\t\t\t\t\t\treturn meta.data[j];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}.call(me);\n\n\t\t\tif (!found) {\n\t\t\t\treturn elementsArray;\n\t\t\t}\n\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tif (me.isDatasetVisible(datasetIndex)) {\n\t\t\t\t\tvar meta = me.getDatasetMeta(datasetIndex),\n\t\t\t\t\t\telement = meta.data[found._index];\n\t\t\t\t\tif (element && !element._view.skip) {\n\t\t\t\t\t\telementsArray.push(element);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, me);\n\n\t\t\treturn elementsArray;\n\t\t},\n\n\t\tgetElementsAtXAxis: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar eventPosition = helpers.getRelativePosition(e, me.chart);\n\t\t\tvar elementsArray = [];\n\n\t\t\tvar found = function() {\n\t\t\t\tif (me.data.datasets) {\n\t\t\t\t\tfor (var i = 0; i < me.data.datasets.length; i++) {\n\t\t\t\t\t\tvar meta = me.getDatasetMeta(i);\n\t\t\t\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\t\t\t\tfor (var j = 0; j < meta.data.length; j++) {\n\t\t\t\t\t\t\t\tif (meta.data[j].inLabelRange(eventPosition.x, eventPosition.y)) {\n\t\t\t\t\t\t\t\t\treturn meta.data[j];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}.call(me);\n\n\t\t\tif (!found) {\n\t\t\t\treturn elementsArray;\n\t\t\t}\n\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tif (me.isDatasetVisible(datasetIndex)) {\n\t\t\t\t\tvar meta = me.getDatasetMeta(datasetIndex);\n\t\t\t\t\tvar index = helpers.findIndex(meta.data, function(it) {\n\t\t\t\t\t\treturn found._model.x === it._model.x;\n\t\t\t\t\t});\n\t\t\t\t\tif (index !== -1 && !meta.data[index]._view.skip) {\n\t\t\t\t\t\telementsArray.push(meta.data[index]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, me);\n\n\t\t\treturn elementsArray;\n\t\t},\n\n\t\tgetElementsAtEventForMode: function(e, mode) {\n\t\t\tvar me = this;\n\t\t\tswitch (mode) {\n\t\t\tcase 'single':\n\t\t\t\treturn me.getElementAtEvent(e);\n\t\t\tcase 'label':\n\t\t\t\treturn me.getElementsAtEvent(e);\n\t\t\tcase 'dataset':\n\t\t\t\treturn me.getDatasetAtEvent(e);\n\t\t\tcase 'x-axis':\n\t\t\t\treturn me.getElementsAtXAxis(e);\n\t\t\tdefault:\n\t\t\t\treturn e;\n\t\t\t}\n\t\t},\n\n\t\tgetDatasetAtEvent: function(e) {\n\t\t\tvar elementsArray = this.getElementAtEvent(e);\n\n\t\t\tif (elementsArray.length > 0) {\n\t\t\t\telementsArray = this.getDatasetMeta(elementsArray[0]._datasetIndex).data;\n\t\t\t}\n\n\t\t\treturn elementsArray;\n\t\t},\n\n\t\tgetDatasetMeta: function(datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.data.datasets[datasetIndex];\n\t\t\tif (!dataset._meta) {\n\t\t\t\tdataset._meta = {};\n\t\t\t}\n\n\t\t\tvar meta = dataset._meta[me.id];\n\t\t\tif (!meta) {\n\t\t\t\tmeta = dataset._meta[me.id] = {\n\t\t\t\t\ttype: null,\n\t\t\t\t\tdata: [],\n\t\t\t\t\tdataset: null,\n\t\t\t\t\tcontroller: null,\n\t\t\t\t\thidden: null,\t\t\t// See isDatasetVisible() comment\n\t\t\t\t\txAxisID: null,\n\t\t\t\t\tyAxisID: null\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn meta;\n\t\t},\n\n\t\tgetVisibleDatasetCount: function() {\n\t\t\tvar count = 0;\n\t\t\tfor (var i = 0, ilen = this.data.datasets.length; i<ilen; ++i) {\n\t\t\t\tif (this.isDatasetVisible(i)) {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn count;\n\t\t},\n\n\t\tisDatasetVisible: function(datasetIndex) {\n\t\t\tvar meta = this.getDatasetMeta(datasetIndex);\n\n\t\t\t// meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n\t\t\t// the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\t\t\treturn typeof meta.hidden === 'boolean'? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n\t\t},\n\n\t\tgenerateLegend: function() {\n\t\t\treturn this.options.legendCallback(this);\n\t\t},\n\n\t\tdestroy: function() {\n\t\t\tvar me = this;\n\t\t\tme.stop();\n\t\t\tme.clear();\n\t\t\thelpers.unbindEvents(me, me.events);\n\t\t\thelpers.removeResizeListener(me.chart.canvas.parentNode);\n\n\t\t\t// Reset canvas height/width attributes\n\t\t\tvar canvas = me.chart.canvas;\n\t\t\tcanvas.width = me.chart.width;\n\t\t\tcanvas.height = me.chart.height;\n\n\t\t\t// if we scaled the canvas in response to a devicePixelRatio !== 1, we need to undo that transform here\n\t\t\tif (me.chart.originalDevicePixelRatio !== undefined) {\n\t\t\t\tme.chart.ctx.scale(1 / me.chart.originalDevicePixelRatio, 1 / me.chart.originalDevicePixelRatio);\n\t\t\t}\n\n\t\t\t// Reset to the old style since it may have been changed by the device pixel ratio changes\n\t\t\tcanvas.style.width = me.chart.originalCanvasStyleWidth;\n\t\t\tcanvas.style.height = me.chart.originalCanvasStyleHeight;\n\n\t\t\tChart.plugins.notify('destroy', [me]);\n\n\t\t\tdelete Chart.instances[me.id];\n\t\t},\n\n\t\ttoBase64Image: function() {\n\t\t\treturn this.chart.canvas.toDataURL.apply(this.chart.canvas, arguments);\n\t\t},\n\n\t\tinitToolTip: function() {\n\t\t\tvar me = this;\n\t\t\tme.tooltip = new Chart.Tooltip({\n\t\t\t\t_chart: me.chart,\n\t\t\t\t_chartInstance: me,\n\t\t\t\t_data: me.data,\n\t\t\t\t_options: me.options.tooltips\n\t\t\t}, me);\n\t\t},\n\n\t\tbindEvents: function() {\n\t\t\tvar me = this;\n\t\t\thelpers.bindEvents(me, me.options.events, function(evt) {\n\t\t\t\tme.eventHandler(evt);\n\t\t\t});\n\t\t},\n\n\t\tupdateHoverStyle: function(elements, mode, enabled) {\n\t\t\tvar method = enabled? 'setHoverStyle' : 'removeHoverStyle';\n\t\t\tvar element, i, ilen;\n\n\t\t\tswitch (mode) {\n\t\t\tcase 'single':\n\t\t\t\telements = [elements[0]];\n\t\t\t\tbreak;\n\t\t\tcase 'label':\n\t\t\tcase 'dataset':\n\t\t\tcase 'x-axis':\n\t\t\t\t// elements = elements;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\t// unsupported mode\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (i=0, ilen=elements.length; i<ilen; ++i) {\n\t\t\t\telement = elements[i];\n\t\t\t\tif (element) {\n\t\t\t\t\tthis.getDatasetMeta(element._datasetIndex).controller[method](element);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\teventHandler: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar tooltip = me.tooltip;\n\t\t\tvar options = me.options || {};\n\t\t\tvar hoverOptions = options.hover;\n\t\t\tvar tooltipsOptions = options.tooltips;\n\n\t\t\tme.lastActive = me.lastActive || [];\n\t\t\tme.lastTooltipActive = me.lastTooltipActive || [];\n\n\t\t\t// Find Active Elements for hover and tooltips\n\t\t\tif (e.type === 'mouseout') {\n\t\t\t\tme.active = [];\n\t\t\t\tme.tooltipActive = [];\n\t\t\t} else {\n\t\t\t\tme.active = me.getElementsAtEventForMode(e, hoverOptions.mode);\n\t\t\t\tme.tooltipActive = me.getElementsAtEventForMode(e, tooltipsOptions.mode);\n\t\t\t}\n\n\t\t\t// On Hover hook\n\t\t\tif (hoverOptions.onHover) {\n\t\t\t\thoverOptions.onHover.call(me, me.active);\n\t\t\t}\n\n\t\t\tif (me.legend && me.legend.handleEvent) {\n\t\t\t\tme.legend.handleEvent(e);\n\t\t\t}\n\n\t\t\tif (e.type === 'mouseup' || e.type === 'click') {\n\t\t\t\tif (options.onClick) {\n\t\t\t\t\toptions.onClick.call(me, e, me.active);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove styling for last active (even if it may still be active)\n\t\t\tif (me.lastActive.length) {\n\t\t\t\tme.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n\t\t\t}\n\n\t\t\t// Built in hover styling\n\t\t\tif (me.active.length && hoverOptions.mode) {\n\t\t\t\tme.updateHoverStyle(me.active, hoverOptions.mode, true);\n\t\t\t}\n\n\t\t\t// Built in Tooltips\n\t\t\tif (tooltipsOptions.enabled || tooltipsOptions.custom) {\n\t\t\t\ttooltip.initialize();\n\t\t\t\ttooltip._active = me.tooltipActive;\n\t\t\t\ttooltip.update(true);\n\t\t\t}\n\n\t\t\t// Hover animations\n\t\t\ttooltip.pivot();\n\n\t\t\tif (!me.animating) {\n\t\t\t\t// If entering, leaving, or changing elements, animate the change via pivot\n\t\t\t\tif (!helpers.arrayEquals(me.active, me.lastActive) ||\n\t\t\t\t\t!helpers.arrayEquals(me.tooltipActive, me.lastTooltipActive)) {\n\n\t\t\t\t\tme.stop();\n\n\t\t\t\t\tif (tooltipsOptions.enabled || tooltipsOptions.custom) {\n\t\t\t\t\t\ttooltip.update(true);\n\t\t\t\t\t}\n\n\t\t\t\t\t// We only need to render at this point. Updating will cause scales to be\n\t\t\t\t\t// recomputed generating flicker & using more memory than necessary.\n\t\t\t\t\tme.render(hoverOptions.animationDuration, true);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remember Last Actives\n\t\t\tme.lastActive = me.active;\n\t\t\tme.lastTooltipActive = me.tooltipActive;\n\t\t\treturn me;\n\t\t}\n\t});\n};\n\n},{}],24:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\tvar noop = helpers.noop;\n\n\t// Base class for all dataset controllers (line, bar, etc)\n\tChart.DatasetController = function(chart, datasetIndex) {\n\t\tthis.initialize(chart, datasetIndex);\n\t};\n\n\thelpers.extend(Chart.DatasetController.prototype, {\n\n\t\t/**\n\t\t * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n\t\t * @type {Chart.core.element}\n\t\t */\n\t\tdatasetElementType: null,\n\n\t\t/**\n\t\t * Element type used to generate a meta data (e.g. Chart.element.Point).\n\t\t * @type {Chart.core.element}\n\t\t */\n\t\tdataElementType: null,\n\n\t\tinitialize: function(chart, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tme.chart = chart;\n\t\t\tme.index = datasetIndex;\n\t\t\tme.linkScales();\n\t\t\tme.addElements();\n\t\t},\n\n\t\tupdateIndex: function(datasetIndex) {\n\t\t\tthis.index = datasetIndex;\n\t\t},\n\n\t\tlinkScales: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar dataset = me.getDataset();\n\n\t\t\tif (meta.xAxisID === null) {\n\t\t\t\tmeta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n\t\t\t}\n\t\t\tif (meta.yAxisID === null) {\n\t\t\t\tmeta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n\t\t\t}\n\t\t},\n\n\t\tgetDataset: function() {\n\t\t\treturn this.chart.data.datasets[this.index];\n\t\t},\n\n\t\tgetMeta: function() {\n\t\t\treturn this.chart.getDatasetMeta(this.index);\n\t\t},\n\n\t\tgetScaleForId: function(scaleID) {\n\t\t\treturn this.chart.scales[scaleID];\n\t\t},\n\n\t\treset: function() {\n\t\t\tthis.update(true);\n\t\t},\n\n\t\tcreateMetaDataset: function() {\n\t\t\tvar me = this;\n\t\t\tvar type = me.datasetElementType;\n\t\t\treturn type && new type({\n\t\t\t\t_chart: me.chart.chart,\n\t\t\t\t_datasetIndex: me.index\n\t\t\t});\n\t\t},\n\n\t\tcreateMetaData: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar type = me.dataElementType;\n\t\t\treturn type && new type({\n\t\t\t\t_chart: me.chart.chart,\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index\n\t\t\t});\n\t\t},\n\n\t\taddElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar data = me.getDataset().data || [];\n\t\t\tvar metaData = meta.data;\n\t\t\tvar i, ilen;\n\n\t\t\tfor (i=0, ilen=data.length; i<ilen; ++i) {\n\t\t\t\tmetaData[i] = metaData[i] || me.createMetaData(meta, i);\n\t\t\t}\n\n\t\t\tmeta.dataset = meta.dataset || me.createMetaDataset();\n\t\t},\n\n\t\taddElementAndReset: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar element = me.createMetaData(index);\n\t\t\tme.getMeta().data.splice(index, 0, element);\n\t\t\tme.updateElement(element, index, true);\n\t\t},\n\n\t\tbuildOrUpdateElements: function() {\n\t\t\t// Handle the number of data points changing\n\t\t\tvar meta = this.getMeta(),\n\t\t\t\tmd = meta.data,\n\t\t\t\tnumData = this.getDataset().data.length,\n\t\t\t\tnumMetaData = md.length;\n\n\t\t\t// Make sure that we handle number of datapoints changing\n\t\t\tif (numData < numMetaData) {\n\t\t\t\t// Remove excess bars for data points that have been removed\n\t\t\t\tmd.splice(numData, numMetaData - numData);\n\t\t\t} else if (numData > numMetaData) {\n\t\t\t\t// Add new elements\n\t\t\t\tfor (var index = numMetaData; index < numData; ++index) {\n\t\t\t\t\tthis.addElementAndReset(index);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tupdate: noop,\n\n\t\tdraw: function(ease) {\n\t\t\tvar easingDecimal = ease || 1;\n\t\t\thelpers.each(this.getMeta().data, function(element) {\n\t\t\t\telement.transition(easingDecimal).draw();\n\t\t\t});\n\t\t},\n\n\t\tremoveHoverStyle: function(element, elementOpts) {\n\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex],\n\t\t\t\tindex = element._index,\n\t\t\t\tcustom = element.custom || {},\n\t\t\t\tvalueOrDefault = helpers.getValueAtIndexOrDefault,\n\t\t\t\tmodel = element._model;\n\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\n\t\t},\n\n\t\tsetHoverStyle: function(element) {\n\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex],\n\t\t\t\tindex = element._index,\n\t\t\t\tcustom = element.custom || {},\n\t\t\t\tvalueOrDefault = helpers.getValueAtIndexOrDefault,\n\t\t\t\tgetHoverColor = helpers.getHoverColor,\n\t\t\t\tmodel = element._model;\n\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n\t\t}\n\n\t});\n\n\tChart.DatasetController.extend = helpers.inherits;\n};\n\n},{}],25:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\tChart.elements = {};\n\n\tChart.Element = function(configuration) {\n\t\thelpers.extend(this, configuration);\n\t\tthis.initialize.apply(this, arguments);\n\t};\n\n\thelpers.extend(Chart.Element.prototype, {\n\n\t\tinitialize: function() {\n\t\t\tthis.hidden = false;\n\t\t},\n\n\t\tpivot: function() {\n\t\t\tvar me = this;\n\t\t\tif (!me._view) {\n\t\t\t\tme._view = helpers.clone(me._model);\n\t\t\t}\n\t\t\tme._start = helpers.clone(me._view);\n\t\t\treturn me;\n\t\t},\n\n\t\ttransition: function(ease) {\n\t\t\tvar me = this;\n\n\t\t\tif (!me._view) {\n\t\t\t\tme._view = helpers.clone(me._model);\n\t\t\t}\n\n\t\t\t// No animation -> No Transition\n\t\t\tif (ease === 1) {\n\t\t\t\tme._view = me._model;\n\t\t\t\tme._start = null;\n\t\t\t\treturn me;\n\t\t\t}\n\n\t\t\tif (!me._start) {\n\t\t\t\tme.pivot();\n\t\t\t}\n\n\t\t\thelpers.each(me._model, function(value, key) {\n\n\t\t\t\tif (key[0] === '_') {\n\t\t\t\t\t// Only non-underscored properties\n\t\t\t\t// Init if doesn't exist\n\t\t\t\t} else if (!me._view.hasOwnProperty(key)) {\n\t\t\t\t\tif (typeof value === 'number' && !isNaN(me._view[key])) {\n\t\t\t\t\t\tme._view[key] = value * ease;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tme._view[key] = value;\n\t\t\t\t\t}\n\t\t\t\t// No unnecessary computations\n\t\t\t\t} else if (value === me._view[key]) {\n\t\t\t\t\t// It's the same! Woohoo!\n\t\t\t\t// Color transitions if possible\n\t\t\t\t} else if (typeof value === 'string') {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tvar color = helpers.color(me._model[key]).mix(helpers.color(me._start[key]), ease);\n\t\t\t\t\t\tme._view[key] = color.rgbString();\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\tme._view[key] = value;\n\t\t\t\t\t}\n\t\t\t\t// Number transitions\n\t\t\t\t} else if (typeof value === 'number') {\n\t\t\t\t\tvar startVal = me._start[key] !== undefined && isNaN(me._start[key]) === false ? me._start[key] : 0;\n\t\t\t\t\tme._view[key] = ((me._model[key] - startVal) * ease) + startVal;\n\t\t\t\t// Everything else\n\t\t\t\t} else {\n\t\t\t\t\tme._view[key] = value;\n\t\t\t\t}\n\t\t\t}, me);\n\n\t\t\treturn me;\n\t\t},\n\n\t\ttooltipPosition: function() {\n\t\t\treturn {\n\t\t\t\tx: this._model.x,\n\t\t\t\ty: this._model.y\n\t\t\t};\n\t\t},\n\n\t\thasValue: function() {\n\t\t\treturn helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);\n\t\t}\n\t});\n\n\tChart.Element.extend = helpers.inherits;\n\n};\n\n},{}],26:[function(require,module,exports){\n/* global window: false */\n/* global document: false */\n'use strict';\n\nvar color = require(3);\n\nmodule.exports = function(Chart) {\n\t// Global Chart helpers object for utility methods and classes\n\tvar helpers = Chart.helpers = {};\n\n\t// -- Basic js utility methods\n\thelpers.each = function(loopable, callback, self, reverse) {\n\t\t// Check to see if null or undefined firstly.\n\t\tvar i, len;\n\t\tif (helpers.isArray(loopable)) {\n\t\t\tlen = loopable.length;\n\t\t\tif (reverse) {\n\t\t\t\tfor (i = len - 1; i >= 0; i--) {\n\t\t\t\t\tcallback.call(self, loopable[i], i);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tcallback.call(self, loopable[i], i);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (typeof loopable === 'object') {\n\t\t\tvar keys = Object.keys(loopable);\n\t\t\tlen = keys.length;\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tcallback.call(self, loopable[keys[i]], keys[i]);\n\t\t\t}\n\t\t}\n\t};\n\thelpers.clone = function(obj) {\n\t\tvar objClone = {};\n\t\thelpers.each(obj, function(value, key) {\n\t\t\tif (helpers.isArray(value)) {\n\t\t\t\tobjClone[key] = value.slice(0);\n\t\t\t} else if (typeof value === 'object' && value !== null) {\n\t\t\t\tobjClone[key] = helpers.clone(value);\n\t\t\t} else {\n\t\t\t\tobjClone[key] = value;\n\t\t\t}\n\t\t});\n\t\treturn objClone;\n\t};\n\thelpers.extend = function(base) {\n\t\tvar setFn = function(value, key) {\n\t\t\tbase[key] = value;\n\t\t};\n\t\tfor (var i = 1, ilen = arguments.length; i < ilen; i++) {\n\t\t\thelpers.each(arguments[i], setFn);\n\t\t}\n\t\treturn base;\n\t};\n\t// Need a special merge function to chart configs since they are now grouped\n\thelpers.configMerge = function(_base) {\n\t\tvar base = helpers.clone(_base);\n\t\thelpers.each(Array.prototype.slice.call(arguments, 1), function(extension) {\n\t\t\thelpers.each(extension, function(value, key) {\n\t\t\t\tif (key === 'scales') {\n\t\t\t\t\t// Scale config merging is complex. Add out own function here for that\n\t\t\t\t\tbase[key] = helpers.scaleMerge(base.hasOwnProperty(key) ? base[key] : {}, value);\n\n\t\t\t\t} else if (key === 'scale') {\n\t\t\t\t\t// Used in polar area & radar charts since there is only one scale\n\t\t\t\t\tbase[key] = helpers.configMerge(base.hasOwnProperty(key) ? base[key] : {}, Chart.scaleService.getScaleDefaults(value.type), value);\n\t\t\t\t} else if (base.hasOwnProperty(key) && helpers.isArray(base[key]) && helpers.isArray(value)) {\n\t\t\t\t\t// In this case we have an array of objects replacing another array. Rather than doing a strict replace,\n\t\t\t\t\t// merge. This allows easy scale option merging\n\t\t\t\t\tvar baseArray = base[key];\n\n\t\t\t\t\thelpers.each(value, function(valueObj, index) {\n\n\t\t\t\t\t\tif (index < baseArray.length) {\n\t\t\t\t\t\t\tif (typeof baseArray[index] === 'object' && baseArray[index] !== null && typeof valueObj === 'object' && valueObj !== null) {\n\t\t\t\t\t\t\t\t// Two objects are coming together. Do a merge of them.\n\t\t\t\t\t\t\t\tbaseArray[index] = helpers.configMerge(baseArray[index], valueObj);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// Just overwrite in this case since there is nothing to merge\n\t\t\t\t\t\t\t\tbaseArray[index] = valueObj;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbaseArray.push(valueObj); // nothing to merge\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t} else if (base.hasOwnProperty(key) && typeof base[key] === 'object' && base[key] !== null && typeof value === 'object') {\n\t\t\t\t\t// If we are overwriting an object with an object, do a merge of the properties.\n\t\t\t\t\tbase[key] = helpers.configMerge(base[key], value);\n\n\t\t\t\t} else {\n\t\t\t\t\t// can just overwrite the value in this case\n\t\t\t\t\tbase[key] = value;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treturn base;\n\t};\n\thelpers.scaleMerge = function(_base, extension) {\n\t\tvar base = helpers.clone(_base);\n\n\t\thelpers.each(extension, function(value, key) {\n\t\t\tif (key === 'xAxes' || key === 'yAxes') {\n\t\t\t\t// These properties are arrays of items\n\t\t\t\tif (base.hasOwnProperty(key)) {\n\t\t\t\t\thelpers.each(value, function(valueObj, index) {\n\t\t\t\t\t\tvar axisType = helpers.getValueOrDefault(valueObj.type, key === 'xAxes' ? 'category' : 'linear');\n\t\t\t\t\t\tvar axisDefaults = Chart.scaleService.getScaleDefaults(axisType);\n\t\t\t\t\t\tif (index >= base[key].length || !base[key][index].type) {\n\t\t\t\t\t\t\tbase[key].push(helpers.configMerge(axisDefaults, valueObj));\n\t\t\t\t\t\t} else if (valueObj.type && valueObj.type !== base[key][index].type) {\n\t\t\t\t\t\t\t// Type changed. Bring in the new defaults before we bring in valueObj so that valueObj can override the correct scale defaults\n\t\t\t\t\t\t\tbase[key][index] = helpers.configMerge(base[key][index], axisDefaults, valueObj);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Type is the same\n\t\t\t\t\t\t\tbase[key][index] = helpers.configMerge(base[key][index], valueObj);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tbase[key] = [];\n\t\t\t\t\thelpers.each(value, function(valueObj) {\n\t\t\t\t\t\tvar axisType = helpers.getValueOrDefault(valueObj.type, key === 'xAxes' ? 'category' : 'linear');\n\t\t\t\t\t\tbase[key].push(helpers.configMerge(Chart.scaleService.getScaleDefaults(axisType), valueObj));\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else if (base.hasOwnProperty(key) && typeof base[key] === 'object' && base[key] !== null && typeof value === 'object') {\n\t\t\t\t// If we are overwriting an object with an object, do a merge of the properties.\n\t\t\t\tbase[key] = helpers.configMerge(base[key], value);\n\n\t\t\t} else {\n\t\t\t\t// can just overwrite the value in this case\n\t\t\t\tbase[key] = value;\n\t\t\t}\n\t\t});\n\n\t\treturn base;\n\t};\n\thelpers.getValueAtIndexOrDefault = function(value, index, defaultValue) {\n\t\tif (value === undefined || value === null) {\n\t\t\treturn defaultValue;\n\t\t}\n\n\t\tif (helpers.isArray(value)) {\n\t\t\treturn index < value.length ? value[index] : defaultValue;\n\t\t}\n\n\t\treturn value;\n\t};\n\thelpers.getValueOrDefault = function(value, defaultValue) {\n\t\treturn value === undefined ? defaultValue : value;\n\t};\n\thelpers.indexOf = Array.prototype.indexOf?\n\t\tfunction(array, item) {\n\t\t\treturn array.indexOf(item);\n\t\t}:\n\t\tfunction(array, item) {\n\t\t\tfor (var i = 0, ilen = array.length; i < ilen; ++i) {\n\t\t\t\tif (array[i] === item) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t};\n\thelpers.where = function(collection, filterCallback) {\n\t\tif (helpers.isArray(collection) && Array.prototype.filter) {\n\t\t\treturn collection.filter(filterCallback);\n\t\t}\n\t\tvar filtered = [];\n\n\t\thelpers.each(collection, function(item) {\n\t\t\tif (filterCallback(item)) {\n\t\t\t\tfiltered.push(item);\n\t\t\t}\n\t\t});\n\n\t\treturn filtered;\n\t};\n\thelpers.findIndex = Array.prototype.findIndex?\n\t\tfunction(array, callback, scope) {\n\t\t\treturn array.findIndex(callback, scope);\n\t\t} :\n\t\tfunction(array, callback, scope) {\n\t\t\tscope = scope === undefined? array : scope;\n\t\t\tfor (var i = 0, ilen = array.length; i < ilen; ++i) {\n\t\t\t\tif (callback.call(scope, array[i], i, array)) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t};\n\thelpers.findNextWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to start of the array\n\t\tif (startIndex === undefined || startIndex === null) {\n\t\t\tstartIndex = -1;\n\t\t}\n\t\tfor (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\thelpers.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to end of the array\n\t\tif (startIndex === undefined || startIndex === null) {\n\t\t\tstartIndex = arrayToSearch.length;\n\t\t}\n\t\tfor (var i = startIndex - 1; i >= 0; i--) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\thelpers.inherits = function(extensions) {\n\t\t// Basic javascript inheritance based on the model created in Backbone.js\n\t\tvar me = this;\n\t\tvar ChartElement = (extensions && extensions.hasOwnProperty('constructor')) ? extensions.constructor : function() {\n\t\t\treturn me.apply(this, arguments);\n\t\t};\n\n\t\tvar Surrogate = function() {\n\t\t\tthis.constructor = ChartElement;\n\t\t};\n\t\tSurrogate.prototype = me.prototype;\n\t\tChartElement.prototype = new Surrogate();\n\n\t\tChartElement.extend = helpers.inherits;\n\n\t\tif (extensions) {\n\t\t\thelpers.extend(ChartElement.prototype, extensions);\n\t\t}\n\n\t\tChartElement.__super__ = me.prototype;\n\n\t\treturn ChartElement;\n\t};\n\thelpers.noop = function() {};\n\thelpers.uid = (function() {\n\t\tvar id = 0;\n\t\treturn function() {\n\t\t\treturn id++;\n\t\t};\n\t}());\n\t// -- Math methods\n\thelpers.isNumber = function(n) {\n\t\treturn !isNaN(parseFloat(n)) && isFinite(n);\n\t};\n\thelpers.almostEquals = function(x, y, epsilon) {\n\t\treturn Math.abs(x - y) < epsilon;\n\t};\n\thelpers.max = function(array) {\n\t\treturn array.reduce(function(max, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.max(max, value);\n\t\t\t}\n\t\t\treturn max;\n\t\t}, Number.NEGATIVE_INFINITY);\n\t};\n\thelpers.min = function(array) {\n\t\treturn array.reduce(function(min, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.min(min, value);\n\t\t\t}\n\t\t\treturn min;\n\t\t}, Number.POSITIVE_INFINITY);\n\t};\n\thelpers.sign = Math.sign?\n\t\tfunction(x) {\n\t\t\treturn Math.sign(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tx = +x; // convert to a number\n\t\t\tif (x === 0 || isNaN(x)) {\n\t\t\t\treturn x;\n\t\t\t}\n\t\t\treturn x > 0 ? 1 : -1;\n\t\t};\n\thelpers.log10 = Math.log10?\n\t\tfunction(x) {\n\t\t\treturn Math.log10(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\treturn Math.log(x) / Math.LN10;\n\t\t};\n\thelpers.toRadians = function(degrees) {\n\t\treturn degrees * (Math.PI / 180);\n\t};\n\thelpers.toDegrees = function(radians) {\n\t\treturn radians * (180 / Math.PI);\n\t};\n\t// Gets the angle from vertical upright to the point about a centre.\n\thelpers.getAngleFromPoint = function(centrePoint, anglePoint) {\n\t\tvar distanceFromXCenter = anglePoint.x - centrePoint.x,\n\t\t\tdistanceFromYCenter = anglePoint.y - centrePoint.y,\n\t\t\tradialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n\t\tvar angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n\t\tif (angle < (-0.5 * Math.PI)) {\n\t\t\tangle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n\t\t}\n\n\t\treturn {\n\t\t\tangle: angle,\n\t\t\tdistance: radialDistanceFromCenter\n\t\t};\n\t};\n\thelpers.aliasPixel = function(pixelWidth) {\n\t\treturn (pixelWidth % 2 === 0) ? 0 : 0.5;\n\t};\n\thelpers.splineCurve = function(firstPoint, middlePoint, afterPoint, t) {\n\t\t// Props to Rob Spencer at scaled innovation for his post on splining between points\n\t\t// http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n\t\t// This function must also respect \"skipped\" points\n\n\t\tvar previous = firstPoint.skip ? middlePoint : firstPoint,\n\t\t\tcurrent = middlePoint,\n\t\t\tnext = afterPoint.skip ? middlePoint : afterPoint;\n\n\t\tvar d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n\t\tvar d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n\n\t\tvar s01 = d01 / (d01 + d12);\n\t\tvar s12 = d12 / (d01 + d12);\n\n\t\t// If all points are the same, s01 & s02 will be inf\n\t\ts01 = isNaN(s01) ? 0 : s01;\n\t\ts12 = isNaN(s12) ? 0 : s12;\n\n\t\tvar fa = t * s01; // scaling factor for triangle Ta\n\t\tvar fb = t * s12;\n\n\t\treturn {\n\t\t\tprevious: {\n\t\t\t\tx: current.x - fa * (next.x - previous.x),\n\t\t\t\ty: current.y - fa * (next.y - previous.y)\n\t\t\t},\n\t\t\tnext: {\n\t\t\t\tx: current.x + fb * (next.x - previous.x),\n\t\t\t\ty: current.y + fb * (next.y - previous.y)\n\t\t\t}\n\t\t};\n\t};\n\thelpers.EPSILON = Number.EPSILON || 1e-14;\n\thelpers.splineCurveMonotone = function(points) {\n\t\t// This function calculates Bézier control points in a similar way than |splineCurve|,\n\t\t// but preserves monotonicity of the provided data and ensures no local extremums are added\n\t\t// between the dataset discrete points due to the interpolation.\n\t\t// See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n\n\t\tvar pointsWithTangents = (points || []).map(function(point) {\n\t\t\treturn {\n\t\t\t\tmodel: point._model,\n\t\t\t\tdeltaK: 0,\n\t\t\t\tmK: 0\n\t\t\t};\n\t\t});\n\n\t\t// Calculate slopes (deltaK) and initialize tangents (mK)\n\t\tvar pointsLen = pointsWithTangents.length;\n\t\tvar i, pointBefore, pointCurrent, pointAfter;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tpointCurrent.deltaK = (pointAfter.model.y - pointCurrent.model.y) / (pointAfter.model.x - pointCurrent.model.x);\n\t\t\t}\n\n\t\t\tif (!pointBefore || pointBefore.model.skip) {\n\t\t\t\tpointCurrent.mK = pointCurrent.deltaK;\n\t\t\t} else if (!pointAfter || pointAfter.model.skip) {\n\t\t\t\tpointCurrent.mK = pointBefore.deltaK;\n\t\t\t} else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n\t\t\t\tpointCurrent.mK = 0;\n\t\t\t} else {\n\t\t\t\tpointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n\t\t\t}\n\t\t}\n\n\t\t// Adjust tangents to ensure monotonic properties\n\t\tvar alphaK, betaK, tauK, squaredMagnitude;\n\t\tfor (i = 0; i < pointsLen - 1; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tpointAfter = pointsWithTangents[i + 1];\n\t\t\tif (pointCurrent.model.skip || pointAfter.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (helpers.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n\t\t\t\tpointCurrent.mK = pointAfter.mK = 0;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\talphaK = pointCurrent.mK / pointCurrent.deltaK;\n\t\t\tbetaK = pointAfter.mK / pointCurrent.deltaK;\n\t\t\tsquaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\t\t\tif (squaredMagnitude <= 9) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\ttauK = 3 / Math.sqrt(squaredMagnitude);\n\t\t\tpointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n\t\t\tpointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n\t\t}\n\n\t\t// Compute control points\n\t\tvar deltaX;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointBefore && !pointBefore.model.skip) {\n\t\t\t\tdeltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n\t\t\t\tpointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tdeltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n\t\t\t\tpointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t}\n\t};\n\thelpers.nextItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index >= collection.length - 1 ? collection[0] : collection[index + 1];\n\t\t}\n\t\treturn index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n\t};\n\thelpers.previousItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n\t\t}\n\t\treturn index <= 0 ? collection[0] : collection[index - 1];\n\t};\n\t// Implementation of the nice number algorithm used in determining where axis labels will go\n\thelpers.niceNum = function(range, round) {\n\t\tvar exponent = Math.floor(helpers.log10(range));\n\t\tvar fraction = range / Math.pow(10, exponent);\n\t\tvar niceFraction;\n\n\t\tif (round) {\n\t\t\tif (fraction < 1.5) {\n\t\t\t\tniceFraction = 1;\n\t\t\t} else if (fraction < 3) {\n\t\t\t\tniceFraction = 2;\n\t\t\t} else if (fraction < 7) {\n\t\t\t\tniceFraction = 5;\n\t\t\t} else {\n\t\t\t\tniceFraction = 10;\n\t\t\t}\n\t\t} else if (fraction <= 1.0) {\n\t\t\tniceFraction = 1;\n\t\t} else if (fraction <= 2) {\n\t\t\tniceFraction = 2;\n\t\t} else if (fraction <= 5) {\n\t\t\tniceFraction = 5;\n\t\t} else {\n\t\t\tniceFraction = 10;\n\t\t}\n\n\t\treturn niceFraction * Math.pow(10, exponent);\n\t};\n\t// Easing functions adapted from Robert Penner's easing equations\n\t// http://www.robertpenner.com/easing/\n\tvar easingEffects = helpers.easingEffects = {\n\t\tlinear: function(t) {\n\t\t\treturn t;\n\t\t},\n\t\teaseInQuad: function(t) {\n\t\t\treturn t * t;\n\t\t},\n\t\teaseOutQuad: function(t) {\n\t\t\treturn -1 * t * (t - 2);\n\t\t},\n\t\teaseInOutQuad: function(t) {\n\t\t\tif ((t /= 1 / 2) < 1) {\n\t\t\t\treturn 1 / 2 * t * t;\n\t\t\t}\n\t\t\treturn -1 / 2 * ((--t) * (t - 2) - 1);\n\t\t},\n\t\teaseInCubic: function(t) {\n\t\t\treturn t * t * t;\n\t\t},\n\t\teaseOutCubic: function(t) {\n\t\t\treturn 1 * ((t = t / 1 - 1) * t * t + 1);\n\t\t},\n\t\teaseInOutCubic: function(t) {\n\t\t\tif ((t /= 1 / 2) < 1) {\n\t\t\t\treturn 1 / 2 * t * t * t;\n\t\t\t}\n\t\t\treturn 1 / 2 * ((t -= 2) * t * t + 2);\n\t\t},\n\t\teaseInQuart: function(t) {\n\t\t\treturn t * t * t * t;\n\t\t},\n\t\teaseOutQuart: function(t) {\n\t\t\treturn -1 * ((t = t / 1 - 1) * t * t * t - 1);\n\t\t},\n\t\teaseInOutQuart: function(t) {\n\t\t\tif ((t /= 1 / 2) < 1) {\n\t\t\t\treturn 1 / 2 * t * t * t * t;\n\t\t\t}\n\t\t\treturn -1 / 2 * ((t -= 2) * t * t * t - 2);\n\t\t},\n\t\teaseInQuint: function(t) {\n\t\t\treturn 1 * (t /= 1) * t * t * t * t;\n\t\t},\n\t\teaseOutQuint: function(t) {\n\t\t\treturn 1 * ((t = t / 1 - 1) * t * t * t * t + 1);\n\t\t},\n\t\teaseInOutQuint: function(t) {\n\t\t\tif ((t /= 1 / 2) < 1) {\n\t\t\t\treturn 1 / 2 * t * t * t * t * t;\n\t\t\t}\n\t\t\treturn 1 / 2 * ((t -= 2) * t * t * t * t + 2);\n\t\t},\n\t\teaseInSine: function(t) {\n\t\t\treturn -1 * Math.cos(t / 1 * (Math.PI / 2)) + 1;\n\t\t},\n\t\teaseOutSine: function(t) {\n\t\t\treturn 1 * Math.sin(t / 1 * (Math.PI / 2));\n\t\t},\n\t\teaseInOutSine: function(t) {\n\t\t\treturn -1 / 2 * (Math.cos(Math.PI * t / 1) - 1);\n\t\t},\n\t\teaseInExpo: function(t) {\n\t\t\treturn (t === 0) ? 1 : 1 * Math.pow(2, 10 * (t / 1 - 1));\n\t\t},\n\t\teaseOutExpo: function(t) {\n\t\t\treturn (t === 1) ? 1 : 1 * (-Math.pow(2, -10 * t / 1) + 1);\n\t\t},\n\t\teaseInOutExpo: function(t) {\n\t\t\tif (t === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif (t === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tif ((t /= 1 / 2) < 1) {\n\t\t\t\treturn 1 / 2 * Math.pow(2, 10 * (t - 1));\n\t\t\t}\n\t\t\treturn 1 / 2 * (-Math.pow(2, -10 * --t) + 2);\n\t\t},\n\t\teaseInCirc: function(t) {\n\t\t\tif (t >= 1) {\n\t\t\t\treturn t;\n\t\t\t}\n\t\t\treturn -1 * (Math.sqrt(1 - (t /= 1) * t) - 1);\n\t\t},\n\t\teaseOutCirc: function(t) {\n\t\t\treturn 1 * Math.sqrt(1 - (t = t / 1 - 1) * t);\n\t\t},\n\t\teaseInOutCirc: function(t) {\n\t\t\tif ((t /= 1 / 2) < 1) {\n\t\t\t\treturn -1 / 2 * (Math.sqrt(1 - t * t) - 1);\n\t\t\t}\n\t\t\treturn 1 / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n\t\t},\n\t\teaseInElastic: function(t) {\n\t\t\tvar s = 1.70158;\n\t\t\tvar p = 0;\n\t\t\tvar a = 1;\n\t\t\tif (t === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif ((t /= 1) === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tif (!p) {\n\t\t\t\tp = 1 * 0.3;\n\t\t\t}\n\t\t\tif (a < Math.abs(1)) {\n\t\t\t\ta = 1;\n\t\t\t\ts = p / 4;\n\t\t\t} else {\n\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t\t}\n\t\t\treturn -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p));\n\t\t},\n\t\teaseOutElastic: function(t) {\n\t\t\tvar s = 1.70158;\n\t\t\tvar p = 0;\n\t\t\tvar a = 1;\n\t\t\tif (t === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif ((t /= 1) === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tif (!p) {\n\t\t\t\tp = 1 * 0.3;\n\t\t\t}\n\t\t\tif (a < Math.abs(1)) {\n\t\t\t\ta = 1;\n\t\t\t\ts = p / 4;\n\t\t\t} else {\n\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t\t}\n\t\t\treturn a * Math.pow(2, -10 * t) * Math.sin((t * 1 - s) * (2 * Math.PI) / p) + 1;\n\t\t},\n\t\teaseInOutElastic: function(t) {\n\t\t\tvar s = 1.70158;\n\t\t\tvar p = 0;\n\t\t\tvar a = 1;\n\t\t\tif (t === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif ((t /= 1 / 2) === 2) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tif (!p) {\n\t\t\t\tp = 1 * (0.3 * 1.5);\n\t\t\t}\n\t\t\tif (a < Math.abs(1)) {\n\t\t\t\ta = 1;\n\t\t\t\ts = p / 4;\n\t\t\t} else {\n\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t\t}\n\t\t\tif (t < 1) {\n\t\t\t\treturn -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p));\n\t\t\t}\n\t\t\treturn a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\t\t},\n\t\teaseInBack: function(t) {\n\t\t\tvar s = 1.70158;\n\t\t\treturn 1 * (t /= 1) * t * ((s + 1) * t - s);\n\t\t},\n\t\teaseOutBack: function(t) {\n\t\t\tvar s = 1.70158;\n\t\t\treturn 1 * ((t = t / 1 - 1) * t * ((s + 1) * t + s) + 1);\n\t\t},\n\t\teaseInOutBack: function(t) {\n\t\t\tvar s = 1.70158;\n\t\t\tif ((t /= 1 / 2) < 1) {\n\t\t\t\treturn 1 / 2 * (t * t * (((s *= (1.525)) + 1) * t - s));\n\t\t\t}\n\t\t\treturn 1 / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n\t\t},\n\t\teaseInBounce: function(t) {\n\t\t\treturn 1 - easingEffects.easeOutBounce(1 - t);\n\t\t},\n\t\teaseOutBounce: function(t) {\n\t\t\tif ((t /= 1) < (1 / 2.75)) {\n\t\t\t\treturn 1 * (7.5625 * t * t);\n\t\t\t} else if (t < (2 / 2.75)) {\n\t\t\t\treturn 1 * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75);\n\t\t\t} else if (t < (2.5 / 2.75)) {\n\t\t\t\treturn 1 * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375);\n\t\t\t}\n\t\t\treturn 1 * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375);\n\t\t},\n\t\teaseInOutBounce: function(t) {\n\t\t\tif (t < 1 / 2) {\n\t\t\t\treturn easingEffects.easeInBounce(t * 2) * 0.5;\n\t\t\t}\n\t\t\treturn easingEffects.easeOutBounce(t * 2 - 1) * 0.5 + 1 * 0.5;\n\t\t}\n\t};\n\t// Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\thelpers.requestAnimFrame = (function() {\n\t\treturn window.requestAnimationFrame ||\n\t\t\twindow.webkitRequestAnimationFrame ||\n\t\t\twindow.mozRequestAnimationFrame ||\n\t\t\twindow.oRequestAnimationFrame ||\n\t\t\twindow.msRequestAnimationFrame ||\n\t\t\tfunction(callback) {\n\t\t\t\treturn window.setTimeout(callback, 1000 / 60);\n\t\t\t};\n\t}());\n\thelpers.cancelAnimFrame = (function() {\n\t\treturn window.cancelAnimationFrame ||\n\t\t\twindow.webkitCancelAnimationFrame ||\n\t\t\twindow.mozCancelAnimationFrame ||\n\t\t\twindow.oCancelAnimationFrame ||\n\t\t\twindow.msCancelAnimationFrame ||\n\t\t\tfunction(callback) {\n\t\t\t\treturn window.clearTimeout(callback, 1000 / 60);\n\t\t\t};\n\t}());\n\t// -- DOM methods\n\thelpers.getRelativePosition = function(evt, chart) {\n\t\tvar mouseX, mouseY;\n\t\tvar e = evt.originalEvent || evt,\n\t\t\tcanvas = evt.currentTarget || evt.srcElement,\n\t\t\tboundingRect = canvas.getBoundingClientRect();\n\n\t\tvar touches = e.touches;\n\t\tif (touches && touches.length > 0) {\n\t\t\tmouseX = touches[0].clientX;\n\t\t\tmouseY = touches[0].clientY;\n\n\t\t} else {\n\t\t\tmouseX = e.clientX;\n\t\t\tmouseY = e.clientY;\n\t\t}\n\n\t\t// Scale mouse coordinates into canvas coordinates\n\t\t// by following the pattern laid out by 'jerryj' in the comments of\n\t\t// http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\t\tvar paddingLeft = parseFloat(helpers.getStyle(canvas, 'padding-left'));\n\t\tvar paddingTop = parseFloat(helpers.getStyle(canvas, 'padding-top'));\n\t\tvar paddingRight = parseFloat(helpers.getStyle(canvas, 'padding-right'));\n\t\tvar paddingBottom = parseFloat(helpers.getStyle(canvas, 'padding-bottom'));\n\t\tvar width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n\t\tvar height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;\n\n\t\t// We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n\t\t// the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\t\tmouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / (width) * canvas.width / chart.currentDevicePixelRatio);\n\t\tmouseY = Math.round((mouseY - boundingRect.top - paddingTop) / (height) * canvas.height / chart.currentDevicePixelRatio);\n\n\t\treturn {\n\t\t\tx: mouseX,\n\t\t\ty: mouseY\n\t\t};\n\n\t};\n\thelpers.addEvent = function(node, eventType, method) {\n\t\tif (node.addEventListener) {\n\t\t\tnode.addEventListener(eventType, method);\n\t\t} else if (node.attachEvent) {\n\t\t\tnode.attachEvent('on' + eventType, method);\n\t\t} else {\n\t\t\tnode['on' + eventType] = method;\n\t\t}\n\t};\n\thelpers.removeEvent = function(node, eventType, handler) {\n\t\tif (node.removeEventListener) {\n\t\t\tnode.removeEventListener(eventType, handler, false);\n\t\t} else if (node.detachEvent) {\n\t\t\tnode.detachEvent('on' + eventType, handler);\n\t\t} else {\n\t\t\tnode['on' + eventType] = helpers.noop;\n\t\t}\n\t};\n\thelpers.bindEvents = function(chartInstance, arrayOfEvents, handler) {\n\t\t// Create the events object if it's not already present\n\t\tvar events = chartInstance.events = chartInstance.events || {};\n\n\t\thelpers.each(arrayOfEvents, function(eventName) {\n\t\t\tevents[eventName] = function() {\n\t\t\t\thandler.apply(chartInstance, arguments);\n\t\t\t};\n\t\t\thelpers.addEvent(chartInstance.chart.canvas, eventName, events[eventName]);\n\t\t});\n\t};\n\thelpers.unbindEvents = function(chartInstance, arrayOfEvents) {\n\t\tvar canvas = chartInstance.chart.canvas;\n\t\thelpers.each(arrayOfEvents, function(handler, eventName) {\n\t\t\thelpers.removeEvent(canvas, eventName, handler);\n\t\t});\n\t};\n\n\t// Private helper function to convert max-width/max-height values that may be percentages into a number\n\tfunction parseMaxStyle(styleValue, node, parentProperty) {\n\t\tvar valueInPixels;\n\t\tif (typeof(styleValue) === 'string') {\n\t\t\tvalueInPixels = parseInt(styleValue, 10);\n\n\t\t\tif (styleValue.indexOf('%') !== -1) {\n\t\t\t\t// percentage * size in dimension\n\t\t\t\tvalueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n\t\t\t}\n\t\t} else {\n\t\t\tvalueInPixels = styleValue;\n\t\t}\n\n\t\treturn valueInPixels;\n\t}\n\n\t/**\n\t * Returns if the given value contains an effective constraint.\n\t * @private\n\t */\n\tfunction isConstrainedValue(value) {\n\t\treturn value !== undefined && value !== null && value !== 'none';\n\t}\n\n\t// Private helper to get a constraint dimension\n\t// @param domNode : the node to check the constraint on\n\t// @param maxStyle : the style that defines the maximum for the direction we are using (maxWidth / maxHeight)\n\t// @param percentageProperty : property of parent to use when calculating width as a percentage\n\t// @see http://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser\n\tfunction getConstraintDimension(domNode, maxStyle, percentageProperty) {\n\t\tvar view = document.defaultView;\n\t\tvar parentNode = domNode.parentNode;\n\t\tvar constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n\t\tvar constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n\t\tvar hasCNode = isConstrainedValue(constrainedNode);\n\t\tvar hasCContainer = isConstrainedValue(constrainedContainer);\n\t\tvar infinity = Number.POSITIVE_INFINITY;\n\n\t\tif (hasCNode || hasCContainer) {\n\t\t\treturn Math.min(\n\t\t\t\thasCNode? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity,\n\t\t\t\thasCContainer? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n\t\t}\n\n\t\treturn 'none';\n\t}\n\t// returns Number or undefined if no constraint\n\thelpers.getConstraintWidth = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-width', 'clientWidth');\n\t};\n\t// returns Number or undefined if no constraint\n\thelpers.getConstraintHeight = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-height', 'clientHeight');\n\t};\n\thelpers.getMaximumWidth = function(domNode) {\n\t\tvar container = domNode.parentNode;\n\t\tvar paddingLeft = parseInt(helpers.getStyle(container, 'padding-left'), 10);\n\t\tvar paddingRight = parseInt(helpers.getStyle(container, 'padding-right'), 10);\n\t\tvar w = container.clientWidth - paddingLeft - paddingRight;\n\t\tvar cw = helpers.getConstraintWidth(domNode);\n\t\treturn isNaN(cw)? w : Math.min(w, cw);\n\t};\n\thelpers.getMaximumHeight = function(domNode) {\n\t\tvar container = domNode.parentNode;\n\t\tvar paddingTop = parseInt(helpers.getStyle(container, 'padding-top'), 10);\n\t\tvar paddingBottom = parseInt(helpers.getStyle(container, 'padding-bottom'), 10);\n\t\tvar h = container.clientHeight - paddingTop - paddingBottom;\n\t\tvar ch = helpers.getConstraintHeight(domNode);\n\t\treturn isNaN(ch)? h : Math.min(h, ch);\n\t};\n\thelpers.getStyle = function(el, property) {\n\t\treturn el.currentStyle ?\n\t\t\tel.currentStyle[property] :\n\t\t\tdocument.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n\t};\n\thelpers.retinaScale = function(chart) {\n\t\tvar ctx = chart.ctx;\n\t\tvar canvas = chart.canvas;\n\t\tvar width = canvas.width;\n\t\tvar height = canvas.height;\n\t\tvar pixelRatio = chart.currentDevicePixelRatio = window.devicePixelRatio || 1;\n\n\t\tif (pixelRatio !== 1) {\n\t\t\tcanvas.height = height * pixelRatio;\n\t\t\tcanvas.width = width * pixelRatio;\n\t\t\tctx.scale(pixelRatio, pixelRatio);\n\n\t\t\t// Store the device pixel ratio so that we can go backwards in `destroy`.\n\t\t\t// The devicePixelRatio changes with zoom, so there are no guarantees that it is the same\n\t\t\t// when destroy is called\n\t\t\tchart.originalDevicePixelRatio = chart.originalDevicePixelRatio || pixelRatio;\n\t\t}\n\n\t\tcanvas.style.width = width + 'px';\n\t\tcanvas.style.height = height + 'px';\n\t};\n\t// -- Canvas methods\n\thelpers.clear = function(chart) {\n\t\tchart.ctx.clearRect(0, 0, chart.width, chart.height);\n\t};\n\thelpers.fontString = function(pixelSize, fontStyle, fontFamily) {\n\t\treturn fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n\t};\n\thelpers.longestText = function(ctx, font, arrayOfThings, cache) {\n\t\tcache = cache || {};\n\t\tvar data = cache.data = cache.data || {};\n\t\tvar gc = cache.garbageCollect = cache.garbageCollect || [];\n\n\t\tif (cache.font !== font) {\n\t\t\tdata = cache.data = {};\n\t\t\tgc = cache.garbageCollect = [];\n\t\t\tcache.font = font;\n\t\t}\n\n\t\tctx.font = font;\n\t\tvar longest = 0;\n\t\thelpers.each(arrayOfThings, function(thing) {\n\t\t\t// Undefined strings and arrays should not be measured\n\t\t\tif (thing !== undefined && thing !== null && helpers.isArray(thing) !== true) {\n\t\t\t\tlongest = helpers.measureText(ctx, data, gc, longest, thing);\n\t\t\t} else if (helpers.isArray(thing)) {\n\t\t\t\t// if it is an array lets measure each element\n\t\t\t\t// to do maybe simplify this function a bit so we can do this more recursively?\n\t\t\t\thelpers.each(thing, function(nestedThing) {\n\t\t\t\t\t// Undefined strings and arrays should not be measured\n\t\t\t\t\tif (nestedThing !== undefined && nestedThing !== null && !helpers.isArray(nestedThing)) {\n\t\t\t\t\t\tlongest = helpers.measureText(ctx, data, gc, longest, nestedThing);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tvar gcLen = gc.length / 2;\n\t\tif (gcLen > arrayOfThings.length) {\n\t\t\tfor (var i = 0; i < gcLen; i++) {\n\t\t\t\tdelete data[gc[i]];\n\t\t\t}\n\t\t\tgc.splice(0, gcLen);\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers.measureText = function(ctx, data, gc, longest, string) {\n\t\tvar textWidth = data[string];\n\t\tif (!textWidth) {\n\t\t\ttextWidth = data[string] = ctx.measureText(string).width;\n\t\t\tgc.push(string);\n\t\t}\n\t\tif (textWidth > longest) {\n\t\t\tlongest = textWidth;\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers.numberOfLabelLines = function(arrayOfThings) {\n\t\tvar numberOfLines = 1;\n\t\thelpers.each(arrayOfThings, function(thing) {\n\t\t\tif (helpers.isArray(thing)) {\n\t\t\t\tif (thing.length > numberOfLines) {\n\t\t\t\t\tnumberOfLines = thing.length;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn numberOfLines;\n\t};\n\thelpers.drawRoundedRectangle = function(ctx, x, y, width, height, radius) {\n\t\tctx.beginPath();\n\t\tctx.moveTo(x + radius, y);\n\t\tctx.lineTo(x + width - radius, y);\n\t\tctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\t\tctx.lineTo(x + width, y + height - radius);\n\t\tctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\t\tctx.lineTo(x + radius, y + height);\n\t\tctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\t\tctx.lineTo(x, y + radius);\n\t\tctx.quadraticCurveTo(x, y, x + radius, y);\n\t\tctx.closePath();\n\t};\n\thelpers.color = function(c) {\n\t\tif (!color) {\n\t\t\tconsole.error('Color.js not found!');\n\t\t\treturn c;\n\t\t}\n\n\t\t/* global CanvasGradient */\n\t\tif (c instanceof CanvasGradient) {\n\t\t\treturn color(Chart.defaults.global.defaultColor);\n\t\t}\n\n\t\treturn color(c);\n\t};\n\thelpers.addResizeListener = function(node, callback) {\n\t\t// Hide an iframe before the node\n\t\tvar hiddenIframe = document.createElement('iframe');\n\t\tvar hiddenIframeClass = 'chartjs-hidden-iframe';\n\n\t\tif (hiddenIframe.classlist) {\n\t\t\t// can use classlist\n\t\t\thiddenIframe.classlist.add(hiddenIframeClass);\n\t\t} else {\n\t\t\thiddenIframe.setAttribute('class', hiddenIframeClass);\n\t\t}\n\n\t\t// Set the style\n\t\thiddenIframe.tabIndex = -1;\n\t\tvar style = hiddenIframe.style;\n\t\tstyle.width = '100%';\n\t\tstyle.display = 'block';\n\t\tstyle.border = 0;\n\t\tstyle.height = 0;\n\t\tstyle.margin = 0;\n\t\tstyle.position = 'absolute';\n\t\tstyle.left = 0;\n\t\tstyle.right = 0;\n\t\tstyle.top = 0;\n\t\tstyle.bottom = 0;\n\n\t\t// Insert the iframe so that contentWindow is available\n\t\tnode.insertBefore(hiddenIframe, node.firstChild);\n\n\t\t(hiddenIframe.contentWindow || hiddenIframe).onresize = function() {\n\t\t\tif (callback) {\n\t\t\t\treturn callback();\n\t\t\t}\n\t\t};\n\t};\n\thelpers.removeResizeListener = function(node) {\n\t\tvar hiddenIframe = node.querySelector('.chartjs-hidden-iframe');\n\n\t\t// Remove the resize detect iframe\n\t\tif (hiddenIframe) {\n\t\t\thiddenIframe.parentNode.removeChild(hiddenIframe);\n\t\t}\n\t};\n\thelpers.isArray = Array.isArray?\n\t\tfunction(obj) {\n\t\t\treturn Array.isArray(obj);\n\t\t} :\n\t\tfunction(obj) {\n\t\t\treturn Object.prototype.toString.call(obj) === '[object Array]';\n\t\t};\n\t// ! @see http://stackoverflow.com/a/14853974\n\thelpers.arrayEquals = function(a0, a1) {\n\t\tvar i, ilen, v0, v1;\n\n\t\tif (!a0 || !a1 || a0.length !== a1.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (i = 0, ilen=a0.length; i < ilen; ++i) {\n\t\t\tv0 = a0[i];\n\t\t\tv1 = a1[i];\n\n\t\t\tif (v0 instanceof Array && v1 instanceof Array) {\n\t\t\t\tif (!helpers.arrayEquals(v0, v1)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else if (v0 !== v1) {\n\t\t\t\t// NOTE: two different object instances will never be equal: {x:20} != {x:20}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t};\n\thelpers.callCallback = function(fn, args, _tArg) {\n\t\tif (fn && typeof fn.call === 'function') {\n\t\t\tfn.apply(_tArg, args);\n\t\t}\n\t};\n\thelpers.getHoverColor = function(colorValue) {\n\t\t/* global CanvasPattern */\n\t\treturn (colorValue instanceof CanvasPattern) ?\n\t\t\tcolorValue :\n\t\t\thelpers.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n\t};\n};\n\n},{\"3\":3}],27:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function() {\n\n\t// Occupy the global variable of Chart, and create a simple base class\n\tvar Chart = function(context, config) {\n\t\tvar me = this;\n\t\tvar helpers = Chart.helpers;\n\t\tme.config = config || {\n\t\t\tdata: {\n\t\t\t\tdatasets: []\n\t\t\t}\n\t\t};\n\n\t\t// Support a jQuery'd canvas element\n\t\tif (context.length && context[0].getContext) {\n\t\t\tcontext = context[0];\n\t\t}\n\n\t\t// Support a canvas domnode\n\t\tif (context.getContext) {\n\t\t\tcontext = context.getContext('2d');\n\t\t}\n\n\t\tme.ctx = context;\n\t\tme.canvas = context.canvas;\n\n\t\tcontext.canvas.style.display = context.canvas.style.display || 'block';\n\n\t\t// Figure out what the size of the chart will be.\n\t\t// If the canvas has a specified width and height, we use those else\n\t\t// we look to see if the canvas node has a CSS width and height.\n\t\t// If there is still no height, fill the parent container\n\t\tme.width = context.canvas.width || parseInt(helpers.getStyle(context.canvas, 'width'), 10) || helpers.getMaximumWidth(context.canvas);\n\t\tme.height = context.canvas.height || parseInt(helpers.getStyle(context.canvas, 'height'), 10) || helpers.getMaximumHeight(context.canvas);\n\n\t\tme.aspectRatio = me.width / me.height;\n\n\t\tif (isNaN(me.aspectRatio) || isFinite(me.aspectRatio) === false) {\n\t\t\t// If the canvas has no size, try and figure out what the aspect ratio will be.\n\t\t\t// Some charts prefer square canvases (pie, radar, etc). If that is specified, use that\n\t\t\t// else use the canvas default ratio of 2\n\t\t\tme.aspectRatio = config.aspectRatio !== undefined ? config.aspectRatio : 2;\n\t\t}\n\n\t\t// Store the original style of the element so we can set it back\n\t\tme.originalCanvasStyleWidth = context.canvas.style.width;\n\t\tme.originalCanvasStyleHeight = context.canvas.style.height;\n\n\t\t// High pixel density displays - multiply the size of the canvas height/width by the device pixel ratio, then scale.\n\t\thelpers.retinaScale(me);\n\t\tme.controller = new Chart.Controller(me);\n\n\t\t// Always bind this so that if the responsive state changes we still work\n\t\thelpers.addResizeListener(context.canvas.parentNode, function() {\n\t\t\tif (me.controller && me.controller.config.options.responsive) {\n\t\t\t\tme.controller.resize();\n\t\t\t}\n\t\t});\n\n\t\treturn me.controller ? me.controller : me;\n\n\t};\n\n\t// Globally expose the defaults to allow for user updating/changing\n\tChart.defaults = {\n\t\tglobal: {\n\t\t\tresponsive: true,\n\t\t\tresponsiveAnimationDuration: 0,\n\t\t\tmaintainAspectRatio: true,\n\t\t\tevents: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n\t\t\thover: {\n\t\t\t\tonHover: null,\n\t\t\t\tmode: 'single',\n\t\t\t\tanimationDuration: 400\n\t\t\t},\n\t\t\tonClick: null,\n\t\t\tdefaultColor: 'rgba(0,0,0,0.1)',\n\t\t\tdefaultFontColor: '#666',\n\t\t\tdefaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\t\t\tdefaultFontSize: 12,\n\t\t\tdefaultFontStyle: 'normal',\n\t\t\tshowLines: true,\n\n\t\t\t// Element defaults defined in element extensions\n\t\t\telements: {},\n\n\t\t\t// Legend callback string\n\t\t\tlegendCallback: function(chart) {\n\t\t\t\tvar text = [];\n\t\t\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\t\t\t\tfor (var i = 0; i < chart.data.datasets.length; i++) {\n\t\t\t\t\ttext.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\t\t\t\t\tif (chart.data.datasets[i].label) {\n\t\t\t\t\t\ttext.push(chart.data.datasets[i].label);\n\t\t\t\t\t}\n\t\t\t\t\ttext.push('</li>');\n\t\t\t\t}\n\t\t\t\ttext.push('</ul>');\n\n\t\t\t\treturn text.join('');\n\t\t\t}\n\t\t}\n\t};\n\n\tChart.Chart = Chart;\n\n\treturn Chart;\n\n};\n\n},{}],28:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\t// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n\t// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n\t// It is this service's responsibility of carrying out that layout.\n\tChart.layoutService = {\n\t\tdefaults: {},\n\n\t\t// Register a box to a chartInstance. A box is simply a reference to an object that requires layout. eg. Scales, Legend, Plugins.\n\t\taddBox: function(chartInstance, box) {\n\t\t\tif (!chartInstance.boxes) {\n\t\t\t\tchartInstance.boxes = [];\n\t\t\t}\n\t\t\tchartInstance.boxes.push(box);\n\t\t},\n\n\t\tremoveBox: function(chartInstance, box) {\n\t\t\tif (!chartInstance.boxes) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tchartInstance.boxes.splice(chartInstance.boxes.indexOf(box), 1);\n\t\t},\n\n\t\t// The most important function\n\t\tupdate: function(chartInstance, width, height) {\n\n\t\t\tif (!chartInstance) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar xPadding = 0;\n\t\t\tvar yPadding = 0;\n\n\t\t\tvar leftBoxes = helpers.where(chartInstance.boxes, function(box) {\n\t\t\t\treturn box.options.position === 'left';\n\t\t\t});\n\t\t\tvar rightBoxes = helpers.where(chartInstance.boxes, function(box) {\n\t\t\t\treturn box.options.position === 'right';\n\t\t\t});\n\t\t\tvar topBoxes = helpers.where(chartInstance.boxes, function(box) {\n\t\t\t\treturn box.options.position === 'top';\n\t\t\t});\n\t\t\tvar bottomBoxes = helpers.where(chartInstance.boxes, function(box) {\n\t\t\t\treturn box.options.position === 'bottom';\n\t\t\t});\n\n\t\t\t// Boxes that overlay the chartarea such as the radialLinear scale\n\t\t\tvar chartAreaBoxes = helpers.where(chartInstance.boxes, function(box) {\n\t\t\t\treturn box.options.position === 'chartArea';\n\t\t\t});\n\n\t\t\t// Ensure that full width boxes are at the very top / bottom\n\t\t\ttopBoxes.sort(function(a, b) {\n\t\t\t\treturn (b.options.fullWidth ? 1 : 0) - (a.options.fullWidth ? 1 : 0);\n\t\t\t});\n\t\t\tbottomBoxes.sort(function(a, b) {\n\t\t\t\treturn (a.options.fullWidth ? 1 : 0) - (b.options.fullWidth ? 1 : 0);\n\t\t\t});\n\n\t\t\t// Essentially we now have any number of boxes on each of the 4 sides.\n\t\t\t// Our canvas looks like the following.\n\t\t\t// The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n\t\t\t// B1 is the bottom axis\n\t\t\t// There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n\t\t\t// These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n\t\t\t// an error will be thrown.\n\t\t\t//\n\t\t\t// |----------------------------------------------------|\n\t\t\t// |                  T1 (Full Width)                   |\n\t\t\t// |----------------------------------------------------|\n\t\t\t// |    |    |                 T2                  |    |\n\t\t\t// |    |----|-------------------------------------|----|\n\t\t\t// |    |    | C1 |                           | C2 |    |\n\t\t\t// |    |    |----|                           |----|    |\n\t\t\t// |    |    |                                     |    |\n\t\t\t// | L1 | L2 |           ChartArea (C0)            | R1 |\n\t\t\t// |    |    |                                     |    |\n\t\t\t// |    |    |----|                           |----|    |\n\t\t\t// |    |    | C3 |                           | C4 |    |\n\t\t\t// |    |----|-------------------------------------|----|\n\t\t\t// |    |    |                 B1                  |    |\n\t\t\t// |----------------------------------------------------|\n\t\t\t// |                  B2 (Full Width)                   |\n\t\t\t// |----------------------------------------------------|\n\t\t\t//\n\t\t\t// What we do to find the best sizing, we do the following\n\t\t\t// 1. Determine the minimum size of the chart area.\n\t\t\t// 2. Split the remaining width equally between each vertical axis\n\t\t\t// 3. Split the remaining height equally between each horizontal axis\n\t\t\t// 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n\t\t\t// 5. Adjust the sizes of each axis based on it's minimum reported size.\n\t\t\t// 6. Refit each axis\n\t\t\t// 7. Position each axis in the final location\n\t\t\t// 8. Tell the chart the final location of the chart area\n\t\t\t// 9. Tell any axes that overlay the chart area the positions of the chart area\n\n\t\t\t// Step 1\n\t\t\tvar chartWidth = width - (2 * xPadding);\n\t\t\tvar chartHeight = height - (2 * yPadding);\n\t\t\tvar chartAreaWidth = chartWidth / 2; // min 50%\n\t\t\tvar chartAreaHeight = chartHeight / 2; // min 50%\n\n\t\t\t// Step 2\n\t\t\tvar verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length);\n\n\t\t\t// Step 3\n\t\t\tvar horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length);\n\n\t\t\t// Step 4\n\t\t\tvar maxChartAreaWidth = chartWidth;\n\t\t\tvar maxChartAreaHeight = chartHeight;\n\t\t\tvar minBoxSizes = [];\n\n\t\t\tfunction getMinimumBoxSize(box) {\n\t\t\t\tvar minSize;\n\t\t\t\tvar isHorizontal = box.isHorizontal();\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tminSize = box.update(box.options.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);\n\t\t\t\t\tmaxChartAreaHeight -= minSize.height;\n\t\t\t\t} else {\n\t\t\t\t\tminSize = box.update(verticalBoxWidth, chartAreaHeight);\n\t\t\t\t\tmaxChartAreaWidth -= minSize.width;\n\t\t\t\t}\n\n\t\t\t\tminBoxSizes.push({\n\t\t\t\t\thorizontal: isHorizontal,\n\t\t\t\t\tminSize: minSize,\n\t\t\t\t\tbox: box\n\t\t\t\t});\n\t\t\t}\n\n\t\t\thelpers.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize);\n\n\t\t\t// At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n\t\t\t// be if the axes are drawn at their minimum sizes.\n\n\t\t\t// Steps 5 & 6\n\t\t\tvar totalLeftBoxesWidth = xPadding;\n\t\t\tvar totalRightBoxesWidth = xPadding;\n\t\t\tvar totalTopBoxesHeight = yPadding;\n\t\t\tvar totalBottomBoxesHeight = yPadding;\n\n\t\t\t// Function to fit a box\n\t\t\tfunction fitBox(box) {\n\t\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minBox) {\n\t\t\t\t\treturn minBox.box === box;\n\t\t\t\t});\n\n\t\t\t\tif (minBoxSize) {\n\t\t\t\t\tif (box.isHorizontal()) {\n\t\t\t\t\t\tvar scaleMargin = {\n\t\t\t\t\t\t\tleft: totalLeftBoxesWidth,\n\t\t\t\t\t\t\tright: totalRightBoxesWidth,\n\t\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\t\tbottom: 0\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n\t\t\t\t\t\t// on the margin. Sometimes they need to increase in size slightly\n\t\t\t\t\t\tbox.update(box.options.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Update, and calculate the left and right margins for the horizontal boxes\n\t\t\thelpers.each(leftBoxes.concat(rightBoxes), fitBox);\n\n\t\t\thelpers.each(leftBoxes, function(box) {\n\t\t\t\ttotalLeftBoxesWidth += box.width;\n\t\t\t});\n\n\t\t\thelpers.each(rightBoxes, function(box) {\n\t\t\t\ttotalRightBoxesWidth += box.width;\n\t\t\t});\n\n\t\t\t// Set the Left and Right margins for the horizontal boxes\n\t\t\thelpers.each(topBoxes.concat(bottomBoxes), fitBox);\n\n\t\t\t// Figure out how much margin is on the top and bottom of the vertical boxes\n\t\t\thelpers.each(topBoxes, function(box) {\n\t\t\t\ttotalTopBoxesHeight += box.height;\n\t\t\t});\n\n\t\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\t\ttotalBottomBoxesHeight += box.height;\n\t\t\t});\n\n\t\t\tfunction finalFitVerticalBox(box) {\n\t\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minSize) {\n\t\t\t\t\treturn minSize.box === box;\n\t\t\t\t});\n\n\t\t\t\tvar scaleMargin = {\n\t\t\t\t\tleft: 0,\n\t\t\t\t\tright: 0,\n\t\t\t\t\ttop: totalTopBoxesHeight,\n\t\t\t\t\tbottom: totalBottomBoxesHeight\n\t\t\t\t};\n\n\t\t\t\tif (minBoxSize) {\n\t\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Let the left layout know the final margin\n\t\t\thelpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox);\n\n\t\t\t// Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\t\t\ttotalLeftBoxesWidth = xPadding;\n\t\t\ttotalRightBoxesWidth = xPadding;\n\t\t\ttotalTopBoxesHeight = yPadding;\n\t\t\ttotalBottomBoxesHeight = yPadding;\n\n\t\t\thelpers.each(leftBoxes, function(box) {\n\t\t\t\ttotalLeftBoxesWidth += box.width;\n\t\t\t});\n\n\t\t\thelpers.each(rightBoxes, function(box) {\n\t\t\t\ttotalRightBoxesWidth += box.width;\n\t\t\t});\n\n\t\t\thelpers.each(topBoxes, function(box) {\n\t\t\t\ttotalTopBoxesHeight += box.height;\n\t\t\t});\n\t\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\t\ttotalBottomBoxesHeight += box.height;\n\t\t\t});\n\n\t\t\t// Figure out if our chart area changed. This would occur if the dataset layout label rotation\n\t\t\t// changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n\t\t\t// without calling `fit` again\n\t\t\tvar newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;\n\t\t\tvar newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;\n\n\t\t\tif (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n\t\t\t\thelpers.each(leftBoxes, function(box) {\n\t\t\t\t\tbox.height = newMaxChartAreaHeight;\n\t\t\t\t});\n\n\t\t\t\thelpers.each(rightBoxes, function(box) {\n\t\t\t\t\tbox.height = newMaxChartAreaHeight;\n\t\t\t\t});\n\n\t\t\t\thelpers.each(topBoxes, function(box) {\n\t\t\t\t\tif (!box.options.fullWidth) {\n\t\t\t\t\t\tbox.width = newMaxChartAreaWidth;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\t\t\tif (!box.options.fullWidth) {\n\t\t\t\t\t\tbox.width = newMaxChartAreaWidth;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tmaxChartAreaHeight = newMaxChartAreaHeight;\n\t\t\t\tmaxChartAreaWidth = newMaxChartAreaWidth;\n\t\t\t}\n\n\t\t\t// Step 7 - Position the boxes\n\t\t\tvar left = xPadding;\n\t\t\tvar top = yPadding;\n\n\t\t\tfunction placeBox(box) {\n\t\t\t\tif (box.isHorizontal()) {\n\t\t\t\t\tbox.left = box.options.fullWidth ? xPadding : totalLeftBoxesWidth;\n\t\t\t\t\tbox.right = box.options.fullWidth ? width - xPadding : totalLeftBoxesWidth + maxChartAreaWidth;\n\t\t\t\t\tbox.top = top;\n\t\t\t\t\tbox.bottom = top + box.height;\n\n\t\t\t\t\t// Move to next point\n\t\t\t\t\ttop = box.bottom;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbox.left = left;\n\t\t\t\t\tbox.right = left + box.width;\n\t\t\t\t\tbox.top = totalTopBoxesHeight;\n\t\t\t\t\tbox.bottom = totalTopBoxesHeight + maxChartAreaHeight;\n\n\t\t\t\t\t// Move to next point\n\t\t\t\t\tleft = box.right;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thelpers.each(leftBoxes.concat(topBoxes), placeBox);\n\n\t\t\t// Account for chart width and height\n\t\t\tleft += maxChartAreaWidth;\n\t\t\ttop += maxChartAreaHeight;\n\n\t\t\thelpers.each(rightBoxes, placeBox);\n\t\t\thelpers.each(bottomBoxes, placeBox);\n\n\t\t\t// Step 8\n\t\t\tchartInstance.chartArea = {\n\t\t\t\tleft: totalLeftBoxesWidth,\n\t\t\t\ttop: totalTopBoxesHeight,\n\t\t\t\tright: totalLeftBoxesWidth + maxChartAreaWidth,\n\t\t\t\tbottom: totalTopBoxesHeight + maxChartAreaHeight\n\t\t\t};\n\n\t\t\t// Step 9\n\t\t\thelpers.each(chartAreaBoxes, function(box) {\n\t\t\t\tbox.left = chartInstance.chartArea.left;\n\t\t\t\tbox.top = chartInstance.chartArea.top;\n\t\t\t\tbox.right = chartInstance.chartArea.right;\n\t\t\t\tbox.bottom = chartInstance.chartArea.bottom;\n\n\t\t\t\tbox.update(maxChartAreaWidth, maxChartAreaHeight);\n\t\t\t});\n\t\t}\n\t};\n};\n\n},{}],29:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\tvar noop = helpers.noop;\n\n\tChart.defaults.global.legend = {\n\n\t\tdisplay: true,\n\t\tposition: 'top',\n\t\tfullWidth: true, // marks that this box should take the full width of the canvas (pushing down other boxes)\n\t\treverse: false,\n\n\t\t// a callback that will handle\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.datasetIndex;\n\t\t\tvar ci = this.chart;\n\t\t\tvar meta = ci.getDatasetMeta(index);\n\n\t\t\t// See controller.isDatasetVisible comment\n\t\t\tmeta.hidden = meta.hidden === null? !ci.data.datasets[index].hidden : null;\n\n\t\t\t// We hid a dataset ... rerender the chart\n\t\t\tci.update();\n\t\t},\n\n\t\tonHover: null,\n\n\t\tlabels: {\n\t\t\tboxWidth: 40,\n\t\t\tpadding: 10,\n\t\t\t// Generates labels shown in the legend\n\t\t\t// Valid properties to return:\n\t\t\t// text : text to display\n\t\t\t// fillStyle : fill of coloured box\n\t\t\t// strokeStyle: stroke of coloured box\n\t\t\t// hidden : if this legend item refers to a hidden item\n\t\t\t// lineCap : cap style for line\n\t\t\t// lineDash\n\t\t\t// lineDashOffset :\n\t\t\t// lineJoin :\n\t\t\t// lineWidth :\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\treturn helpers.isArray(data.datasets) ? data.datasets.map(function(dataset, i) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttext: dataset.label,\n\t\t\t\t\t\tfillStyle: (!helpers.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0]),\n\t\t\t\t\t\thidden: !chart.isDatasetVisible(i),\n\t\t\t\t\t\tlineCap: dataset.borderCapStyle,\n\t\t\t\t\t\tlineDash: dataset.borderDash,\n\t\t\t\t\t\tlineDashOffset: dataset.borderDashOffset,\n\t\t\t\t\t\tlineJoin: dataset.borderJoinStyle,\n\t\t\t\t\t\tlineWidth: dataset.borderWidth,\n\t\t\t\t\t\tstrokeStyle: dataset.borderColor,\n\t\t\t\t\t\tpointStyle: dataset.pointStyle,\n\n\t\t\t\t\t\t// Below is extra data used for toggling the datasets\n\t\t\t\t\t\tdatasetIndex: i\n\t\t\t\t\t};\n\t\t\t\t}, this) : [];\n\t\t\t}\n\t\t}\n\t};\n\n\tChart.Legend = Chart.Element.extend({\n\n\t\tinitialize: function(config) {\n\t\t\thelpers.extend(this, config);\n\n\t\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\t\tthis.legendHitBoxes = [];\n\n\t\t\t// Are we in doughnut mode which has a different data type\n\t\t\tthis.doughnutMode = false;\n\t\t},\n\n\t\t// These methods are ordered by lifecyle. Utilities then follow.\n\t\t// Any function defined here is inherited by all legend types.\n\t\t// Any function can be extended by the legend type\n\n\t\tbeforeUpdate: noop,\n\t\tupdate: function(maxWidth, maxHeight, margins) {\n\t\t\tvar me = this;\n\n\t\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\t\tme.beforeUpdate();\n\n\t\t\t// Absorb the master measurements\n\t\t\tme.maxWidth = maxWidth;\n\t\t\tme.maxHeight = maxHeight;\n\t\t\tme.margins = margins;\n\n\t\t\t// Dimensions\n\t\t\tme.beforeSetDimensions();\n\t\t\tme.setDimensions();\n\t\t\tme.afterSetDimensions();\n\t\t\t// Labels\n\t\t\tme.beforeBuildLabels();\n\t\t\tme.buildLabels();\n\t\t\tme.afterBuildLabels();\n\n\t\t\t// Fit\n\t\t\tme.beforeFit();\n\t\t\tme.fit();\n\t\t\tme.afterFit();\n\t\t\t//\n\t\t\tme.afterUpdate();\n\n\t\t\treturn me.minSize;\n\t\t},\n\t\tafterUpdate: noop,\n\n\t\t//\n\n\t\tbeforeSetDimensions: noop,\n\t\tsetDimensions: function() {\n\t\t\tvar me = this;\n\t\t\t// Set the unconstrained dimension before label rotation\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\t// Reset position before calculating rotation\n\t\t\t\tme.width = me.maxWidth;\n\t\t\t\tme.left = 0;\n\t\t\t\tme.right = me.width;\n\t\t\t} else {\n\t\t\t\tme.height = me.maxHeight;\n\n\t\t\t\t// Reset position before calculating rotation\n\t\t\t\tme.top = 0;\n\t\t\t\tme.bottom = me.height;\n\t\t\t}\n\n\t\t\t// Reset padding\n\t\t\tme.paddingLeft = 0;\n\t\t\tme.paddingTop = 0;\n\t\t\tme.paddingRight = 0;\n\t\t\tme.paddingBottom = 0;\n\n\t\t\t// Reset minSize\n\t\t\tme.minSize = {\n\t\t\t\twidth: 0,\n\t\t\t\theight: 0\n\t\t\t};\n\t\t},\n\t\tafterSetDimensions: noop,\n\n\t\t//\n\n\t\tbeforeBuildLabels: noop,\n\t\tbuildLabels: function() {\n\t\t\tvar me = this;\n\t\t\tme.legendItems = me.options.labels.generateLabels.call(me, me.chart);\n\t\t\tif (me.options.reverse) {\n\t\t\t\tme.legendItems.reverse();\n\t\t\t}\n\t\t},\n\t\tafterBuildLabels: noop,\n\n\t\t//\n\n\t\tbeforeFit: noop,\n\t\tfit: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar labelOpts = opts.labels;\n\t\t\tvar display = opts.display;\n\n\t\t\tvar ctx = me.ctx;\n\n\t\t\tvar globalDefault = Chart.defaults.global,\n\t\t\t\titemOrDefault = helpers.getValueOrDefault,\n\t\t\t\tfontSize = itemOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize),\n\t\t\t\tfontStyle = itemOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle),\n\t\t\t\tfontFamily = itemOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily),\n\t\t\t\tlabelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\n\t\t\t// Reset hit boxes\n\t\t\tvar hitboxes = me.legendHitBoxes = [];\n\n\t\t\tvar minSize = me.minSize;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\t\tminSize.height = display ? 10 : 0;\n\t\t\t} else {\n\t\t\t\tminSize.width = display ? 10 : 0;\n\t\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t\t}\n\n\t\t\t// Increase sizes here\n\t\t\tif (display) {\n\t\t\t\tctx.font = labelFont;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\t// Labels\n\n\t\t\t\t\t// Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n\t\t\t\t\tvar lineWidths = me.lineWidths = [0];\n\t\t\t\t\tvar totalHeight = me.legendItems.length ? fontSize + (labelOpts.padding) : 0;\n\n\t\t\t\t\tctx.textAlign = 'left';\n\t\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\t\tvar boxWidth = labelOpts.usePointStyle ?\n\t\t\t\t\t\t\tfontSize * Math.sqrt(2) :\n\t\t\t\t\t\t\tlabelOpts.boxWidth;\n\n\t\t\t\t\t\tvar width = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\t\t\t\t\t\tif (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= me.width) {\n\t\t\t\t\t\t\ttotalHeight += fontSize + (labelOpts.padding);\n\t\t\t\t\t\t\tlineWidths[lineWidths.length] = me.left;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\t\twidth: width,\n\t\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tlineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n\t\t\t\t\t});\n\n\t\t\t\t\tminSize.height += totalHeight;\n\n\t\t\t\t} else {\n\t\t\t\t\tvar vPadding = labelOpts.padding;\n\t\t\t\t\tvar columnWidths = me.columnWidths = [];\n\t\t\t\t\tvar totalWidth = labelOpts.padding;\n\t\t\t\t\tvar currentColWidth = 0;\n\t\t\t\t\tvar currentColHeight = 0;\n\t\t\t\t\tvar itemHeight = fontSize + vPadding;\n\n\t\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\t\t// If usePointStyle is set, multiple boxWidth by 2 since it represents\n\t\t\t\t\t\t// the radius and not truly the width\n\t\t\t\t\t\tvar boxWidth = labelOpts.usePointStyle ? 2 * labelOpts.boxWidth : labelOpts.boxWidth;\n\n\t\t\t\t\t\tvar itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\t\t// If too tall, go to new column\n\t\t\t\t\t\tif (currentColHeight + itemHeight > minSize.height) {\n\t\t\t\t\t\t\ttotalWidth += currentColWidth + labelOpts.padding;\n\t\t\t\t\t\t\tcolumnWidths.push(currentColWidth); // previous column width\n\n\t\t\t\t\t\t\tcurrentColWidth = 0;\n\t\t\t\t\t\t\tcurrentColHeight = 0;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Get max width\n\t\t\t\t\t\tcurrentColWidth = Math.max(currentColWidth, itemWidth);\n\t\t\t\t\t\tcurrentColHeight += itemHeight;\n\n\t\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\t\twidth: itemWidth,\n\t\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\n\t\t\t\t\ttotalWidth += currentColWidth;\n\t\t\t\t\tcolumnWidths.push(currentColWidth);\n\t\t\t\t\tminSize.width += totalWidth;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.width = minSize.width;\n\t\t\tme.height = minSize.height;\n\t\t},\n\t\tafterFit: noop,\n\n\t\t// Shared Methods\n\t\tisHorizontal: function() {\n\t\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t\t},\n\n\t\t// Actualy draw the legend on the canvas\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar labelOpts = opts.labels;\n\t\t\tvar globalDefault = Chart.defaults.global,\n\t\t\t\tlineDefault = globalDefault.elements.line,\n\t\t\t\tlegendWidth = me.width,\n\t\t\t\tlineWidths = me.lineWidths;\n\n\t\t\tif (opts.display) {\n\t\t\t\tvar ctx = me.ctx,\n\t\t\t\t\tcursor,\n\t\t\t\t\titemOrDefault = helpers.getValueOrDefault,\n\t\t\t\t\tfontColor = itemOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor),\n\t\t\t\t\tfontSize = itemOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize),\n\t\t\t\t\tfontStyle = itemOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle),\n\t\t\t\t\tfontFamily = itemOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily),\n\t\t\t\t\tlabelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\n\t\t\t\t// Canvas setup\n\t\t\t\tctx.textAlign = 'left';\n\t\t\t\tctx.textBaseline = 'top';\n\t\t\t\tctx.lineWidth = 0.5;\n\t\t\t\tctx.strokeStyle = fontColor; // for strikethrough effect\n\t\t\t\tctx.fillStyle = fontColor; // render in correct colour\n\t\t\t\tctx.font = labelFont;\n\n\t\t\t\tvar boxWidth = labelOpts.boxWidth,\n\t\t\t\t\thitboxes = me.legendHitBoxes;\n\n\t\t\t\t// current position\n\t\t\t\tvar drawLegendBox = function(x, y, legendItem) {\n\t\t\t\t\tif (isNaN(boxWidth) || boxWidth <= 0) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Set the ctx for the box\n\t\t\t\t\tctx.save();\n\n\t\t\t\t\tctx.fillStyle = itemOrDefault(legendItem.fillStyle, globalDefault.defaultColor);\n\t\t\t\t\tctx.lineCap = itemOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\n\t\t\t\t\tctx.lineDashOffset = itemOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n\t\t\t\t\tctx.lineJoin = itemOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\n\t\t\t\t\tctx.lineWidth = itemOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\n\t\t\t\t\tctx.strokeStyle = itemOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);\n\t\t\t\t\tvar isLineWidthZero = (itemOrDefault(legendItem.lineWidth, lineDefault.borderWidth) === 0);\n\n\t\t\t\t\tif (ctx.setLineDash) {\n\t\t\t\t\t\t// IE 9 and 10 do not support line dash\n\t\t\t\t\t\tctx.setLineDash(itemOrDefault(legendItem.lineDash, lineDefault.borderDash));\n\t\t\t\t\t}\n\n\t\t\t\t\tif (opts.labels && opts.labels.usePointStyle) {\n\t\t\t\t\t\t// Recalulate x and y for drawPoint() because its expecting\n\t\t\t\t\t\t// x and y to be center of figure (instead of top left)\n\t\t\t\t\t\tvar radius = fontSize * Math.SQRT2 / 2;\n\t\t\t\t\t\tvar offSet = radius / Math.SQRT2;\n\t\t\t\t\t\tvar centerX = x + offSet;\n\t\t\t\t\t\tvar centerY = y + offSet;\n\n\t\t\t\t\t\t// Draw pointStyle as legend symbol\n\t\t\t\t\t\tChart.canvasHelpers.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Draw box as legend symbol\n\t\t\t\t\t\tif (!isLineWidthZero) {\n\t\t\t\t\t\t\tctx.strokeRect(x, y, boxWidth, fontSize);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tctx.fillRect(x, y, boxWidth, fontSize);\n\t\t\t\t\t}\n\n\t\t\t\t\tctx.restore();\n\t\t\t\t};\n\t\t\t\tvar fillText = function(x, y, legendItem, textWidth) {\n\t\t\t\t\tctx.fillText(legendItem.text, boxWidth + (fontSize / 2) + x, y);\n\n\t\t\t\t\tif (legendItem.hidden) {\n\t\t\t\t\t\t// Strikethrough the text if hidden\n\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\tctx.lineWidth = 2;\n\t\t\t\t\t\tctx.moveTo(boxWidth + (fontSize / 2) + x, y + (fontSize / 2));\n\t\t\t\t\t\tctx.lineTo(boxWidth + (fontSize / 2) + x + textWidth, y + (fontSize / 2));\n\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t// Horizontal\n\t\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tcursor = {\n\t\t\t\t\t\tx: me.left + ((legendWidth - lineWidths[0]) / 2),\n\t\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\t\tline: 0\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\tcursor = {\n\t\t\t\t\t\tx: me.left + labelOpts.padding,\n\t\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\t\tline: 0\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tvar itemHeight = fontSize + labelOpts.padding;\n\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar textWidth = ctx.measureText(legendItem.text).width,\n\t\t\t\t\t\twidth = labelOpts.usePointStyle ?\n\t\t\t\t\t\t\tfontSize + (fontSize / 2) + textWidth :\n\t\t\t\t\t\t\tboxWidth + (fontSize / 2) + textWidth,\n\t\t\t\t\t\tx = cursor.x,\n\t\t\t\t\t\ty = cursor.y;\n\n\t\t\t\t\tif (isHorizontal) {\n\t\t\t\t\t\tif (x + width >= legendWidth) {\n\t\t\t\t\t\t\ty = cursor.y += itemHeight;\n\t\t\t\t\t\t\tcursor.line++;\n\t\t\t\t\t\t\tx = cursor.x = me.left + ((legendWidth - lineWidths[cursor.line]) / 2);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (y + itemHeight > me.bottom) {\n\t\t\t\t\t\tx = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n\t\t\t\t\t\ty = cursor.y = me.top;\n\t\t\t\t\t\tcursor.line++;\n\t\t\t\t\t}\n\n\t\t\t\t\tdrawLegendBox(x, y, legendItem);\n\n\t\t\t\t\thitboxes[i].left = x;\n\t\t\t\t\thitboxes[i].top = y;\n\n\t\t\t\t\t// Fill the actual label\n\t\t\t\t\tfillText(x, y, legendItem, textWidth);\n\n\t\t\t\t\tif (isHorizontal) {\n\t\t\t\t\t\tcursor.x += width + (labelOpts.padding);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcursor.y += itemHeight;\n\t\t\t\t\t}\n\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\t// Handle an event\n\t\thandleEvent: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar type = e.type === 'mouseup' ? 'click' : e.type;\n\n\t\t\tif (type === 'mousemove') {\n\t\t\t\tif (!opts.onHover) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else if (type === 'click') {\n\t\t\t\tif (!opts.onClick) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar position = helpers.getRelativePosition(e, me.chart.chart),\n\t\t\t\tx = position.x,\n\t\t\t\ty = position.y;\n\n\t\t\tif (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n\t\t\t\t// See if we are touching one of the dataset boxes\n\t\t\t\tvar lh = me.legendHitBoxes;\n\t\t\t\tfor (var i = 0; i < lh.length; ++i) {\n\t\t\t\t\tvar hitBox = lh[i];\n\n\t\t\t\t\tif (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n\t\t\t\t\t\t// Touching an element\n\t\t\t\t\t\tif (type === 'click') {\n\t\t\t\t\t\t\topts.onClick.call(me, e, me.legendItems[i]);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} else if (type === 'mousemove') {\n\t\t\t\t\t\t\topts.onHover.call(me, e, me.legendItems[i]);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\t// Register the legend plugin\n\tChart.plugins.register({\n\t\tbeforeInit: function(chartInstance) {\n\t\t\tvar opts = chartInstance.options;\n\t\t\tvar legendOpts = opts.legend;\n\n\t\t\tif (legendOpts) {\n\t\t\t\tchartInstance.legend = new Chart.Legend({\n\t\t\t\t\tctx: chartInstance.chart.ctx,\n\t\t\t\t\toptions: legendOpts,\n\t\t\t\t\tchart: chartInstance\n\t\t\t\t});\n\n\t\t\t\tChart.layoutService.addBox(chartInstance, chartInstance.legend);\n\t\t\t}\n\t\t}\n\t});\n};\n\n},{}],30:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar noop = Chart.helpers.noop;\n\n\t/**\n\t * The plugin service singleton\n\t * @namespace Chart.plugins\n\t * @since 2.1.0\n\t */\n\tChart.plugins = {\n\t\t_plugins: [],\n\n\t\t/**\n\t\t * Registers the given plugin(s) if not already registered.\n\t\t * @param {Array|Object} plugins plugin instance(s).\n\t\t */\n\t\tregister: function(plugins) {\n\t\t\tvar p = this._plugins;\n\t\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\t\tif (p.indexOf(plugin) === -1) {\n\t\t\t\t\tp.push(plugin);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Unregisters the given plugin(s) only if registered.\n\t\t * @param {Array|Object} plugins plugin instance(s).\n\t\t */\n\t\tunregister: function(plugins) {\n\t\t\tvar p = this._plugins;\n\t\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\t\tvar idx = p.indexOf(plugin);\n\t\t\t\tif (idx !== -1) {\n\t\t\t\t\tp.splice(idx, 1);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Remove all registered p^lugins.\n\t\t * @since 2.1.5\n\t\t */\n\t\tclear: function() {\n\t\t\tthis._plugins = [];\n\t\t},\n\n\t\t/**\n\t\t * Returns the number of registered plugins?\n\t\t * @returns {Number}\n\t\t * @since 2.1.5\n\t\t */\n\t\tcount: function() {\n\t\t\treturn this._plugins.length;\n\t\t},\n\n\t\t/**\n\t\t * Returns all registered plugin intances.\n\t\t * @returns {Array} array of plugin objects.\n\t\t * @since 2.1.5\n\t\t */\n\t\tgetAll: function() {\n\t\t\treturn this._plugins;\n\t\t},\n\n\t\t/**\n\t\t * Calls registered plugins on the specified extension, with the given args. This\n\t\t * method immediately returns as soon as a plugin explicitly returns false. The\n\t\t * returned value can be used, for instance, to interrupt the current action.\n\t\t * @param {String} extension the name of the plugin method to call (e.g. 'beforeUpdate').\n\t\t * @param {Array} [args] extra arguments to apply to the extension call.\n\t\t * @returns {Boolean} false if any of the plugins return false, else returns true.\n\t\t */\n\t\tnotify: function(extension, args) {\n\t\t\tvar plugins = this._plugins;\n\t\t\tvar ilen = plugins.length;\n\t\t\tvar i, plugin;\n\n\t\t\tfor (i=0; i<ilen; ++i) {\n\t\t\t\tplugin = plugins[i];\n\t\t\t\tif (typeof plugin[extension] === 'function') {\n\t\t\t\t\tif (plugin[extension].apply(plugin, args || []) === false) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\t};\n\n\t/**\n\t * Plugin extension methods.\n\t * @interface Chart.PluginBase\n\t * @since 2.1.0\n\t */\n\tChart.PluginBase = Chart.Element.extend({\n\t\t// Called at start of chart init\n\t\tbeforeInit: noop,\n\n\t\t// Called at end of chart init\n\t\tafterInit: noop,\n\n\t\t// Called at start of update\n\t\tbeforeUpdate: noop,\n\n\t\t// Called at end of update\n\t\tafterUpdate: noop,\n\n\t\t// Called at start of draw\n\t\tbeforeDraw: noop,\n\n\t\t// Called at end of draw\n\t\tafterDraw: noop,\n\n\t\t// Called during destroy\n\t\tdestroy: noop\n\t});\n\n\t/**\n\t * Provided for backward compatibility, use Chart.plugins instead\n\t * @namespace Chart.pluginService\n\t * @deprecated since version 2.1.5\n\t * @todo remove me at version 3\n\t */\n\tChart.pluginService = Chart.plugins;\n};\n\n},{}],31:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\tChart.defaults.scale = {\n\t\tdisplay: true,\n\t\tposition: 'left',\n\n\t\t// grid line settings\n\t\tgridLines: {\n\t\t\tdisplay: true,\n\t\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\t\tlineWidth: 1,\n\t\t\tdrawBorder: true,\n\t\t\tdrawOnChartArea: true,\n\t\t\tdrawTicks: true,\n\t\t\ttickMarkLength: 10,\n\t\t\tzeroLineWidth: 1,\n\t\t\tzeroLineColor: 'rgba(0,0,0,0.25)',\n\t\t\toffsetGridLines: false,\n\t\t\tborderDash: [],\n\t\t\tborderDashOffset: 0.0\n\t\t},\n\n\t\t// scale label\n\t\tscaleLabel: {\n\t\t\t// actual label\n\t\t\tlabelString: '',\n\n\t\t\t// display property\n\t\t\tdisplay: false\n\t\t},\n\n\t\t// label settings\n\t\tticks: {\n\t\t\tbeginAtZero: false,\n\t\t\tminRotation: 0,\n\t\t\tmaxRotation: 50,\n\t\t\tmirror: false,\n\t\t\tpadding: 10,\n\t\t\treverse: false,\n\t\t\tdisplay: true,\n\t\t\tautoSkip: true,\n\t\t\tautoSkipPadding: 0,\n\t\t\tlabelOffset: 0,\n\t\t\t// We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n\t\t\tcallback: function(value) {\n\t\t\t\treturn helpers.isArray(value) ? value : '' + value;\n\t\t\t}\n\t\t}\n\t};\n\n\tChart.Scale = Chart.Element.extend({\n\n\t\t// These methods are ordered by lifecyle. Utilities then follow.\n\t\t// Any function defined here is inherited by all scale types.\n\t\t// Any function can be extended by the scale type\n\n\t\tbeforeUpdate: function() {\n\t\t\thelpers.callCallback(this.options.beforeUpdate, [this]);\n\t\t},\n\t\tupdate: function(maxWidth, maxHeight, margins) {\n\t\t\tvar me = this;\n\n\t\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\t\tme.beforeUpdate();\n\n\t\t\t// Absorb the master measurements\n\t\t\tme.maxWidth = maxWidth;\n\t\t\tme.maxHeight = maxHeight;\n\t\t\tme.margins = helpers.extend({\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: 0,\n\t\t\t\tbottom: 0\n\t\t\t}, margins);\n\n\t\t\t// Dimensions\n\t\t\tme.beforeSetDimensions();\n\t\t\tme.setDimensions();\n\t\t\tme.afterSetDimensions();\n\n\t\t\t// Data min/max\n\t\t\tme.beforeDataLimits();\n\t\t\tme.determineDataLimits();\n\t\t\tme.afterDataLimits();\n\n\t\t\t// Ticks\n\t\t\tme.beforeBuildTicks();\n\t\t\tme.buildTicks();\n\t\t\tme.afterBuildTicks();\n\n\t\t\tme.beforeTickToLabelConversion();\n\t\t\tme.convertTicksToLabels();\n\t\t\tme.afterTickToLabelConversion();\n\n\t\t\t// Tick Rotation\n\t\t\tme.beforeCalculateTickRotation();\n\t\t\tme.calculateTickRotation();\n\t\t\tme.afterCalculateTickRotation();\n\t\t\t// Fit\n\t\t\tme.beforeFit();\n\t\t\tme.fit();\n\t\t\tme.afterFit();\n\t\t\t//\n\t\t\tme.afterUpdate();\n\n\t\t\treturn me.minSize;\n\n\t\t},\n\t\tafterUpdate: function() {\n\t\t\thelpers.callCallback(this.options.afterUpdate, [this]);\n\t\t},\n\n\t\t//\n\n\t\tbeforeSetDimensions: function() {\n\t\t\thelpers.callCallback(this.options.beforeSetDimensions, [this]);\n\t\t},\n\t\tsetDimensions: function() {\n\t\t\tvar me = this;\n\t\t\t// Set the unconstrained dimension before label rotation\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\t// Reset position before calculating rotation\n\t\t\t\tme.width = me.maxWidth;\n\t\t\t\tme.left = 0;\n\t\t\t\tme.right = me.width;\n\t\t\t} else {\n\t\t\t\tme.height = me.maxHeight;\n\n\t\t\t\t// Reset position before calculating rotation\n\t\t\t\tme.top = 0;\n\t\t\t\tme.bottom = me.height;\n\t\t\t}\n\n\t\t\t// Reset padding\n\t\t\tme.paddingLeft = 0;\n\t\t\tme.paddingTop = 0;\n\t\t\tme.paddingRight = 0;\n\t\t\tme.paddingBottom = 0;\n\t\t},\n\t\tafterSetDimensions: function() {\n\t\t\thelpers.callCallback(this.options.afterSetDimensions, [this]);\n\t\t},\n\n\t\t// Data limits\n\t\tbeforeDataLimits: function() {\n\t\t\thelpers.callCallback(this.options.beforeDataLimits, [this]);\n\t\t},\n\t\tdetermineDataLimits: helpers.noop,\n\t\tafterDataLimits: function() {\n\t\t\thelpers.callCallback(this.options.afterDataLimits, [this]);\n\t\t},\n\n\t\t//\n\t\tbeforeBuildTicks: function() {\n\t\t\thelpers.callCallback(this.options.beforeBuildTicks, [this]);\n\t\t},\n\t\tbuildTicks: helpers.noop,\n\t\tafterBuildTicks: function() {\n\t\t\thelpers.callCallback(this.options.afterBuildTicks, [this]);\n\t\t},\n\n\t\tbeforeTickToLabelConversion: function() {\n\t\t\thelpers.callCallback(this.options.beforeTickToLabelConversion, [this]);\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\t\t\t// Convert ticks to strings\n\t\t\tme.ticks = me.ticks.map(function(numericalTick, index, ticks) {\n\t\t\t\tif (me.options.ticks.userCallback) {\n\t\t\t\t\treturn me.options.ticks.userCallback(numericalTick, index, ticks);\n\t\t\t\t}\n\t\t\t\treturn me.options.ticks.callback(numericalTick, index, ticks);\n\t\t\t},\n\t\t\tme);\n\t\t},\n\t\tafterTickToLabelConversion: function() {\n\t\t\thelpers.callCallback(this.options.afterTickToLabelConversion, [this]);\n\t\t},\n\n\t\t//\n\n\t\tbeforeCalculateTickRotation: function() {\n\t\t\thelpers.callCallback(this.options.beforeCalculateTickRotation, [this]);\n\t\t},\n\t\tcalculateTickRotation: function() {\n\t\t\tvar me = this;\n\t\t\tvar context = me.ctx;\n\t\t\tvar globalDefaults = Chart.defaults.global;\n\t\t\tvar optionTicks = me.options.ticks;\n\n\t\t\t// Get the width of each grid by calculating the difference\n\t\t\t// between x offsets between 0 and 1.\n\t\t\tvar tickFontSize = helpers.getValueOrDefault(optionTicks.fontSize, globalDefaults.defaultFontSize);\n\t\t\tvar tickFontStyle = helpers.getValueOrDefault(optionTicks.fontStyle, globalDefaults.defaultFontStyle);\n\t\t\tvar tickFontFamily = helpers.getValueOrDefault(optionTicks.fontFamily, globalDefaults.defaultFontFamily);\n\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\n\t\t\tcontext.font = tickLabelFont;\n\n\t\t\tvar firstWidth = context.measureText(me.ticks[0]).width;\n\t\t\tvar lastWidth = context.measureText(me.ticks[me.ticks.length - 1]).width;\n\t\t\tvar firstRotated;\n\n\t\t\tme.labelRotation = optionTicks.minRotation || 0;\n\t\t\tme.paddingRight = 0;\n\t\t\tme.paddingLeft = 0;\n\n\t\t\tif (me.options.display) {\n\t\t\t\tif (me.isHorizontal()) {\n\t\t\t\t\tme.paddingRight = lastWidth / 2 + 3;\n\t\t\t\t\tme.paddingLeft = firstWidth / 2 + 3;\n\n\t\t\t\t\tif (!me.longestTextCache) {\n\t\t\t\t\t\tme.longestTextCache = {};\n\t\t\t\t\t}\n\t\t\t\t\tvar originalLabelWidth = helpers.longestText(context, tickLabelFont, me.ticks, me.longestTextCache);\n\t\t\t\t\tvar labelWidth = originalLabelWidth;\n\t\t\t\t\tvar cosRotation;\n\t\t\t\t\tvar sinRotation;\n\n\t\t\t\t\t// Allow 3 pixels x2 padding either side for label readability\n\t\t\t\t\t// only the index matters for a dataset scale, but we want a consistent interface between scales\n\t\t\t\t\tvar tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6;\n\n\t\t\t\t\t// Max label rotation can be set or default to 90 - also act as a loop counter\n\t\t\t\t\twhile (labelWidth > tickWidth && me.labelRotation < optionTicks.maxRotation) {\n\t\t\t\t\t\tcosRotation = Math.cos(helpers.toRadians(me.labelRotation));\n\t\t\t\t\t\tsinRotation = Math.sin(helpers.toRadians(me.labelRotation));\n\n\t\t\t\t\t\tfirstRotated = cosRotation * firstWidth;\n\n\t\t\t\t\t\t// We're right aligning the text now.\n\t\t\t\t\t\tif (firstRotated + tickFontSize / 2 > me.yLabelWidth) {\n\t\t\t\t\t\t\tme.paddingLeft = firstRotated + tickFontSize / 2;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tme.paddingRight = tickFontSize / 2;\n\n\t\t\t\t\t\tif (sinRotation * originalLabelWidth > me.maxHeight) {\n\t\t\t\t\t\t\t// go back one step\n\t\t\t\t\t\t\tme.labelRotation--;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tme.labelRotation++;\n\t\t\t\t\t\tlabelWidth = cosRotation * originalLabelWidth;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (me.margins) {\n\t\t\t\tme.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n\t\t\t\tme.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n\t\t\t}\n\t\t},\n\t\tafterCalculateTickRotation: function() {\n\t\t\thelpers.callCallback(this.options.afterCalculateTickRotation, [this]);\n\t\t},\n\n\t\t//\n\n\t\tbeforeFit: function() {\n\t\t\thelpers.callCallback(this.options.beforeFit, [this]);\n\t\t},\n\t\tfit: function() {\n\t\t\tvar me = this;\n\t\t\t// Reset\n\t\t\tvar minSize = me.minSize = {\n\t\t\t\twidth: 0,\n\t\t\t\theight: 0\n\t\t\t};\n\n\t\t\tvar opts = me.options;\n\t\t\tvar globalDefaults = Chart.defaults.global;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar scaleLabelOpts = opts.scaleLabel;\n\t\t\tvar gridLineOpts = opts.gridLines;\n\t\t\tvar display = opts.display;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tvar tickFontSize = helpers.getValueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\tvar tickFontStyle = helpers.getValueOrDefault(tickOpts.fontStyle, globalDefaults.defaultFontStyle);\n\t\t\tvar tickFontFamily = helpers.getValueOrDefault(tickOpts.fontFamily, globalDefaults.defaultFontFamily);\n\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\n\n\t\t\tvar scaleLabelFontSize = helpers.getValueOrDefault(scaleLabelOpts.fontSize, globalDefaults.defaultFontSize);\n\n\t\t\tvar tickMarkLength = opts.gridLines.tickMarkLength;\n\n\t\t\t// Width\n\t\t\tif (isHorizontal) {\n\t\t\t\t// subtract the margins to line up with the chartArea if we are a full width scale\n\t\t\t\tminSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n\t\t\t} else {\n\t\t\t\tminSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t\t}\n\n\t\t\t// height\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t\t} else {\n\t\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t\t}\n\n\t\t\t// Are we showing a title for the scale?\n\t\t\tif (scaleLabelOpts.display && display) {\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tminSize.height += (scaleLabelFontSize * 1.5);\n\t\t\t\t} else {\n\t\t\t\t\tminSize.width += (scaleLabelFontSize * 1.5);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (tickOpts.display && display) {\n\t\t\t\t// Don't bother fitting the ticks if we are not showing them\n\t\t\t\tif (!me.longestTextCache) {\n\t\t\t\t\tme.longestTextCache = {};\n\t\t\t\t}\n\n\t\t\t\tvar largestTextWidth = helpers.longestText(me.ctx, tickLabelFont, me.ticks, me.longestTextCache);\n\t\t\t\tvar tallestLabelHeightInLines = helpers.numberOfLabelLines(me.ticks);\n\t\t\t\tvar lineSpace = tickFontSize * 0.5;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\t// A horizontal axis is more constrained by the height.\n\t\t\t\t\tme.longestLabelWidth = largestTextWidth;\n\n\t\t\t\t\t// TODO - improve this calculation\n\t\t\t\t\tvar labelHeight = (Math.sin(helpers.toRadians(me.labelRotation)) * me.longestLabelWidth) + (tickFontSize * tallestLabelHeightInLines) + (lineSpace * tallestLabelHeightInLines);\n\n\t\t\t\t\tminSize.height = Math.min(me.maxHeight, minSize.height + labelHeight);\n\t\t\t\t\tme.ctx.font = tickLabelFont;\n\n\t\t\t\t\tvar firstLabelWidth = me.ctx.measureText(me.ticks[0]).width;\n\t\t\t\t\tvar lastLabelWidth = me.ctx.measureText(me.ticks[me.ticks.length - 1]).width;\n\n\t\t\t\t\t// Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned which means that the right padding is dominated\n\t\t\t\t\t// by the font height\n\t\t\t\t\tvar cosRotation = Math.cos(helpers.toRadians(me.labelRotation));\n\t\t\t\t\tvar sinRotation = Math.sin(helpers.toRadians(me.labelRotation));\n\t\t\t\t\tme.paddingLeft = me.labelRotation !== 0 ? (cosRotation * firstLabelWidth) + 3 : firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges\n\t\t\t\t\tme.paddingRight = me.labelRotation !== 0 ? (sinRotation * (tickFontSize / 2)) + 3 : lastLabelWidth / 2 + 3; // when rotated\n\t\t\t\t} else {\n\t\t\t\t\t// A vertical axis is more constrained by the width. Labels are the dominant factor here, so get that length first\n\t\t\t\t\tvar maxLabelWidth = me.maxWidth - minSize.width;\n\n\t\t\t\t\t// Account for padding\n\t\t\t\t\tvar mirror = tickOpts.mirror;\n\t\t\t\t\tif (!mirror) {\n\t\t\t\t\t\tlargestTextWidth += me.options.ticks.padding;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// If mirrored text is on the inside so don't expand\n\t\t\t\t\t\tlargestTextWidth = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (largestTextWidth < maxLabelWidth) {\n\t\t\t\t\t\t// We don't need all the room\n\t\t\t\t\t\tminSize.width += largestTextWidth;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Expand to max size\n\t\t\t\t\t\tminSize.width = me.maxWidth;\n\t\t\t\t\t}\n\n\t\t\t\t\tme.paddingTop = tickFontSize / 2;\n\t\t\t\t\tme.paddingBottom = tickFontSize / 2;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (me.margins) {\n\t\t\t\tme.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n\t\t\t\tme.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n\t\t\t\tme.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n\t\t\t\tme.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n\t\t\t}\n\n\t\t\tme.width = minSize.width;\n\t\t\tme.height = minSize.height;\n\n\t\t},\n\t\tafterFit: function() {\n\t\t\thelpers.callCallback(this.options.afterFit, [this]);\n\t\t},\n\n\t\t// Shared Methods\n\t\tisHorizontal: function() {\n\t\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t\t},\n\t\tisFullWidth: function() {\n\t\t\treturn (this.options.fullWidth);\n\t\t},\n\n\t\t// Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n\t\tgetRightValue: function(rawValue) {\n\t\t\t// Null and undefined values first\n\t\t\tif (rawValue === null || typeof(rawValue) === 'undefined') {\n\t\t\t\treturn NaN;\n\t\t\t}\n\t\t\t// isNaN(object) returns true, so make sure NaN is checking for a number\n\t\t\tif (typeof(rawValue) === 'number' && isNaN(rawValue)) {\n\t\t\t\treturn NaN;\n\t\t\t}\n\t\t\t// If it is in fact an object, dive in one more level\n\t\t\tif (typeof(rawValue) === 'object') {\n\t\t\t\tif ((rawValue instanceof Date) || (rawValue.isValid)) {\n\t\t\t\t\treturn rawValue;\n\t\t\t\t}\n\t\t\t\treturn this.getRightValue(this.isHorizontal() ? rawValue.x : rawValue.y);\n\t\t\t}\n\n\t\t\t// Value is good, return it\n\t\t\treturn rawValue;\n\t\t},\n\n\t\t// Used to get the value to display in the tooltip for the data at the given index\n\t\t// function getLabelForIndex(index, datasetIndex)\n\t\tgetLabelForIndex: helpers.noop,\n\n\t\t// Used to get data value locations.  Value can either be an index or a numerical value\n\t\tgetPixelForValue: helpers.noop,\n\n\t\t// Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t\tgetValueForPixel: helpers.noop,\n\n\t\t// Used for tick location, should\n\t\tgetPixelForTick: function(index, includeOffset) {\n\t\t\tvar me = this;\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\t\tvar tickWidth = innerWidth / Math.max((me.ticks.length - ((me.options.gridLines.offsetGridLines) ? 0 : 1)), 1);\n\t\t\t\tvar pixel = (tickWidth * index) + me.paddingLeft;\n\n\t\t\t\tif (includeOffset) {\n\t\t\t\t\tpixel += tickWidth / 2;\n\t\t\t\t}\n\n\t\t\t\tvar finalVal = me.left + Math.round(pixel);\n\t\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\t\treturn finalVal;\n\t\t\t}\n\t\t\tvar innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n\t\t\treturn me.top + (index * (innerHeight / (me.ticks.length - 1)));\n\t\t},\n\n\t\t// Utility for getting the pixel location of a percentage of scale\n\t\tgetPixelForDecimal: function(decimal /* , includeOffset*/) {\n\t\t\tvar me = this;\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\t\tvar valueOffset = (innerWidth * decimal) + me.paddingLeft;\n\n\t\t\t\tvar finalVal = me.left + Math.round(valueOffset);\n\t\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\t\treturn finalVal;\n\t\t\t}\n\t\t\treturn me.top + (decimal * me.height);\n\t\t},\n\n\t\tgetBasePixel: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\n\t\t\treturn me.getPixelForValue(\n\t\t\t\tme.beginAtZero? 0:\n\t\t\t\tmin < 0 && max < 0? max :\n\t\t\t\tmin > 0 && max > 0? min :\n\t\t\t\t0);\n\t\t},\n\n\t\t// Actualy draw the scale on the canvas\n\t\t// @param {rectangle} chartArea : the area of the chart to draw full grid lines on\n\t\tdraw: function(chartArea) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tif (!options.display) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar context = me.ctx;\n\t\t\tvar globalDefaults = Chart.defaults.global;\n\t\t\tvar optionTicks = options.ticks;\n\t\t\tvar gridLines = options.gridLines;\n\t\t\tvar scaleLabel = options.scaleLabel;\n\n\t\t\tvar isRotated = me.labelRotation !== 0;\n\t\t\tvar skipRatio;\n\t\t\tvar useAutoskipper = optionTicks.autoSkip;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\t// figure out the maximum number of gridlines to show\n\t\t\tvar maxTicks;\n\t\t\tif (optionTicks.maxTicksLimit) {\n\t\t\t\tmaxTicks = optionTicks.maxTicksLimit;\n\t\t\t}\n\n\t\t\tvar tickFontColor = helpers.getValueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar tickFontSize = helpers.getValueOrDefault(optionTicks.fontSize, globalDefaults.defaultFontSize);\n\t\t\tvar tickFontStyle = helpers.getValueOrDefault(optionTicks.fontStyle, globalDefaults.defaultFontStyle);\n\t\t\tvar tickFontFamily = helpers.getValueOrDefault(optionTicks.fontFamily, globalDefaults.defaultFontFamily);\n\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\n\t\t\tvar tl = gridLines.tickMarkLength;\n\t\t\tvar borderDash = helpers.getValueOrDefault(gridLines.borderDash, globalDefaults.borderDash);\n\t\t\tvar borderDashOffset = helpers.getValueOrDefault(gridLines.borderDashOffset, globalDefaults.borderDashOffset);\n\n\t\t\tvar scaleLabelFontColor = helpers.getValueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar scaleLabelFontSize = helpers.getValueOrDefault(scaleLabel.fontSize, globalDefaults.defaultFontSize);\n\t\t\tvar scaleLabelFontStyle = helpers.getValueOrDefault(scaleLabel.fontStyle, globalDefaults.defaultFontStyle);\n\t\t\tvar scaleLabelFontFamily = helpers.getValueOrDefault(scaleLabel.fontFamily, globalDefaults.defaultFontFamily);\n\t\t\tvar scaleLabelFont = helpers.fontString(scaleLabelFontSize, scaleLabelFontStyle, scaleLabelFontFamily);\n\n\t\t\tvar labelRotationRadians = helpers.toRadians(me.labelRotation);\n\t\t\tvar cosRotation = Math.cos(labelRotationRadians);\n\t\t\tvar longestRotatedLabel = me.longestLabelWidth * cosRotation;\n\n\t\t\t// Make sure we draw text in the correct color and font\n\t\t\tcontext.fillStyle = tickFontColor;\n\n\t\t\tvar itemsToDraw = [];\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tskipRatio = false;\n\n\t\t\t\t// Only calculate the skip ratio with the half width of longestRotateLabel if we got an actual rotation\n\t\t\t\t// See #2584\n\t\t\t\tif (isRotated) {\n\t\t\t\t\tlongestRotatedLabel /= 2;\n\t\t\t\t}\n\n\t\t\t\tif ((longestRotatedLabel + optionTicks.autoSkipPadding) * me.ticks.length > (me.width - (me.paddingLeft + me.paddingRight))) {\n\t\t\t\t\tskipRatio = 1 + Math.floor(((longestRotatedLabel + optionTicks.autoSkipPadding) * me.ticks.length) / (me.width - (me.paddingLeft + me.paddingRight)));\n\t\t\t\t}\n\n\t\t\t\t// if they defined a max number of optionTicks,\n\t\t\t\t// increase skipRatio until that number is met\n\t\t\t\tif (maxTicks && me.ticks.length > maxTicks) {\n\t\t\t\t\twhile (!skipRatio || me.ticks.length / (skipRatio || 1) > maxTicks) {\n\t\t\t\t\t\tif (!skipRatio) {\n\t\t\t\t\t\t\tskipRatio = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tskipRatio += 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!useAutoskipper) {\n\t\t\t\t\tskipRatio = false;\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\tvar xTickStart = options.position === 'right' ? me.left : me.right - tl;\n\t\t\tvar xTickEnd = options.position === 'right' ? me.left + tl : me.right;\n\t\t\tvar yTickStart = options.position === 'bottom' ? me.top : me.bottom - tl;\n\t\t\tvar yTickEnd = options.position === 'bottom' ? me.top + tl : me.bottom;\n\n\t\t\thelpers.each(me.ticks, function(label, index) {\n\t\t\t\t// If the callback returned a null or undefined value, do not draw this line\n\t\t\t\tif (label === undefined || label === null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar isLastTick = me.ticks.length === index + 1;\n\n\t\t\t\t// Since we always show the last tick,we need may need to hide the last shown one before\n\t\t\t\tvar shouldSkip = (skipRatio > 1 && index % skipRatio > 0) || (index % skipRatio === 0 && index + skipRatio >= me.ticks.length);\n\t\t\t\tif (shouldSkip && !isLastTick || (label === undefined || label === null)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar lineWidth, lineColor;\n\t\t\t\tif (index === (typeof me.zeroLineIndex !== 'undefined' ? me.zeroLineIndex : 0)) {\n\t\t\t\t\t// Draw the first index specially\n\t\t\t\t\tlineWidth = gridLines.zeroLineWidth;\n\t\t\t\t\tlineColor = gridLines.zeroLineColor;\n\t\t\t\t} else {\n\t\t\t\t\tlineWidth = helpers.getValueAtIndexOrDefault(gridLines.lineWidth, index);\n\t\t\t\t\tlineColor = helpers.getValueAtIndexOrDefault(gridLines.color, index);\n\t\t\t\t}\n\n\t\t\t\t// Common properties\n\t\t\t\tvar tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY;\n\t\t\t\tvar textAlign = 'middle';\n\t\t\t\tvar textBaseline = 'middle';\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tif (!isRotated) {\n\t\t\t\t\t\ttextBaseline = options.position === 'top' ? 'bottom' : 'top';\n\t\t\t\t\t}\n\n\t\t\t\t\ttextAlign = isRotated ? 'right' : 'center';\n\n\t\t\t\t\tvar xLineValue = me.getPixelForTick(index) + helpers.aliasPixel(lineWidth); // xvalues for grid lines\n\t\t\t\t\tlabelX = me.getPixelForTick(index, gridLines.offsetGridLines) + optionTicks.labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\t\t\t\t\tlabelY = (isRotated) ? me.top + 12 : options.position === 'top' ? me.bottom - tl : me.top + tl;\n\n\t\t\t\t\ttx1 = tx2 = x1 = x2 = xLineValue;\n\t\t\t\t\tty1 = yTickStart;\n\t\t\t\t\tty2 = yTickEnd;\n\t\t\t\t\ty1 = chartArea.top;\n\t\t\t\t\ty2 = chartArea.bottom;\n\t\t\t\t} else {\n\t\t\t\t\tif (options.position === 'left') {\n\t\t\t\t\t\tif (optionTicks.mirror) {\n\t\t\t\t\t\t\tlabelX = me.right + optionTicks.padding;\n\t\t\t\t\t\t\ttextAlign = 'left';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlabelX = me.right - optionTicks.padding;\n\t\t\t\t\t\t\ttextAlign = 'right';\n\t\t\t\t\t\t}\n\t\t\t\t\t// right side\n\t\t\t\t\t} else if (optionTicks.mirror) {\n\t\t\t\t\t\tlabelX = me.left - optionTicks.padding;\n\t\t\t\t\t\ttextAlign = 'right';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlabelX = me.left + optionTicks.padding;\n\t\t\t\t\t\ttextAlign = 'left';\n\t\t\t\t\t}\n\n\t\t\t\t\tvar yLineValue = me.getPixelForTick(index); // xvalues for grid lines\n\t\t\t\t\tyLineValue += helpers.aliasPixel(lineWidth);\n\t\t\t\t\tlabelY = me.getPixelForTick(index, gridLines.offsetGridLines);\n\n\t\t\t\t\ttx1 = xTickStart;\n\t\t\t\t\ttx2 = xTickEnd;\n\t\t\t\t\tx1 = chartArea.left;\n\t\t\t\t\tx2 = chartArea.right;\n\t\t\t\t\tty1 = ty2 = y1 = y2 = yLineValue;\n\t\t\t\t}\n\n\t\t\t\titemsToDraw.push({\n\t\t\t\t\ttx1: tx1,\n\t\t\t\t\tty1: ty1,\n\t\t\t\t\ttx2: tx2,\n\t\t\t\t\tty2: ty2,\n\t\t\t\t\tx1: x1,\n\t\t\t\t\ty1: y1,\n\t\t\t\t\tx2: x2,\n\t\t\t\t\ty2: y2,\n\t\t\t\t\tlabelX: labelX,\n\t\t\t\t\tlabelY: labelY,\n\t\t\t\t\tglWidth: lineWidth,\n\t\t\t\t\tglColor: lineColor,\n\t\t\t\t\tglBorderDash: borderDash,\n\t\t\t\t\tglBorderDashOffset: borderDashOffset,\n\t\t\t\t\trotation: -1 * labelRotationRadians,\n\t\t\t\t\tlabel: label,\n\t\t\t\t\ttextBaseline: textBaseline,\n\t\t\t\t\ttextAlign: textAlign\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t// Draw all of the tick labels, tick marks, and grid lines at the correct places\n\t\t\thelpers.each(itemsToDraw, function(itemToDraw) {\n\t\t\t\tif (gridLines.display) {\n\t\t\t\t\tcontext.save();\n\t\t\t\t\tcontext.lineWidth = itemToDraw.glWidth;\n\t\t\t\t\tcontext.strokeStyle = itemToDraw.glColor;\n\t\t\t\t\tif (context.setLineDash) {\n\t\t\t\t\t\tcontext.setLineDash(itemToDraw.glBorderDash);\n\t\t\t\t\t\tcontext.lineDashOffset = itemToDraw.glBorderDashOffset;\n\t\t\t\t\t}\n\n\t\t\t\t\tcontext.beginPath();\n\n\t\t\t\t\tif (gridLines.drawTicks) {\n\t\t\t\t\t\tcontext.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n\t\t\t\t\t\tcontext.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (gridLines.drawOnChartArea) {\n\t\t\t\t\t\tcontext.moveTo(itemToDraw.x1, itemToDraw.y1);\n\t\t\t\t\t\tcontext.lineTo(itemToDraw.x2, itemToDraw.y2);\n\t\t\t\t\t}\n\n\t\t\t\t\tcontext.stroke();\n\t\t\t\t\tcontext.restore();\n\t\t\t\t}\n\n\t\t\t\tif (optionTicks.display) {\n\t\t\t\t\tcontext.save();\n\t\t\t\t\tcontext.translate(itemToDraw.labelX, itemToDraw.labelY);\n\t\t\t\t\tcontext.rotate(itemToDraw.rotation);\n\t\t\t\t\tcontext.font = tickLabelFont;\n\t\t\t\t\tcontext.textBaseline = itemToDraw.textBaseline;\n\t\t\t\t\tcontext.textAlign = itemToDraw.textAlign;\n\n\t\t\t\t\tvar label = itemToDraw.label;\n\t\t\t\t\tif (helpers.isArray(label)) {\n\t\t\t\t\t\tfor (var i = 0, y = -(label.length - 1)*tickFontSize*0.75; i < label.length; ++i) {\n\t\t\t\t\t\t\t// We just make sure the multiline element is a string here..\n\t\t\t\t\t\t\tcontext.fillText('' + label[i], 0, y);\n\t\t\t\t\t\t\t// apply same lineSpacing as calculated @ L#320\n\t\t\t\t\t\t\ty += (tickFontSize * 1.5);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontext.fillText(label, 0, 0);\n\t\t\t\t\t}\n\t\t\t\t\tcontext.restore();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (scaleLabel.display) {\n\t\t\t\t// Draw the scale label\n\t\t\t\tvar scaleLabelX;\n\t\t\t\tvar scaleLabelY;\n\t\t\t\tvar rotation = 0;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tscaleLabelX = me.left + ((me.right - me.left) / 2); // midpoint of the width\n\t\t\t\t\tscaleLabelY = options.position === 'bottom' ? me.bottom - (scaleLabelFontSize / 2) : me.top + (scaleLabelFontSize / 2);\n\t\t\t\t} else {\n\t\t\t\t\tvar isLeft = options.position === 'left';\n\t\t\t\t\tscaleLabelX = isLeft ? me.left + (scaleLabelFontSize / 2) : me.right - (scaleLabelFontSize / 2);\n\t\t\t\t\tscaleLabelY = me.top + ((me.bottom - me.top) / 2);\n\t\t\t\t\trotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n\t\t\t\t}\n\n\t\t\t\tcontext.save();\n\t\t\t\tcontext.translate(scaleLabelX, scaleLabelY);\n\t\t\t\tcontext.rotate(rotation);\n\t\t\t\tcontext.textAlign = 'center';\n\t\t\t\tcontext.textBaseline = 'middle';\n\t\t\t\tcontext.fillStyle = scaleLabelFontColor; // render in correct colour\n\t\t\t\tcontext.font = scaleLabelFont;\n\t\t\t\tcontext.fillText(scaleLabel.labelString, 0, 0);\n\t\t\t\tcontext.restore();\n\t\t\t}\n\n\t\t\tif (gridLines.drawBorder) {\n\t\t\t\t// Draw the line at the edge of the axis\n\t\t\t\tcontext.lineWidth = helpers.getValueAtIndexOrDefault(gridLines.lineWidth, 0);\n\t\t\t\tcontext.strokeStyle = helpers.getValueAtIndexOrDefault(gridLines.color, 0);\n\t\t\t\tvar x1 = me.left,\n\t\t\t\t\tx2 = me.right,\n\t\t\t\t\ty1 = me.top,\n\t\t\t\t\ty2 = me.bottom;\n\n\t\t\t\tvar aliasPixel = helpers.aliasPixel(context.lineWidth);\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\ty1 = y2 = options.position === 'top' ? me.bottom : me.top;\n\t\t\t\t\ty1 += aliasPixel;\n\t\t\t\t\ty2 += aliasPixel;\n\t\t\t\t} else {\n\t\t\t\t\tx1 = x2 = options.position === 'left' ? me.right : me.left;\n\t\t\t\t\tx1 += aliasPixel;\n\t\t\t\t\tx2 += aliasPixel;\n\t\t\t\t}\n\n\t\t\t\tcontext.beginPath();\n\t\t\t\tcontext.moveTo(x1, y1);\n\t\t\t\tcontext.lineTo(x2, y2);\n\t\t\t\tcontext.stroke();\n\t\t\t}\n\t\t}\n\t});\n};\n\n},{}],32:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\tChart.scaleService = {\n\t\t// Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n\t\t// use the new chart options to grab the correct scale\n\t\tconstructors: {},\n\t\t// Use a registration function so that we can move to an ES6 map when we no longer need to support\n\t\t// old browsers\n\n\t\t// Scale config defaults\n\t\tdefaults: {},\n\t\tregisterScaleType: function(type, scaleConstructor, defaults) {\n\t\t\tthis.constructors[type] = scaleConstructor;\n\t\t\tthis.defaults[type] = helpers.clone(defaults);\n\t\t},\n\t\tgetScaleConstructor: function(type) {\n\t\t\treturn this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n\t\t},\n\t\tgetScaleDefaults: function(type) {\n\t\t\t// Return the scale defaults merged with the global settings so that we always use the latest ones\n\t\t\treturn this.defaults.hasOwnProperty(type) ? helpers.scaleMerge(Chart.defaults.scale, this.defaults[type]) : {};\n\t\t},\n\t\tupdateScaleDefaults: function(type, additions) {\n\t\t\tvar defaults = this.defaults;\n\t\t\tif (defaults.hasOwnProperty(type)) {\n\t\t\t\tdefaults[type] = helpers.extend(defaults[type], additions);\n\t\t\t}\n\t\t},\n\t\taddScalesToLayout: function(chartInstance) {\n\t\t\t// Adds each scale to the chart.boxes array to be sized accordingly\n\t\t\thelpers.each(chartInstance.scales, function(scale) {\n\t\t\t\tChart.layoutService.addBox(chartInstance, scale);\n\t\t\t});\n\t\t}\n\t};\n};\n\n},{}],33:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\tChart.defaults.global.title = {\n\t\tdisplay: false,\n\t\tposition: 'top',\n\t\tfullWidth: true, // marks that this box should take the full width of the canvas (pushing down other boxes)\n\n\t\tfontStyle: 'bold',\n\t\tpadding: 10,\n\n\t\t// actual title\n\t\ttext: ''\n\t};\n\n\tvar noop = helpers.noop;\n\tChart.Title = Chart.Element.extend({\n\n\t\tinitialize: function(config) {\n\t\t\tvar me = this;\n\t\t\thelpers.extend(me, config);\n\t\t\tme.options = helpers.configMerge(Chart.defaults.global.title, config.options);\n\n\t\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\t\tme.legendHitBoxes = [];\n\t\t},\n\n\t\t// These methods are ordered by lifecyle. Utilities then follow.\n\n\t\tbeforeUpdate: function() {\n\t\t\tvar chartOpts = this.chart.options;\n\t\t\tif (chartOpts && chartOpts.title) {\n\t\t\t\tthis.options = helpers.configMerge(Chart.defaults.global.title, chartOpts.title);\n\t\t\t}\n\t\t},\n\t\tupdate: function(maxWidth, maxHeight, margins) {\n\t\t\tvar me = this;\n\n\t\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\t\tme.beforeUpdate();\n\n\t\t\t// Absorb the master measurements\n\t\t\tme.maxWidth = maxWidth;\n\t\t\tme.maxHeight = maxHeight;\n\t\t\tme.margins = margins;\n\n\t\t\t// Dimensions\n\t\t\tme.beforeSetDimensions();\n\t\t\tme.setDimensions();\n\t\t\tme.afterSetDimensions();\n\t\t\t// Labels\n\t\t\tme.beforeBuildLabels();\n\t\t\tme.buildLabels();\n\t\t\tme.afterBuildLabels();\n\n\t\t\t// Fit\n\t\t\tme.beforeFit();\n\t\t\tme.fit();\n\t\t\tme.afterFit();\n\t\t\t//\n\t\t\tme.afterUpdate();\n\n\t\t\treturn me.minSize;\n\n\t\t},\n\t\tafterUpdate: noop,\n\n\t\t//\n\n\t\tbeforeSetDimensions: noop,\n\t\tsetDimensions: function() {\n\t\t\tvar me = this;\n\t\t\t// Set the unconstrained dimension before label rotation\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\t// Reset position before calculating rotation\n\t\t\t\tme.width = me.maxWidth;\n\t\t\t\tme.left = 0;\n\t\t\t\tme.right = me.width;\n\t\t\t} else {\n\t\t\t\tme.height = me.maxHeight;\n\n\t\t\t\t// Reset position before calculating rotation\n\t\t\t\tme.top = 0;\n\t\t\t\tme.bottom = me.height;\n\t\t\t}\n\n\t\t\t// Reset padding\n\t\t\tme.paddingLeft = 0;\n\t\t\tme.paddingTop = 0;\n\t\t\tme.paddingRight = 0;\n\t\t\tme.paddingBottom = 0;\n\n\t\t\t// Reset minSize\n\t\t\tme.minSize = {\n\t\t\t\twidth: 0,\n\t\t\t\theight: 0\n\t\t\t};\n\t\t},\n\t\tafterSetDimensions: noop,\n\n\t\t//\n\n\t\tbeforeBuildLabels: noop,\n\t\tbuildLabels: noop,\n\t\tafterBuildLabels: noop,\n\n\t\t//\n\n\t\tbeforeFit: noop,\n\t\tfit: function() {\n\t\t\tvar me = this,\n\t\t\t\tvalueOrDefault = helpers.getValueOrDefault,\n\t\t\t\topts = me.options,\n\t\t\t\tglobalDefaults = Chart.defaults.global,\n\t\t\t\tdisplay = opts.display,\n\t\t\t\tfontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize),\n\t\t\t\tminSize = me.minSize;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\t\tminSize.height = display ? fontSize + (opts.padding * 2) : 0;\n\t\t\t} else {\n\t\t\t\tminSize.width = display ? fontSize + (opts.padding * 2) : 0;\n\t\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t\t}\n\n\t\t\tme.width = minSize.width;\n\t\t\tme.height = minSize.height;\n\n\t\t},\n\t\tafterFit: noop,\n\n\t\t// Shared Methods\n\t\tisHorizontal: function() {\n\t\t\tvar pos = this.options.position;\n\t\t\treturn pos === 'top' || pos === 'bottom';\n\t\t},\n\n\t\t// Actualy draw the title block on the canvas\n\t\tdraw: function() {\n\t\t\tvar me = this,\n\t\t\t\tctx = me.ctx,\n\t\t\t\tvalueOrDefault = helpers.getValueOrDefault,\n\t\t\t\topts = me.options,\n\t\t\t\tglobalDefaults = Chart.defaults.global;\n\n\t\t\tif (opts.display) {\n\t\t\t\tvar fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize),\n\t\t\t\t\tfontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle),\n\t\t\t\t\tfontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily),\n\t\t\t\t\ttitleFont = helpers.fontString(fontSize, fontStyle, fontFamily),\n\t\t\t\t\trotation = 0,\n\t\t\t\t\ttitleX,\n\t\t\t\t\ttitleY,\n\t\t\t\t\ttop = me.top,\n\t\t\t\t\tleft = me.left,\n\t\t\t\t\tbottom = me.bottom,\n\t\t\t\t\tright = me.right;\n\n\t\t\t\tctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour\n\t\t\t\tctx.font = titleFont;\n\n\t\t\t\t// Horizontal\n\t\t\t\tif (me.isHorizontal()) {\n\t\t\t\t\ttitleX = left + ((right - left) / 2); // midpoint of the width\n\t\t\t\t\ttitleY = top + ((bottom - top) / 2); // midpoint of the height\n\t\t\t\t} else {\n\t\t\t\t\ttitleX = opts.position === 'left' ? left + (fontSize / 2) : right - (fontSize / 2);\n\t\t\t\t\ttitleY = top + ((bottom - top) / 2);\n\t\t\t\t\trotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n\t\t\t\t}\n\n\t\t\t\tctx.save();\n\t\t\t\tctx.translate(titleX, titleY);\n\t\t\t\tctx.rotate(rotation);\n\t\t\t\tctx.textAlign = 'center';\n\t\t\t\tctx.textBaseline = 'middle';\n\t\t\t\tctx.fillText(opts.text, 0, 0);\n\t\t\t\tctx.restore();\n\t\t\t}\n\t\t}\n\t});\n\n\t// Register the title plugin\n\tChart.plugins.register({\n\t\tbeforeInit: function(chartInstance) {\n\t\t\tvar opts = chartInstance.options;\n\t\t\tvar titleOpts = opts.title;\n\n\t\t\tif (titleOpts) {\n\t\t\t\tchartInstance.titleBlock = new Chart.Title({\n\t\t\t\t\tctx: chartInstance.chart.ctx,\n\t\t\t\t\toptions: titleOpts,\n\t\t\t\t\tchart: chartInstance\n\t\t\t\t});\n\n\t\t\t\tChart.layoutService.addBox(chartInstance, chartInstance.titleBlock);\n\t\t\t}\n\t\t}\n\t});\n};\n\n},{}],34:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\tChart.defaults.global.tooltips = {\n\t\tenabled: true,\n\t\tcustom: null,\n\t\tmode: 'single',\n\t\tbackgroundColor: 'rgba(0,0,0,0.8)',\n\t\ttitleFontStyle: 'bold',\n\t\ttitleSpacing: 2,\n\t\ttitleMarginBottom: 6,\n\t\ttitleFontColor: '#fff',\n\t\ttitleAlign: 'left',\n\t\tbodySpacing: 2,\n\t\tbodyFontColor: '#fff',\n\t\tbodyAlign: 'left',\n\t\tfooterFontStyle: 'bold',\n\t\tfooterSpacing: 2,\n\t\tfooterMarginTop: 6,\n\t\tfooterFontColor: '#fff',\n\t\tfooterAlign: 'left',\n\t\tyPadding: 6,\n\t\txPadding: 6,\n\t\tyAlign: 'center',\n\t\txAlign: 'center',\n\t\tcaretSize: 5,\n\t\tcornerRadius: 6,\n\t\tmultiKeyBackground: '#fff',\n\t\tcallbacks: {\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeTitle: helpers.noop,\n\t\t\ttitle: function(tooltipItems, data) {\n\t\t\t\t// Pick first xLabel for now\n\t\t\t\tvar title = '';\n\t\t\t\tvar labels = data.labels;\n\t\t\t\tvar labelCount = labels ? labels.length : 0;\n\n\t\t\t\tif (tooltipItems.length > 0) {\n\t\t\t\t\tvar item = tooltipItems[0];\n\n\t\t\t\t\tif (item.xLabel) {\n\t\t\t\t\t\ttitle = item.xLabel;\n\t\t\t\t\t} else if (labelCount > 0 && item.index < labelCount) {\n\t\t\t\t\t\ttitle = labels[item.index];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn title;\n\t\t\t},\n\t\t\tafterTitle: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeBody: helpers.noop,\n\n\t\t\t// Args are: (tooltipItem, data)\n\t\t\tbeforeLabel: helpers.noop,\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar datasetLabel = data.datasets[tooltipItem.datasetIndex].label || '';\n\t\t\t\treturn datasetLabel + ': ' + tooltipItem.yLabel;\n\t\t\t},\n\t\t\tlabelColor: function(tooltipItem, chartInstance) {\n\t\t\t\tvar meta = chartInstance.getDatasetMeta(tooltipItem.datasetIndex);\n\t\t\t\tvar activeElement = meta.data[tooltipItem.index];\n\t\t\t\tvar view = activeElement._view;\n\t\t\t\treturn {\n\t\t\t\t\tborderColor: view.borderColor,\n\t\t\t\t\tbackgroundColor: view.backgroundColor\n\t\t\t\t};\n\t\t\t},\n\t\t\tafterLabel: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tafterBody: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeFooter: helpers.noop,\n\t\t\tfooter: helpers.noop,\n\t\t\tafterFooter: helpers.noop\n\t\t}\n\t};\n\n\t// Helper to push or concat based on if the 2nd parameter is an array or not\n\tfunction pushOrConcat(base, toPush) {\n\t\tif (toPush) {\n\t\t\tif (helpers.isArray(toPush)) {\n\t\t\t\t// base = base.concat(toPush);\n\t\t\t\tArray.prototype.push.apply(base, toPush);\n\t\t\t} else {\n\t\t\t\tbase.push(toPush);\n\t\t\t}\n\t\t}\n\n\t\treturn base;\n\t}\n\n\tfunction getAveragePosition(elements) {\n\t\tif (!elements.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar i, len;\n\t\tvar xPositions = [];\n\t\tvar yPositions = [];\n\n\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\tvar el = elements[i];\n\t\t\tif (el && el.hasValue()) {\n\t\t\t\tvar pos = el.tooltipPosition();\n\t\t\t\txPositions.push(pos.x);\n\t\t\t\tyPositions.push(pos.y);\n\t\t\t}\n\t\t}\n\n\t\tvar x = 0,\n\t\t\ty = 0;\n\t\tfor (i = 0; i < xPositions.length; ++i) {\n\t\t\tif (xPositions[i]) {\n\t\t\t\tx += xPositions[i];\n\t\t\t\ty += yPositions[i];\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tx: Math.round(x / xPositions.length),\n\t\t\ty: Math.round(y / xPositions.length)\n\t\t};\n\t}\n\n\t// Private helper to create a tooltip iteam model\n\t// @param element : the chart element (point, arc, bar) to create the tooltip item for\n\t// @return : new tooltip item\n\tfunction createTooltipItem(element) {\n\t\tvar xScale = element._xScale;\n\t\tvar yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\t\tvar index = element._index,\n\t\t\tdatasetIndex = element._datasetIndex;\n\n\t\treturn {\n\t\t\txLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n\t\t\tyLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n\t\t\tindex: index,\n\t\t\tdatasetIndex: datasetIndex\n\t\t};\n\t}\n\n\tChart.Tooltip = Chart.Element.extend({\n\t\tinitialize: function() {\n\t\t\tvar me = this;\n\t\t\tvar globalDefaults = Chart.defaults.global;\n\t\t\tvar tooltipOpts = me._options;\n\t\t\tvar getValueOrDefault = helpers.getValueOrDefault;\n\n\t\t\thelpers.extend(me, {\n\t\t\t\t_model: {\n\t\t\t\t\t// Positioning\n\t\t\t\t\txPadding: tooltipOpts.xPadding,\n\t\t\t\t\tyPadding: tooltipOpts.yPadding,\n\t\t\t\t\txAlign: tooltipOpts.xAlign,\n\t\t\t\t\tyAlign: tooltipOpts.yAlign,\n\n\t\t\t\t\t// Body\n\t\t\t\t\tbodyFontColor: tooltipOpts.bodyFontColor,\n\t\t\t\t\t_bodyFontFamily: getValueOrDefault(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n\t\t\t\t\t_bodyFontStyle: getValueOrDefault(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n\t\t\t\t\t_bodyAlign: tooltipOpts.bodyAlign,\n\t\t\t\t\tbodyFontSize: getValueOrDefault(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n\t\t\t\t\tbodySpacing: tooltipOpts.bodySpacing,\n\n\t\t\t\t\t// Title\n\t\t\t\t\ttitleFontColor: tooltipOpts.titleFontColor,\n\t\t\t\t\t_titleFontFamily: getValueOrDefault(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n\t\t\t\t\t_titleFontStyle: getValueOrDefault(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n\t\t\t\t\ttitleFontSize: getValueOrDefault(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n\t\t\t\t\t_titleAlign: tooltipOpts.titleAlign,\n\t\t\t\t\ttitleSpacing: tooltipOpts.titleSpacing,\n\t\t\t\t\ttitleMarginBottom: tooltipOpts.titleMarginBottom,\n\n\t\t\t\t\t// Footer\n\t\t\t\t\tfooterFontColor: tooltipOpts.footerFontColor,\n\t\t\t\t\t_footerFontFamily: getValueOrDefault(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n\t\t\t\t\t_footerFontStyle: getValueOrDefault(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n\t\t\t\t\tfooterFontSize: getValueOrDefault(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n\t\t\t\t\t_footerAlign: tooltipOpts.footerAlign,\n\t\t\t\t\tfooterSpacing: tooltipOpts.footerSpacing,\n\t\t\t\t\tfooterMarginTop: tooltipOpts.footerMarginTop,\n\n\t\t\t\t\t// Appearance\n\t\t\t\t\tcaretSize: tooltipOpts.caretSize,\n\t\t\t\t\tcornerRadius: tooltipOpts.cornerRadius,\n\t\t\t\t\tbackgroundColor: tooltipOpts.backgroundColor,\n\t\t\t\t\topacity: 0,\n\t\t\t\t\tlegendColorBackground: tooltipOpts.multiKeyBackground\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\t// Get the title\n\t\t// Args are: (tooltipItem, data)\n\t\tgetTitle: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me._options;\n\t\t\tvar callbacks = opts.callbacks;\n\n\t\t\tvar beforeTitle = callbacks.beforeTitle.apply(me, arguments),\n\t\t\t\ttitle = callbacks.title.apply(me, arguments),\n\t\t\t\tafterTitle = callbacks.afterTitle.apply(me, arguments);\n\n\t\t\tvar lines = [];\n\t\t\tlines = pushOrConcat(lines, beforeTitle);\n\t\t\tlines = pushOrConcat(lines, title);\n\t\t\tlines = pushOrConcat(lines, afterTitle);\n\n\t\t\treturn lines;\n\t\t},\n\n\t\t// Args are: (tooltipItem, data)\n\t\tgetBeforeBody: function() {\n\t\t\tvar lines = this._options.callbacks.beforeBody.apply(this, arguments);\n\t\t\treturn helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\n\t\t},\n\n\t\t// Args are: (tooltipItem, data)\n\t\tgetBody: function(tooltipItems, data) {\n\t\t\tvar me = this;\n\t\t\tvar callbacks = me._options.callbacks;\n\t\t\tvar bodyItems = [];\n\n\t\t\thelpers.each(tooltipItems, function(tooltipItem) {\n\t\t\t\tvar bodyItem = {\n\t\t\t\t\tbefore: [],\n\t\t\t\t\tlines: [],\n\t\t\t\t\tafter: []\n\t\t\t\t};\n\t\t\t\tpushOrConcat(bodyItem.before, callbacks.beforeLabel.call(me, tooltipItem, data));\n\t\t\t\tpushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n\t\t\t\tpushOrConcat(bodyItem.after, callbacks.afterLabel.call(me, tooltipItem, data));\n\n\t\t\t\tbodyItems.push(bodyItem);\n\t\t\t});\n\n\t\t\treturn bodyItems;\n\t\t},\n\n\t\t// Args are: (tooltipItem, data)\n\t\tgetAfterBody: function() {\n\t\t\tvar lines = this._options.callbacks.afterBody.apply(this, arguments);\n\t\t\treturn helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\n\t\t},\n\n\t\t// Get the footer and beforeFooter and afterFooter lines\n\t\t// Args are: (tooltipItem, data)\n\t\tgetFooter: function() {\n\t\t\tvar me = this;\n\t\t\tvar callbacks = me._options.callbacks;\n\n\t\t\tvar beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n\t\t\tvar footer = callbacks.footer.apply(me, arguments);\n\t\t\tvar afterFooter = callbacks.afterFooter.apply(me, arguments);\n\n\t\t\tvar lines = [];\n\t\t\tlines = pushOrConcat(lines, beforeFooter);\n\t\t\tlines = pushOrConcat(lines, footer);\n\t\t\tlines = pushOrConcat(lines, afterFooter);\n\n\t\t\treturn lines;\n\t\t},\n\n\t\tupdate: function(changed) {\n\t\t\tvar me = this;\n\t\t\tvar opts = me._options;\n\t\t\tvar model = me._model;\n\t\t\tvar active = me._active;\n\n\t\t\tvar data = me._data;\n\t\t\tvar chartInstance = me._chartInstance;\n\n\t\t\tvar i, len;\n\n\t\t\tif (active.length) {\n\t\t\t\tmodel.opacity = 1;\n\n\t\t\t\tvar labelColors = [],\n\t\t\t\t\ttooltipPosition = getAveragePosition(active);\n\n\t\t\t\tvar tooltipItems = [];\n\t\t\t\tfor (i = 0, len = active.length; i < len; ++i) {\n\t\t\t\t\ttooltipItems.push(createTooltipItem(active[i]));\n\t\t\t\t}\n\n\t\t\t\t// If the user provided a sorting function, use it to modify the tooltip items\n\t\t\t\tif (opts.itemSort) {\n\t\t\t\t\ttooltipItems = tooltipItems.sort(function(a, b) {\n\t\t\t\t\t\treturn opts.itemSort(a, b, data);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// If there is more than one item, show color items\n\t\t\t\tif (active.length > 1) {\n\t\t\t\t\thelpers.each(tooltipItems, function(tooltipItem) {\n\t\t\t\t\t\tlabelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, chartInstance));\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// Build the Text Lines\n\t\t\t\thelpers.extend(model, {\n\t\t\t\t\ttitle: me.getTitle(tooltipItems, data),\n\t\t\t\t\tbeforeBody: me.getBeforeBody(tooltipItems, data),\n\t\t\t\t\tbody: me.getBody(tooltipItems, data),\n\t\t\t\t\tafterBody: me.getAfterBody(tooltipItems, data),\n\t\t\t\t\tfooter: me.getFooter(tooltipItems, data),\n\t\t\t\t\tx: Math.round(tooltipPosition.x),\n\t\t\t\t\ty: Math.round(tooltipPosition.y),\n\t\t\t\t\tcaretPadding: helpers.getValueOrDefault(tooltipPosition.padding, 2),\n\t\t\t\t\tlabelColors: labelColors\n\t\t\t\t});\n\n\t\t\t\t// We need to determine alignment of\n\t\t\t\tvar tooltipSize = me.getTooltipSize(model);\n\t\t\t\tme.determineAlignment(tooltipSize); // Smart Tooltip placement to stay on the canvas\n\n\t\t\t\thelpers.extend(model, me.getBackgroundPoint(model, tooltipSize));\n\t\t\t} else {\n\t\t\t\tme._model.opacity = 0;\n\t\t\t}\n\n\t\t\tif (changed && opts.custom) {\n\t\t\t\topts.custom.call(me, model);\n\t\t\t}\n\n\t\t\treturn me;\n\t\t},\n\t\tgetTooltipSize: function(vm) {\n\t\t\tvar ctx = this._chart.ctx;\n\n\t\t\tvar size = {\n\t\t\t\theight: vm.yPadding * 2, // Tooltip Padding\n\t\t\t\twidth: 0\n\t\t\t};\n\n\t\t\t// Count of all lines in the body\n\t\t\tvar body = vm.body;\n\t\t\tvar combinedBodyLength = body.reduce(function(count, bodyItem) {\n\t\t\t\treturn count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n\t\t\t}, 0);\n\t\t\tcombinedBodyLength += vm.beforeBody.length + vm.afterBody.length;\n\n\t\t\tvar titleLineCount = vm.title.length;\n\t\t\tvar footerLineCount = vm.footer.length;\n\t\t\tvar titleFontSize = vm.titleFontSize,\n\t\t\t\tbodyFontSize = vm.bodyFontSize,\n\t\t\t\tfooterFontSize = vm.footerFontSize;\n\n\t\t\tsize.height += titleLineCount * titleFontSize; // Title Lines\n\t\t\tsize.height += (titleLineCount - 1) * vm.titleSpacing; // Title Line Spacing\n\t\t\tsize.height += titleLineCount ? vm.titleMarginBottom : 0; // Title's bottom Margin\n\t\t\tsize.height += combinedBodyLength * bodyFontSize; // Body Lines\n\t\t\tsize.height += combinedBodyLength ? (combinedBodyLength - 1) * vm.bodySpacing : 0; // Body Line Spacing\n\t\t\tsize.height += footerLineCount ? vm.footerMarginTop : 0; // Footer Margin\n\t\t\tsize.height += footerLineCount * (footerFontSize); // Footer Lines\n\t\t\tsize.height += footerLineCount ? (footerLineCount - 1) * vm.footerSpacing : 0; // Footer Line Spacing\n\n\t\t\t// Title width\n\t\t\tvar widthPadding = 0;\n\t\t\tvar maxLineWidth = function(line) {\n\t\t\t\tsize.width = Math.max(size.width, ctx.measureText(line).width + widthPadding);\n\t\t\t};\n\n\t\t\tctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n\t\t\thelpers.each(vm.title, maxLineWidth);\n\n\t\t\t// Body width\n\t\t\tctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n\t\t\thelpers.each(vm.beforeBody.concat(vm.afterBody), maxLineWidth);\n\n\t\t\t// Body lines may include some extra width due to the color box\n\t\t\twidthPadding = body.length > 1 ? (bodyFontSize + 2) : 0;\n\t\t\thelpers.each(body, function(bodyItem) {\n\t\t\t\thelpers.each(bodyItem.before, maxLineWidth);\n\t\t\t\thelpers.each(bodyItem.lines, maxLineWidth);\n\t\t\t\thelpers.each(bodyItem.after, maxLineWidth);\n\t\t\t});\n\n\t\t\t// Reset back to 0\n\t\t\twidthPadding = 0;\n\n\t\t\t// Footer width\n\t\t\tctx.font = helpers.fontString(footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n\t\t\thelpers.each(vm.footer, maxLineWidth);\n\n\t\t\t// Add padding\n\t\t\tsize.width += 2 * vm.xPadding;\n\n\t\t\treturn size;\n\t\t},\n\t\tdetermineAlignment: function(size) {\n\t\t\tvar me = this;\n\t\t\tvar model = me._model;\n\t\t\tvar chart = me._chart;\n\t\t\tvar chartArea = me._chartInstance.chartArea;\n\n\t\t\tif (model.y < size.height) {\n\t\t\t\tmodel.yAlign = 'top';\n\t\t\t} else if (model.y > (chart.height - size.height)) {\n\t\t\t\tmodel.yAlign = 'bottom';\n\t\t\t}\n\n\t\t\tvar lf, rf; // functions to determine left, right alignment\n\t\t\tvar olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\t\t\tvar yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\t\t\tvar midX = (chartArea.left + chartArea.right) / 2;\n\t\t\tvar midY = (chartArea.top + chartArea.bottom) / 2;\n\n\t\t\tif (model.yAlign === 'center') {\n\t\t\t\tlf = function(x) {\n\t\t\t\t\treturn x <= midX;\n\t\t\t\t};\n\t\t\t\trf = function(x) {\n\t\t\t\t\treturn x > midX;\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tlf = function(x) {\n\t\t\t\t\treturn x <= (size.width / 2);\n\t\t\t\t};\n\t\t\t\trf = function(x) {\n\t\t\t\t\treturn x >= (chart.width - (size.width / 2));\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tolf = function(x) {\n\t\t\t\treturn x + size.width > chart.width;\n\t\t\t};\n\t\t\torf = function(x) {\n\t\t\t\treturn x - size.width < 0;\n\t\t\t};\n\t\t\tyf = function(y) {\n\t\t\t\treturn y <= midY ? 'top' : 'bottom';\n\t\t\t};\n\n\t\t\tif (lf(model.x)) {\n\t\t\t\tmodel.xAlign = 'left';\n\n\t\t\t\t// Is tooltip too wide and goes over the right side of the chart.?\n\t\t\t\tif (olf(model.x)) {\n\t\t\t\t\tmodel.xAlign = 'center';\n\t\t\t\t\tmodel.yAlign = yf(model.y);\n\t\t\t\t}\n\t\t\t} else if (rf(model.x)) {\n\t\t\t\tmodel.xAlign = 'right';\n\n\t\t\t\t// Is tooltip too wide and goes outside left edge of canvas?\n\t\t\t\tif (orf(model.x)) {\n\t\t\t\t\tmodel.xAlign = 'center';\n\t\t\t\t\tmodel.yAlign = yf(model.y);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tgetBackgroundPoint: function(vm, size) {\n\t\t\t// Background Position\n\t\t\tvar pt = {\n\t\t\t\tx: vm.x,\n\t\t\t\ty: vm.y\n\t\t\t};\n\n\t\t\tvar caretSize = vm.caretSize,\n\t\t\t\tcaretPadding = vm.caretPadding,\n\t\t\t\tcornerRadius = vm.cornerRadius,\n\t\t\t\txAlign = vm.xAlign,\n\t\t\t\tyAlign = vm.yAlign,\n\t\t\t\tpaddingAndSize = caretSize + caretPadding,\n\t\t\t\tradiusAndPadding = cornerRadius + caretPadding;\n\n\t\t\tif (xAlign === 'right') {\n\t\t\t\tpt.x -= size.width;\n\t\t\t} else if (xAlign === 'center') {\n\t\t\t\tpt.x -= (size.width / 2);\n\t\t\t}\n\n\t\t\tif (yAlign === 'top') {\n\t\t\t\tpt.y += paddingAndSize;\n\t\t\t} else if (yAlign === 'bottom') {\n\t\t\t\tpt.y -= size.height + paddingAndSize;\n\t\t\t} else {\n\t\t\t\tpt.y -= (size.height / 2);\n\t\t\t}\n\n\t\t\tif (yAlign === 'center') {\n\t\t\t\tif (xAlign === 'left') {\n\t\t\t\t\tpt.x += paddingAndSize;\n\t\t\t\t} else if (xAlign === 'right') {\n\t\t\t\t\tpt.x -= paddingAndSize;\n\t\t\t\t}\n\t\t\t} else if (xAlign === 'left') {\n\t\t\t\tpt.x -= radiusAndPadding;\n\t\t\t} else if (xAlign === 'right') {\n\t\t\t\tpt.x += radiusAndPadding;\n\t\t\t}\n\n\t\t\treturn pt;\n\t\t},\n\t\tdrawCaret: function(tooltipPoint, size, opacity) {\n\t\t\tvar vm = this._view;\n\t\t\tvar ctx = this._chart.ctx;\n\t\t\tvar x1, x2, x3;\n\t\t\tvar y1, y2, y3;\n\t\t\tvar caretSize = vm.caretSize;\n\t\t\tvar cornerRadius = vm.cornerRadius;\n\t\t\tvar xAlign = vm.xAlign,\n\t\t\t\tyAlign = vm.yAlign;\n\t\t\tvar ptX = tooltipPoint.x,\n\t\t\t\tptY = tooltipPoint.y;\n\t\t\tvar width = size.width,\n\t\t\t\theight = size.height;\n\n\t\t\tif (yAlign === 'center') {\n\t\t\t\t// Left or right side\n\t\t\t\tif (xAlign === 'left') {\n\t\t\t\t\tx1 = ptX;\n\t\t\t\t\tx2 = x1 - caretSize;\n\t\t\t\t\tx3 = x1;\n\t\t\t\t} else {\n\t\t\t\t\tx1 = ptX + width;\n\t\t\t\t\tx2 = x1 + caretSize;\n\t\t\t\t\tx3 = x1;\n\t\t\t\t}\n\n\t\t\t\ty2 = ptY + (height / 2);\n\t\t\t\ty1 = y2 - caretSize;\n\t\t\t\ty3 = y2 + caretSize;\n\t\t\t} else {\n\t\t\t\tif (xAlign === 'left') {\n\t\t\t\t\tx1 = ptX + cornerRadius;\n\t\t\t\t\tx2 = x1 + caretSize;\n\t\t\t\t\tx3 = x2 + caretSize;\n\t\t\t\t} else if (xAlign === 'right') {\n\t\t\t\t\tx1 = ptX + width - cornerRadius;\n\t\t\t\t\tx2 = x1 - caretSize;\n\t\t\t\t\tx3 = x2 - caretSize;\n\t\t\t\t} else {\n\t\t\t\t\tx2 = ptX + (width / 2);\n\t\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\t\tx3 = x2 + caretSize;\n\t\t\t\t}\n\n\t\t\t\tif (yAlign === 'top') {\n\t\t\t\t\ty1 = ptY;\n\t\t\t\t\ty2 = y1 - caretSize;\n\t\t\t\t\ty3 = y1;\n\t\t\t\t} else {\n\t\t\t\t\ty1 = ptY + height;\n\t\t\t\t\ty2 = y1 + caretSize;\n\t\t\t\t\ty3 = y1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar bgColor = helpers.color(vm.backgroundColor);\n\t\t\tctx.fillStyle = bgColor.alpha(opacity * bgColor.alpha()).rgbString();\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x1, y1);\n\t\t\tctx.lineTo(x2, y2);\n\t\t\tctx.lineTo(x3, y3);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t},\n\t\tdrawTitle: function(pt, vm, ctx, opacity) {\n\t\t\tvar title = vm.title;\n\n\t\t\tif (title.length) {\n\t\t\t\tctx.textAlign = vm._titleAlign;\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\tvar titleFontSize = vm.titleFontSize,\n\t\t\t\t\ttitleSpacing = vm.titleSpacing;\n\n\t\t\t\tvar titleFontColor = helpers.color(vm.titleFontColor);\n\t\t\t\tctx.fillStyle = titleFontColor.alpha(opacity * titleFontColor.alpha()).rgbString();\n\t\t\t\tctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n\n\t\t\t\tvar i, len;\n\t\t\t\tfor (i = 0, len = title.length; i < len; ++i) {\n\t\t\t\t\tctx.fillText(title[i], pt.x, pt.y);\n\t\t\t\t\tpt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n\t\t\t\t\tif (i + 1 === title.length) {\n\t\t\t\t\t\tpt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tdrawBody: function(pt, vm, ctx, opacity) {\n\t\t\tvar bodyFontSize = vm.bodyFontSize;\n\t\t\tvar bodySpacing = vm.bodySpacing;\n\t\t\tvar body = vm.body;\n\n\t\t\tctx.textAlign = vm._bodyAlign;\n\t\t\tctx.textBaseline = 'top';\n\n\t\t\tvar bodyFontColor = helpers.color(vm.bodyFontColor);\n\t\t\tvar textColor = bodyFontColor.alpha(opacity * bodyFontColor.alpha()).rgbString();\n\t\t\tctx.fillStyle = textColor;\n\t\t\tctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n\n\t\t\t// Before Body\n\t\t\tvar xLinePadding = 0;\n\t\t\tvar fillLineOfText = function(line) {\n\t\t\t\tctx.fillText(line, pt.x + xLinePadding, pt.y);\n\t\t\t\tpt.y += bodyFontSize + bodySpacing;\n\t\t\t};\n\n\t\t\t// Before body lines\n\t\t\thelpers.each(vm.beforeBody, fillLineOfText);\n\n\t\t\tvar drawColorBoxes = body.length > 1;\n\t\t\txLinePadding = drawColorBoxes ? (bodyFontSize + 2) : 0;\n\n\t\t\t// Draw body lines now\n\t\t\thelpers.each(body, function(bodyItem, i) {\n\t\t\t\thelpers.each(bodyItem.before, fillLineOfText);\n\n\t\t\t\thelpers.each(bodyItem.lines, function(line) {\n\t\t\t\t\t// Draw Legend-like boxes if needed\n\t\t\t\t\tif (drawColorBoxes) {\n\t\t\t\t\t\t// Fill a white rect so that colours merge nicely if the opacity is < 1\n\t\t\t\t\t\tctx.fillStyle = helpers.color(vm.legendColorBackground).alpha(opacity).rgbaString();\n\t\t\t\t\t\tctx.fillRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t\t// Border\n\t\t\t\t\t\tctx.strokeStyle = helpers.color(vm.labelColors[i].borderColor).alpha(opacity).rgbaString();\n\t\t\t\t\t\tctx.strokeRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t\t// Inner square\n\t\t\t\t\t\tctx.fillStyle = helpers.color(vm.labelColors[i].backgroundColor).alpha(opacity).rgbaString();\n\t\t\t\t\t\tctx.fillRect(pt.x + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n\n\t\t\t\t\t\tctx.fillStyle = textColor;\n\t\t\t\t\t}\n\n\t\t\t\t\tfillLineOfText(line);\n\t\t\t\t});\n\n\t\t\t\thelpers.each(bodyItem.after, fillLineOfText);\n\t\t\t});\n\n\t\t\t// Reset back to 0 for after body\n\t\t\txLinePadding = 0;\n\n\t\t\t// After body lines\n\t\t\thelpers.each(vm.afterBody, fillLineOfText);\n\t\t\tpt.y -= bodySpacing; // Remove last body spacing\n\t\t},\n\t\tdrawFooter: function(pt, vm, ctx, opacity) {\n\t\t\tvar footer = vm.footer;\n\n\t\t\tif (footer.length) {\n\t\t\t\tpt.y += vm.footerMarginTop;\n\n\t\t\t\tctx.textAlign = vm._footerAlign;\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\tvar footerFontColor = helpers.color(vm.footerFontColor);\n\t\t\t\tctx.fillStyle = footerFontColor.alpha(opacity * footerFontColor.alpha()).rgbString();\n\t\t\t\tctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n\n\t\t\t\thelpers.each(footer, function(line) {\n\t\t\t\t\tctx.fillText(line, pt.x, pt.y);\n\t\t\t\t\tpt.y += vm.footerFontSize + vm.footerSpacing;\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tdraw: function() {\n\t\t\tvar ctx = this._chart.ctx;\n\t\t\tvar vm = this._view;\n\n\t\t\tif (vm.opacity === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar tooltipSize = this.getTooltipSize(vm);\n\t\t\tvar pt = {\n\t\t\t\tx: vm.x,\n\t\t\t\ty: vm.y\n\t\t\t};\n\n\t\t\t// IE11/Edge does not like very small opacities, so snap to 0\n\t\t\tvar opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity;\n\n\t\t\tif (this._options.enabled) {\n\t\t\t\t// Draw Background\n\t\t\t\tvar bgColor = helpers.color(vm.backgroundColor);\n\t\t\t\tctx.fillStyle = bgColor.alpha(opacity * bgColor.alpha()).rgbString();\n\t\t\t\thelpers.drawRoundedRectangle(ctx, pt.x, pt.y, tooltipSize.width, tooltipSize.height, vm.cornerRadius);\n\t\t\t\tctx.fill();\n\n\t\t\t\t// Draw Caret\n\t\t\t\tthis.drawCaret(pt, tooltipSize, opacity);\n\n\t\t\t\t// Draw Title, Body, and Footer\n\t\t\t\tpt.x += vm.xPadding;\n\t\t\t\tpt.y += vm.yPadding;\n\n\t\t\t\t// Titles\n\t\t\t\tthis.drawTitle(pt, vm, ctx, opacity);\n\n\t\t\t\t// Body\n\t\t\t\tthis.drawBody(pt, vm, ctx, opacity);\n\n\t\t\t\t// Footer\n\t\t\t\tthis.drawFooter(pt, vm, ctx, opacity);\n\t\t\t}\n\t\t}\n\t});\n};\n\n},{}],35:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers,\n\t\tglobalOpts = Chart.defaults.global;\n\n\tglobalOpts.elements.arc = {\n\t\tbackgroundColor: globalOpts.defaultColor,\n\t\tborderColor: '#fff',\n\t\tborderWidth: 2\n\t};\n\n\tChart.elements.Arc = Chart.Element.extend({\n\t\tinLabelRange: function(mouseX) {\n\t\t\tvar vm = this._view;\n\n\t\t\tif (vm) {\n\t\t\t\treturn (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2));\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tinRange: function(chartX, chartY) {\n\t\t\tvar vm = this._view;\n\n\t\t\tif (vm) {\n\t\t\t\tvar pointRelativePosition = helpers.getAngleFromPoint(vm, {\n\t\t\t\t\t\tx: chartX,\n\t\t\t\t\t\ty: chartY\n\t\t\t\t\t}),\n\t\t\t\t\tangle = pointRelativePosition.angle,\n\t\t\t\t\tdistance = pointRelativePosition.distance;\n\n\t\t\t\t// Sanitise angle range\n\t\t\t\tvar startAngle = vm.startAngle;\n\t\t\t\tvar endAngle = vm.endAngle;\n\t\t\t\twhile (endAngle < startAngle) {\n\t\t\t\t\tendAngle += 2.0 * Math.PI;\n\t\t\t\t}\n\t\t\t\twhile (angle > endAngle) {\n\t\t\t\t\tangle -= 2.0 * Math.PI;\n\t\t\t\t}\n\t\t\t\twhile (angle < startAngle) {\n\t\t\t\t\tangle += 2.0 * Math.PI;\n\t\t\t\t}\n\n\t\t\t\t// Check if within the range of the open/close angle\n\t\t\t\tvar betweenAngles = (angle >= startAngle && angle <= endAngle),\n\t\t\t\t\twithinRadius = (distance >= vm.innerRadius && distance <= vm.outerRadius);\n\n\t\t\t\treturn (betweenAngles && withinRadius);\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\ttooltipPosition: function() {\n\t\t\tvar vm = this._view;\n\n\t\t\tvar centreAngle = vm.startAngle + ((vm.endAngle - vm.startAngle) / 2),\n\t\t\t\trangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n\t\t\treturn {\n\t\t\t\tx: vm.x + (Math.cos(centreAngle) * rangeFromCentre),\n\t\t\t\ty: vm.y + (Math.sin(centreAngle) * rangeFromCentre)\n\t\t\t};\n\t\t},\n\t\tdraw: function() {\n\n\t\t\tvar ctx = this._chart.ctx,\n\t\t\t\tvm = this._view,\n\t\t\t\tsA = vm.startAngle,\n\t\t\t\teA = vm.endAngle;\n\n\t\t\tctx.beginPath();\n\n\t\t\tctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n\t\t\tctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n\n\t\t\tctx.closePath();\n\t\t\tctx.strokeStyle = vm.borderColor;\n\t\t\tctx.lineWidth = vm.borderWidth;\n\n\t\t\tctx.fillStyle = vm.backgroundColor;\n\n\t\t\tctx.fill();\n\t\t\tctx.lineJoin = 'bevel';\n\n\t\t\tif (vm.borderWidth) {\n\t\t\t\tctx.stroke();\n\t\t\t}\n\t\t}\n\t});\n};\n\n},{}],36:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\tvar globalDefaults = Chart.defaults.global;\n\n\tChart.defaults.global.elements.line = {\n\t\ttension: 0.4,\n\t\tbackgroundColor: globalDefaults.defaultColor,\n\t\tborderWidth: 3,\n\t\tborderColor: globalDefaults.defaultColor,\n\t\tborderCapStyle: 'butt',\n\t\tborderDash: [],\n\t\tborderDashOffset: 0.0,\n\t\tborderJoinStyle: 'miter',\n\t\tcapBezierPoints: true,\n\t\tfill: true // do we fill in the area between the line and its base axis\n\t};\n\n\tChart.elements.Line = Chart.Element.extend({\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar vm = me._view;\n\t\t\tvar spanGaps = vm.spanGaps;\n\t\t\tvar scaleZero = vm.scaleZero;\n\t\t\tvar loop = me._loop;\n\n\t\t\tvar ctx = me._chart.ctx;\n\t\t\tctx.save();\n\n\t\t\t// Helper function to draw a line to a point\n\t\t\tfunction lineToPoint(previousPoint, point) {\n\t\t\t\tvar pointVM = point._view;\n\t\t\t\tif (point._view.steppedLine === true) {\n\t\t\t\t\tctx.lineTo(pointVM.x, previousPoint._view.y);\n\t\t\t\t\tctx.lineTo(pointVM.x, pointVM.y);\n\t\t\t\t} else if (point._view.tension === 0) {\n\t\t\t\t\tctx.lineTo(pointVM.x, pointVM.y);\n\t\t\t\t} else {\n\t\t\t\t\tctx.bezierCurveTo(\n\t\t\t\t\t\tpreviousPoint._view.controlPointNextX,\n\t\t\t\t\t\tpreviousPoint._view.controlPointNextY,\n\t\t\t\t\t\tpointVM.controlPointPreviousX,\n\t\t\t\t\t\tpointVM.controlPointPreviousY,\n\t\t\t\t\t\tpointVM.x,\n\t\t\t\t\t\tpointVM.y\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar points = me._children.slice(); // clone array\n\t\t\tvar lastDrawnIndex = -1;\n\n\t\t\t// If we are looping, adding the first point again\n\t\t\tif (loop && points.length) {\n\t\t\t\tpoints.push(points[0]);\n\t\t\t}\n\n\t\t\tvar index, current, previous, currentVM;\n\n\t\t\t// Fill Line\n\t\t\tif (points.length && vm.fill) {\n\t\t\t\tctx.beginPath();\n\n\t\t\t\tfor (index = 0; index < points.length; ++index) {\n\t\t\t\t\tcurrent = points[index];\n\t\t\t\t\tprevious = helpers.previousItem(points, index);\n\t\t\t\t\tcurrentVM = current._view;\n\n\t\t\t\t\t// First point moves to it's starting position no matter what\n\t\t\t\t\tif (index === 0) {\n\t\t\t\t\t\tif (loop) {\n\t\t\t\t\t\t\tctx.moveTo(scaleZero.x, scaleZero.y);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tctx.moveTo(currentVM.x, scaleZero);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t\t\t\tctx.lineTo(currentVM.x, currentVM.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprevious = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n\t\t\t\t\t\tif (currentVM.skip) {\n\t\t\t\t\t\t\t// Only do this if this is the first point that is skipped\n\t\t\t\t\t\t\tif (!spanGaps && lastDrawnIndex === (index - 1)) {\n\t\t\t\t\t\t\t\tif (loop) {\n\t\t\t\t\t\t\t\t\tctx.lineTo(scaleZero.x, scaleZero.y);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tctx.lineTo(previous._view.x, scaleZero);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (lastDrawnIndex !== (index - 1)) {\n\t\t\t\t\t\t\t\t// There was a gap and this is the first point after the gap. If we've never drawn a point, this is a special case.\n\t\t\t\t\t\t\t\t// If the first data point is NaN, then there is no real gap to skip\n\t\t\t\t\t\t\t\tif (spanGaps && lastDrawnIndex !== -1) {\n\t\t\t\t\t\t\t\t\t// We are spanning the gap, so simple draw a line to this point\n\t\t\t\t\t\t\t\t\tlineToPoint(previous, current);\n\t\t\t\t\t\t\t\t} else if (loop) {\n\t\t\t\t\t\t\t\t\tctx.lineTo(currentVM.x, currentVM.y);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tctx.lineTo(currentVM.x, scaleZero);\n\t\t\t\t\t\t\t\t\tctx.lineTo(currentVM.x, currentVM.y);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// Line to next point\n\t\t\t\t\t\t\t\tlineToPoint(previous, current);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!loop && lastDrawnIndex !== -1) {\n\t\t\t\t\tctx.lineTo(points[lastDrawnIndex]._view.x, scaleZero);\n\t\t\t\t}\n\n\t\t\t\tctx.fillStyle = vm.backgroundColor || globalDefaults.defaultColor;\n\t\t\t\tctx.closePath();\n\t\t\t\tctx.fill();\n\t\t\t}\n\n\t\t\t// Stroke Line Options\n\t\t\tvar globalOptionLineElements = globalDefaults.elements.line;\n\t\t\tctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle;\n\n\t\t\t// IE 9 and 10 do not support line dash\n\t\t\tif (ctx.setLineDash) {\n\t\t\t\tctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n\t\t\t}\n\n\t\t\tctx.lineDashOffset = vm.borderDashOffset || globalOptionLineElements.borderDashOffset;\n\t\t\tctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n\t\t\tctx.lineWidth = vm.borderWidth || globalOptionLineElements.borderWidth;\n\t\t\tctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;\n\n\t\t\t// Stroke Line\n\t\t\tctx.beginPath();\n\t\t\tlastDrawnIndex = -1;\n\n\t\t\tfor (index = 0; index < points.length; ++index) {\n\t\t\t\tcurrent = points[index];\n\t\t\t\tprevious = helpers.previousItem(points, index);\n\t\t\t\tcurrentVM = current._view;\n\n\t\t\t\t// First point moves to it's starting position no matter what\n\t\t\t\tif (index === 0) {\n\t\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tprevious = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n\t\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\t\tif ((lastDrawnIndex !== (index - 1) && !spanGaps) || lastDrawnIndex === -1) {\n\t\t\t\t\t\t\t// There was a gap and this is the first point after the gap\n\t\t\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Line to next point\n\t\t\t\t\t\t\tlineToPoint(previous, current);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tctx.stroke();\n\t\t\tctx.restore();\n\t\t}\n\t});\n};\n\n},{}],37:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers,\n\t\tglobalOpts = Chart.defaults.global,\n\t\tdefaultColor = globalOpts.defaultColor;\n\n\tglobalOpts.elements.point = {\n\t\tradius: 3,\n\t\tpointStyle: 'circle',\n\t\tbackgroundColor: defaultColor,\n\t\tborderWidth: 1,\n\t\tborderColor: defaultColor,\n\t\t// Hover\n\t\thitRadius: 1,\n\t\thoverRadius: 4,\n\t\thoverBorderWidth: 1\n\t};\n\n\tChart.elements.Point = Chart.Element.extend({\n\t\tinRange: function(mouseX, mouseY) {\n\t\t\tvar vm = this._view;\n\t\t\treturn vm ? ((Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2)) < Math.pow(vm.hitRadius + vm.radius, 2)) : false;\n\t\t},\n\t\tinLabelRange: function(mouseX) {\n\t\t\tvar vm = this._view;\n\t\t\treturn vm ? (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hitRadius, 2)) : false;\n\t\t},\n\t\ttooltipPosition: function() {\n\t\t\tvar vm = this._view;\n\t\t\treturn {\n\t\t\t\tx: vm.x,\n\t\t\t\ty: vm.y,\n\t\t\t\tpadding: vm.radius + vm.borderWidth\n\t\t\t};\n\t\t},\n\t\tdraw: function() {\n\t\t\tvar vm = this._view;\n\t\t\tvar ctx = this._chart.ctx;\n\t\t\tvar pointStyle = vm.pointStyle;\n\t\t\tvar radius = vm.radius;\n\t\t\tvar x = vm.x;\n\t\t\tvar y = vm.y;\n\n\t\t\tif (vm.skip) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tctx.strokeStyle = vm.borderColor || defaultColor;\n\t\t\tctx.lineWidth = helpers.getValueOrDefault(vm.borderWidth, globalOpts.elements.point.borderWidth);\n\t\t\tctx.fillStyle = vm.backgroundColor || defaultColor;\n\n\t\t\tChart.canvasHelpers.drawPoint(ctx, pointStyle, radius, x, y);\n\t\t}\n\t});\n};\n\n},{}],38:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar globalOpts = Chart.defaults.global;\n\n\tglobalOpts.elements.rectangle = {\n\t\tbackgroundColor: globalOpts.defaultColor,\n\t\tborderWidth: 0,\n\t\tborderColor: globalOpts.defaultColor,\n\t\tborderSkipped: 'bottom'\n\t};\n\n\tChart.elements.Rectangle = Chart.Element.extend({\n\t\tdraw: function() {\n\t\t\tvar ctx = this._chart.ctx;\n\t\t\tvar vm = this._view;\n\n\t\t\tvar halfWidth = vm.width / 2,\n\t\t\t\tleftX = vm.x - halfWidth,\n\t\t\t\trightX = vm.x + halfWidth,\n\t\t\t\ttop = vm.base - (vm.base - vm.y),\n\t\t\t\thalfStroke = vm.borderWidth / 2;\n\n\t\t\t// Canvas doesn't allow us to stroke inside the width so we can\n\t\t\t// adjust the sizes to fit if we're setting a stroke on the line\n\t\t\tif (vm.borderWidth) {\n\t\t\t\tleftX += halfStroke;\n\t\t\t\trightX -= halfStroke;\n\t\t\t\ttop += halfStroke;\n\t\t\t}\n\n\t\t\tctx.beginPath();\n\t\t\tctx.fillStyle = vm.backgroundColor;\n\t\t\tctx.strokeStyle = vm.borderColor;\n\t\t\tctx.lineWidth = vm.borderWidth;\n\n\t\t\t// Corner points, from bottom-left to bottom-right clockwise\n\t\t\t// | 1 2 |\n\t\t\t// | 0 3 |\n\t\t\tvar corners = [\n\t\t\t\t[leftX, vm.base],\n\t\t\t\t[leftX, top],\n\t\t\t\t[rightX, top],\n\t\t\t\t[rightX, vm.base]\n\t\t\t];\n\n\t\t\t// Find first (starting) corner with fallback to 'bottom'\n\t\t\tvar borders = ['bottom', 'left', 'top', 'right'];\n\t\t\tvar startCorner = borders.indexOf(vm.borderSkipped, 0);\n\t\t\tif (startCorner === -1) {\n\t\t\t\tstartCorner = 0;\n\t\t\t}\n\n\t\t\tfunction cornerAt(index) {\n\t\t\t\treturn corners[(startCorner + index) % 4];\n\t\t\t}\n\n\t\t\t// Draw rectangle from 'startCorner'\n\t\t\tctx.moveTo.apply(ctx, cornerAt(0));\n\t\t\tfor (var i = 1; i < 4; i++) {\n\t\t\t\tctx.lineTo.apply(ctx, cornerAt(i));\n\t\t\t}\n\n\t\t\tctx.fill();\n\t\t\tif (vm.borderWidth) {\n\t\t\t\tctx.stroke();\n\t\t\t}\n\t\t},\n\t\theight: function() {\n\t\t\tvar vm = this._view;\n\t\t\treturn vm.base - vm.y;\n\t\t},\n\t\tinRange: function(mouseX, mouseY) {\n\t\t\tvar vm = this._view;\n\t\t\treturn vm ?\n\t\t\t\t\t(vm.y < vm.base ?\n\t\t\t\t\t\t(mouseX >= vm.x - vm.width / 2 && mouseX <= vm.x + vm.width / 2) && (mouseY >= vm.y && mouseY <= vm.base) :\n\t\t\t\t\t\t(mouseX >= vm.x - vm.width / 2 && mouseX <= vm.x + vm.width / 2) && (mouseY >= vm.base && mouseY <= vm.y)) :\n\t\t\t\t\tfalse;\n\t\t},\n\t\tinLabelRange: function(mouseX) {\n\t\t\tvar vm = this._view;\n\t\t\treturn vm ? (mouseX >= vm.x - vm.width / 2 && mouseX <= vm.x + vm.width / 2) : false;\n\t\t},\n\t\ttooltipPosition: function() {\n\t\t\tvar vm = this._view;\n\t\t\treturn {\n\t\t\t\tx: vm.x,\n\t\t\t\ty: vm.y\n\t\t\t};\n\t\t}\n\t});\n\n};\n\n},{}],39:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\t// Default config for a category scale\n\tvar defaultConfig = {\n\t\tposition: 'bottom'\n\t};\n\n\tvar DatasetScale = Chart.Scale.extend({\n\t\t/**\n\t\t* Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use tose\n\t\t* else fall back to data.labels\n\t\t* @private\n\t\t*/\n\t\tgetLabels: function() {\n\t\t\tvar data = this.chart.data;\n\t\t\treturn (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n\t\t},\n\t\t// Implement this so that\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar labels = me.getLabels();\n\t\t\tme.minIndex = 0;\n\t\t\tme.maxIndex = labels.length - 1;\n\t\t\tvar findIndex;\n\n\t\t\tif (me.options.ticks.min !== undefined) {\n\t\t\t\t// user specified min value\n\t\t\t\tfindIndex = helpers.indexOf(labels, me.options.ticks.min);\n\t\t\t\tme.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n\t\t\t}\n\n\t\t\tif (me.options.ticks.max !== undefined) {\n\t\t\t\t// user specified max value\n\t\t\t\tfindIndex = helpers.indexOf(labels, me.options.ticks.max);\n\t\t\t\tme.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n\t\t\t}\n\n\t\t\tme.min = labels[me.minIndex];\n\t\t\tme.max = labels[me.maxIndex];\n\t\t},\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar labels = me.getLabels();\n\t\t\t// If we are viewing some subset of labels, slice the original array\n\t\t\tme.ticks = (me.minIndex === 0 && me.maxIndex === labels.length - 1) ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n\t\t},\n\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar data = me.chart.data;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tif ((data.xLabels && isHorizontal) || (data.yLabels && !isHorizontal)) {\n\t\t\t\treturn me.getRightValue(data.datasets[datasetIndex].data[index]);\n\t\t\t}\n\t\t\treturn me.ticks[index];\n\t\t},\n\n\t\t// Used to get data value locations.  Value can either be an index or a numerical value\n\t\tgetPixelForValue: function(value, index, datasetIndex, includeOffset) {\n\t\t\tvar me = this;\n\t\t\t// 1 is added because we need the length but we have the indexes\n\t\t\tvar offsetAmt = Math.max((me.maxIndex + 1 - me.minIndex - ((me.options.gridLines.offsetGridLines) ? 0 : 1)), 1);\n\n\t\t\tif (value !== undefined && isNaN(index)) {\n\t\t\t\tvar labels = me.getLabels();\n\t\t\t\tvar idx = labels.indexOf(value);\n\t\t\t\tindex = idx !== -1 ? idx : index;\n\t\t\t}\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\t\tvar valueWidth = innerWidth / offsetAmt;\n\t\t\t\tvar widthOffset = (valueWidth * (index - me.minIndex)) + me.paddingLeft;\n\n\t\t\t\tif (me.options.gridLines.offsetGridLines && includeOffset || me.maxIndex === me.minIndex && includeOffset) {\n\t\t\t\t\twidthOffset += (valueWidth / 2);\n\t\t\t\t}\n\n\t\t\t\treturn me.left + Math.round(widthOffset);\n\t\t\t}\n\t\t\tvar innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n\t\t\tvar valueHeight = innerHeight / offsetAmt;\n\t\t\tvar heightOffset = (valueHeight * (index - me.minIndex)) + me.paddingTop;\n\n\t\t\tif (me.options.gridLines.offsetGridLines && includeOffset) {\n\t\t\t\theightOffset += (valueHeight / 2);\n\t\t\t}\n\n\t\t\treturn me.top + Math.round(heightOffset);\n\t\t},\n\t\tgetPixelForTick: function(index, includeOffset) {\n\t\t\treturn this.getPixelForValue(this.ticks[index], index + this.minIndex, null, includeOffset);\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar value;\n\t\t\tvar offsetAmt = Math.max((me.ticks.length - ((me.options.gridLines.offsetGridLines) ? 0 : 1)), 1);\n\t\t\tvar horz = me.isHorizontal();\n\t\t\tvar innerDimension = horz ? me.width - (me.paddingLeft + me.paddingRight) : me.height - (me.paddingTop + me.paddingBottom);\n\t\t\tvar valueDimension = innerDimension / offsetAmt;\n\n\t\t\tpixel -= horz ? me.left : me.top;\n\n\t\t\tif (me.options.gridLines.offsetGridLines) {\n\t\t\t\tpixel -= (valueDimension / 2);\n\t\t\t}\n\t\t\tpixel -= horz ? me.paddingLeft : me.paddingTop;\n\n\t\t\tif (pixel <= 0) {\n\t\t\t\tvalue = 0;\n\t\t\t} else {\n\t\t\t\tvalue = Math.round(pixel / valueDimension);\n\t\t\t}\n\n\t\t\treturn value;\n\t\t},\n\t\tgetBasePixel: function() {\n\t\t\treturn this.bottom;\n\t\t}\n\t});\n\n\tChart.scaleService.registerScaleType('category', DatasetScale, defaultConfig);\n\n};\n\n},{}],40:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\tvar defaultConfig = {\n\t\tposition: 'left',\n\t\tticks: {\n\t\t\tcallback: function(tickValue, index, ticks) {\n\t\t\t\t// If we have lots of ticks, don't use the ones\n\t\t\t\tvar delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];\n\n\t\t\t\t// If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\t\t\t\tif (Math.abs(delta) > 1) {\n\t\t\t\t\tif (tickValue !== Math.floor(tickValue)) {\n\t\t\t\t\t\t// not an integer\n\t\t\t\t\t\tdelta = tickValue - Math.floor(tickValue);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar logDelta = helpers.log10(Math.abs(delta));\n\t\t\t\tvar tickString = '';\n\n\t\t\t\tif (tickValue !== 0) {\n\t\t\t\t\tvar numDecimal = -1 * Math.floor(logDelta);\n\t\t\t\t\tnumDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\t\t\t\t\ttickString = tickValue.toFixed(numDecimal);\n\t\t\t\t} else {\n\t\t\t\t\ttickString = '0'; // never show decimal places for 0\n\t\t\t\t}\n\n\t\t\t\treturn tickString;\n\t\t\t}\n\t\t}\n\t};\n\n\tvar LinearScale = Chart.LinearScaleBase.extend({\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar chart = me.chart;\n\t\t\tvar data = chart.data;\n\t\t\tvar datasets = data.datasets;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tfunction IDMatches(meta) {\n\t\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t\t}\n\n\t\t\t// First Calculate the range\n\t\t\tme.min = null;\n\t\t\tme.max = null;\n\n\t\t\tif (opts.stacked) {\n\t\t\t\tvar valuesPerType = {};\n\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (valuesPerType[meta.type] === undefined) {\n\t\t\t\t\t\tvaluesPerType[meta.type] = {\n\t\t\t\t\t\t\tpositiveValues: [],\n\t\t\t\t\t\t\tnegativeValues: []\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Store these per type\n\t\t\t\t\tvar positiveValues = valuesPerType[meta.type].positiveValues;\n\t\t\t\t\tvar negativeValues = valuesPerType[meta.type].negativeValues;\n\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tpositiveValues[index] = positiveValues[index] || 0;\n\t\t\t\t\t\t\tnegativeValues[index] = negativeValues[index] || 0;\n\n\t\t\t\t\t\t\tif (opts.relativePoints) {\n\t\t\t\t\t\t\t\tpositiveValues[index] = 100;\n\t\t\t\t\t\t\t} else if (value < 0) {\n\t\t\t\t\t\t\t\tnegativeValues[index] += value;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tpositiveValues[index] += value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\thelpers.each(valuesPerType, function(valuesForType) {\n\t\t\t\t\tvar values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n\t\t\t\t\tvar minVal = helpers.min(values);\n\t\t\t\t\tvar maxVal = helpers.max(values);\n\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\t\tthis.handleTickRangeOptions();\n\t\t},\n\t\tgetTickLimit: function() {\n\t\t\tvar maxTicks;\n\t\t\tvar me = this;\n\t\t\tvar tickOpts = me.options.ticks;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.width / 50));\n\t\t\t} else {\n\t\t\t\t// The factor of 2 used to scale the font size has been experimentally determined.\n\t\t\t\tvar tickFontSize = helpers.getValueOrDefault(tickOpts.fontSize, Chart.defaults.global.defaultFontSize);\n\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.height / (2 * tickFontSize)));\n\t\t\t}\n\n\t\t\treturn maxTicks;\n\t\t},\n\t\t// Called after the ticks are built. We need\n\t\thandleDirectionalChanges: function() {\n\t\t\tif (!this.isHorizontal()) {\n\t\t\t\t// We are in a vertical orientation. The top value is the highest. So reverse the array\n\t\t\t\tthis.ticks.reverse();\n\t\t\t}\n\t\t},\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\t// Utils\n\t\tgetPixelForValue: function(value) {\n\t\t\t// This must be called after fit has been run so that\n\t\t\t// this.left, this.top, this.right, and this.bottom have been defined\n\t\t\tvar me = this;\n\t\t\tvar paddingLeft = me.paddingLeft;\n\t\t\tvar paddingBottom = me.paddingBottom;\n\t\t\tvar start = me.start;\n\n\t\t\tvar rightValue = +me.getRightValue(value);\n\t\t\tvar pixel;\n\t\t\tvar innerDimension;\n\t\t\tvar range = me.end - start;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tinnerDimension = me.width - (paddingLeft + me.paddingRight);\n\t\t\t\tpixel = me.left + (innerDimension / range * (rightValue - start));\n\t\t\t\treturn Math.round(pixel + paddingLeft);\n\t\t\t}\n\t\t\tinnerDimension = me.height - (me.paddingTop + paddingBottom);\n\t\t\tpixel = (me.bottom - paddingBottom) - (innerDimension / range * (rightValue - start));\n\t\t\treturn Math.round(pixel);\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar paddingLeft = me.paddingLeft;\n\t\t\tvar paddingBottom = me.paddingBottom;\n\t\t\tvar innerDimension = isHorizontal ? me.width - (paddingLeft + me.paddingRight) : me.height - (me.paddingTop + paddingBottom);\n\t\t\tvar offset = (isHorizontal ? pixel - me.left - paddingLeft : me.bottom - paddingBottom - pixel) / innerDimension;\n\t\t\treturn me.start + ((me.end - me.start) * offset);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.ticksAsNumbers[index]);\n\t\t}\n\t});\n\tChart.scaleService.registerScaleType('linear', LinearScale, defaultConfig);\n\n};\n\n},{}],41:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers,\n\t\tnoop = helpers.noop;\n\n\tChart.LinearScaleBase = Chart.Scale.extend({\n\t\thandleTickRangeOptions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\n\t\t\t// If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n\t\t\t// do nothing since that would make the chart weird. If the user really wants a weird chart\n\t\t\t// axis, they can manually override it\n\t\t\tif (tickOpts.beginAtZero) {\n\t\t\t\tvar minSign = helpers.sign(me.min);\n\t\t\t\tvar maxSign = helpers.sign(me.max);\n\n\t\t\t\tif (minSign < 0 && maxSign < 0) {\n\t\t\t\t\t// move the top up to 0\n\t\t\t\t\tme.max = 0;\n\t\t\t\t} else if (minSign > 0 && maxSign > 0) {\n\t\t\t\t\t// move the botttom down to 0\n\t\t\t\t\tme.min = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (tickOpts.min !== undefined) {\n\t\t\t\tme.min = tickOpts.min;\n\t\t\t} else if (tickOpts.suggestedMin !== undefined) {\n\t\t\t\tme.min = Math.min(me.min, tickOpts.suggestedMin);\n\t\t\t}\n\n\t\t\tif (tickOpts.max !== undefined) {\n\t\t\t\tme.max = tickOpts.max;\n\t\t\t} else if (tickOpts.suggestedMax !== undefined) {\n\t\t\t\tme.max = Math.max(me.max, tickOpts.suggestedMax);\n\t\t\t}\n\n\t\t\tif (me.min === me.max) {\n\t\t\t\tme.max++;\n\n\t\t\t\tif (!tickOpts.beginAtZero) {\n\t\t\t\t\tme.min--;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tgetTickLimit: noop,\n\t\thandleDirectionalChanges: noop,\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar ticks = me.ticks = [];\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar getValueOrDefault = helpers.getValueOrDefault;\n\n\t\t\t// Figure out what the max number of ticks we can support it is based on the size of\n\t\t\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n\t\t\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t\t\t// the graph\n\n\t\t\tvar maxTicks = me.getTickLimit();\n\n\t\t\t// Make sure we always have at least 2 ticks\n\t\t\tmaxTicks = Math.max(2, maxTicks);\n\n\t\t\t// To get a \"nice\" value for the tick spacing, we will use the appropriately named\n\t\t\t// \"nice number\" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n\t\t\t// for details.\n\n\t\t\tvar spacing;\n\t\t\tvar fixedStepSizeSet = (tickOpts.fixedStepSize && tickOpts.fixedStepSize > 0) || (tickOpts.stepSize && tickOpts.stepSize > 0);\n\t\t\tif (fixedStepSizeSet) {\n\t\t\t\tspacing = getValueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize);\n\t\t\t} else {\n\t\t\t\tvar niceRange = helpers.niceNum(me.max - me.min, false);\n\t\t\t\tspacing = helpers.niceNum(niceRange / (maxTicks - 1), true);\n\t\t\t}\n\t\t\tvar niceMin = Math.floor(me.min / spacing) * spacing;\n\t\t\tvar niceMax = Math.ceil(me.max / spacing) * spacing;\n\t\t\tvar numSpaces = (niceMax - niceMin) / spacing;\n\n\t\t\t// If very close to our rounded value, use it.\n\t\t\tif (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n\t\t\t\tnumSpaces = Math.round(numSpaces);\n\t\t\t} else {\n\t\t\t\tnumSpaces = Math.ceil(numSpaces);\n\t\t\t}\n\n\t\t\t// Put the values into the ticks array\n\t\t\tticks.push(tickOpts.min !== undefined ? tickOpts.min : niceMin);\n\t\t\tfor (var j = 1; j < numSpaces; ++j) {\n\t\t\t\tticks.push(niceMin + (j * spacing));\n\t\t\t}\n\t\t\tticks.push(tickOpts.max !== undefined ? tickOpts.max : niceMax);\n\n\t\t\tme.handleDirectionalChanges();\n\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t\t// range of the scale\n\t\t\tme.max = helpers.max(ticks);\n\t\t\tme.min = helpers.min(ticks);\n\n\t\t\tif (tickOpts.reverse) {\n\t\t\t\tticks.reverse();\n\n\t\t\t\tme.start = me.max;\n\t\t\t\tme.end = me.min;\n\t\t\t} else {\n\t\t\t\tme.start = me.min;\n\t\t\t\tme.end = me.max;\n\t\t\t}\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\t\t\tme.ticksAsNumbers = me.ticks.slice();\n\t\t\tme.zeroLineIndex = me.ticks.indexOf(0);\n\n\t\t\tChart.Scale.prototype.convertTicksToLabels.call(me);\n\t\t}\n\t});\n};\n\n},{}],42:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\tvar defaultConfig = {\n\t\tposition: 'left',\n\n\t\t// label settings\n\t\tticks: {\n\t\t\tcallback: function(value, index, arr) {\n\t\t\t\tvar remain = value / (Math.pow(10, Math.floor(helpers.log10(value))));\n\n\t\t\t\tif (value === 0) {\n\t\t\t\t\treturn '0';\n\t\t\t\t} else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === arr.length - 1) {\n\t\t\t\t\treturn value.toExponential();\n\t\t\t\t}\n\t\t\t\treturn '';\n\t\t\t}\n\t\t}\n\t};\n\n\tvar LogarithmicScale = Chart.Scale.extend({\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar chart = me.chart;\n\t\t\tvar data = chart.data;\n\t\t\tvar datasets = data.datasets;\n\t\t\tvar getValueOrDefault = helpers.getValueOrDefault;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tfunction IDMatches(meta) {\n\t\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t\t}\n\n\t\t\t// Calculate Range\n\t\t\tme.min = null;\n\t\t\tme.max = null;\n\t\t\tme.minNotZero = null;\n\n\t\t\tif (opts.stacked) {\n\t\t\t\tvar valuesPerType = {};\n\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\tif (valuesPerType[meta.type] === undefined) {\n\t\t\t\t\t\t\tvaluesPerType[meta.type] = [];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar values = valuesPerType[meta.type];\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvalues[index] = values[index] || 0;\n\n\t\t\t\t\t\t\tif (opts.relativePoints) {\n\t\t\t\t\t\t\t\tvalues[index] = 100;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// Don't need to split positive and negative since the log scale can't handle a 0 crossing\n\t\t\t\t\t\t\t\tvalues[index] += value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\thelpers.each(valuesPerType, function(valuesForType) {\n\t\t\t\t\tvar minVal = helpers.min(valuesForType);\n\t\t\t\t\tvar maxVal = helpers.max(valuesForType);\n\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n\t\t\t\t\t\t\t\tme.minNotZero = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tme.min = getValueOrDefault(tickOpts.min, me.min);\n\t\t\tme.max = getValueOrDefault(tickOpts.max, me.max);\n\n\t\t\tif (me.min === me.max) {\n\t\t\t\tif (me.min !== 0 && me.min !== null) {\n\t\t\t\t\tme.min = Math.pow(10, Math.floor(helpers.log10(me.min)) - 1);\n\t\t\t\t\tme.max = Math.pow(10, Math.floor(helpers.log10(me.max)) + 1);\n\t\t\t\t} else {\n\t\t\t\t\tme.min = 1;\n\t\t\t\t\tme.max = 10;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar getValueOrDefault = helpers.getValueOrDefault;\n\n\t\t\t// Reset the ticks array. Later on, we will draw a grid line at these positions\n\t\t\t// The array simply contains the numerical value of the spots where ticks will be\n\t\t\tvar ticks = me.ticks = [];\n\n\t\t\t// Figure out what the max number of ticks we can support it is based on the size of\n\t\t\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n\t\t\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t\t\t// the graph\n\n\t\t\tvar tickVal = getValueOrDefault(tickOpts.min, Math.pow(10, Math.floor(helpers.log10(me.min))));\n\n\t\t\twhile (tickVal < me.max) {\n\t\t\t\tticks.push(tickVal);\n\n\t\t\t\tvar exp;\n\t\t\t\tvar significand;\n\n\t\t\t\tif (tickVal === 0) {\n\t\t\t\t\texp = Math.floor(helpers.log10(me.minNotZero));\n\t\t\t\t\tsignificand = Math.round(me.minNotZero / Math.pow(10, exp));\n\t\t\t\t} else {\n\t\t\t\t\texp = Math.floor(helpers.log10(tickVal));\n\t\t\t\t\tsignificand = Math.floor(tickVal / Math.pow(10, exp)) + 1;\n\t\t\t\t}\n\n\t\t\t\tif (significand === 10) {\n\t\t\t\t\tsignificand = 1;\n\t\t\t\t\t++exp;\n\t\t\t\t}\n\n\t\t\t\ttickVal = significand * Math.pow(10, exp);\n\t\t\t}\n\n\t\t\tvar lastTick = getValueOrDefault(tickOpts.max, tickVal);\n\t\t\tticks.push(lastTick);\n\n\t\t\tif (!me.isHorizontal()) {\n\t\t\t\t// We are in a vertical orientation. The top value is the highest. So reverse the array\n\t\t\t\tticks.reverse();\n\t\t\t}\n\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t\t// range of the scale\n\t\t\tme.max = helpers.max(ticks);\n\t\t\tme.min = helpers.min(ticks);\n\n\t\t\tif (tickOpts.reverse) {\n\t\t\t\tticks.reverse();\n\n\t\t\t\tme.start = me.max;\n\t\t\t\tme.end = me.min;\n\t\t\t} else {\n\t\t\t\tme.start = me.min;\n\t\t\t\tme.end = me.max;\n\t\t\t}\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tthis.tickValues = this.ticks.slice();\n\n\t\t\tChart.Scale.prototype.convertTicksToLabels.call(this);\n\t\t},\n\t\t// Get the correct tooltip label\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.tickValues[index]);\n\t\t},\n\t\tgetPixelForValue: function(value) {\n\t\t\tvar me = this;\n\t\t\tvar innerDimension;\n\t\t\tvar pixel;\n\n\t\t\tvar start = me.start;\n\t\t\tvar newVal = +me.getRightValue(value);\n\t\t\tvar range;\n\t\t\tvar paddingTop = me.paddingTop;\n\t\t\tvar paddingBottom = me.paddingBottom;\n\t\t\tvar paddingLeft = me.paddingLeft;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\trange = helpers.log10(me.end) - helpers.log10(start); // todo: if start === 0\n\t\t\t\tif (newVal === 0) {\n\t\t\t\t\tpixel = me.left + paddingLeft;\n\t\t\t\t} else {\n\t\t\t\t\tinnerDimension = me.width - (paddingLeft + me.paddingRight);\n\t\t\t\t\tpixel = me.left + (innerDimension / range * (helpers.log10(newVal) - helpers.log10(start)));\n\t\t\t\t\tpixel += paddingLeft;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Bottom - top since pixels increase downard on a screen\n\t\t\t\tinnerDimension = me.height - (paddingTop + paddingBottom);\n\t\t\t\tif (start === 0 && !tickOpts.reverse) {\n\t\t\t\t\trange = helpers.log10(me.end) - helpers.log10(me.minNotZero);\n\t\t\t\t\tif (newVal === start) {\n\t\t\t\t\t\tpixel = me.bottom - paddingBottom;\n\t\t\t\t\t} else if (newVal === me.minNotZero) {\n\t\t\t\t\t\tpixel = me.bottom - paddingBottom - innerDimension * 0.02;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpixel = me.bottom - paddingBottom - innerDimension * 0.02 - (innerDimension * 0.98/ range * (helpers.log10(newVal)-helpers.log10(me.minNotZero)));\n\t\t\t\t\t}\n\t\t\t\t} else if (me.end === 0 && tickOpts.reverse) {\n\t\t\t\t\trange = helpers.log10(me.start) - helpers.log10(me.minNotZero);\n\t\t\t\t\tif (newVal === me.end) {\n\t\t\t\t\t\tpixel = me.top + paddingTop;\n\t\t\t\t\t} else if (newVal === me.minNotZero) {\n\t\t\t\t\t\tpixel = me.top + paddingTop + innerDimension * 0.02;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpixel = me.top + paddingTop + innerDimension * 0.02 + (innerDimension * 0.98/ range * (helpers.log10(newVal)-helpers.log10(me.minNotZero)));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\trange = helpers.log10(me.end) - helpers.log10(start);\n\t\t\t\t\tinnerDimension = me.height - (paddingTop + paddingBottom);\n\t\t\t\t\tpixel = (me.bottom - paddingBottom) - (innerDimension / range * (helpers.log10(newVal) - helpers.log10(start)));\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn pixel;\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar range = helpers.log10(me.end) - helpers.log10(me.start);\n\t\t\tvar value, innerDimension;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tinnerDimension = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\t\tvalue = me.start * Math.pow(10, (pixel - me.left - me.paddingLeft) * range / innerDimension);\n\t\t\t} else {  // todo: if start === 0\n\t\t\t\tinnerDimension = me.height - (me.paddingTop + me.paddingBottom);\n\t\t\t\tvalue = Math.pow(10, (me.bottom - me.paddingBottom - pixel) * range / innerDimension) / me.start;\n\t\t\t}\n\t\t\treturn value;\n\t\t}\n\t});\n\tChart.scaleService.registerScaleType('logarithmic', LogarithmicScale, defaultConfig);\n\n};\n\n},{}],43:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\tvar globalDefaults = Chart.defaults.global;\n\n\tvar defaultConfig = {\n\t\tdisplay: true,\n\n\t\t// Boolean - Whether to animate scaling the chart from the centre\n\t\tanimate: true,\n\t\tlineArc: false,\n\t\tposition: 'chartArea',\n\n\t\tangleLines: {\n\t\t\tdisplay: true,\n\t\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\t\tlineWidth: 1\n\t\t},\n\n\t\t// label settings\n\t\tticks: {\n\t\t\t// Boolean - Show a backdrop to the scale label\n\t\t\tshowLabelBackdrop: true,\n\n\t\t\t// String - The colour of the label backdrop\n\t\t\tbackdropColor: 'rgba(255,255,255,0.75)',\n\n\t\t\t// Number - The backdrop padding above & below the label in pixels\n\t\t\tbackdropPaddingY: 2,\n\n\t\t\t// Number - The backdrop padding to the side of the label in pixels\n\t\t\tbackdropPaddingX: 2\n\t\t},\n\n\t\tpointLabels: {\n\t\t\t// Number - Point label font size in pixels\n\t\t\tfontSize: 10,\n\n\t\t\t// Function - Used to convert point labels\n\t\t\tcallback: function(label) {\n\t\t\t\treturn label;\n\t\t\t}\n\t\t}\n\t};\n\n\tvar LinearRadialScale = Chart.LinearScaleBase.extend({\n\t\tgetValueCount: function() {\n\t\t\treturn this.chart.data.labels.length;\n\t\t},\n\t\tsetDimensions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\t// Set the unconstrained dimension before label rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.height = me.maxHeight;\n\t\t\tme.xCenter = Math.round(me.width / 2);\n\t\t\tme.yCenter = Math.round(me.height / 2);\n\n\t\t\tvar minSize = helpers.min([me.height, me.width]);\n\t\t\tvar tickFontSize = helpers.getValueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\tme.drawingArea = opts.display ? (minSize / 2) - (tickFontSize / 2 + tickOpts.backdropPaddingY) : (minSize / 2);\n\t\t},\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tme.min = null;\n\t\t\tme.max = null;\n\n\n\t\t\thelpers.each(chart.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\n\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\t\tme.handleTickRangeOptions();\n\t\t},\n\t\tgetTickLimit: function() {\n\t\t\tvar tickOpts = this.options.ticks;\n\t\t\tvar tickFontSize = helpers.getValueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\treturn Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(this.drawingArea / (1.5 * tickFontSize)));\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\t\t\tChart.LinearScaleBase.prototype.convertTicksToLabels.call(me);\n\n\t\t\t// Point labels\n\t\t\tme.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n\t\t},\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\tfit: function() {\n\t\t\t/*\n\t\t\t * Right, this is really confusing and there is a lot of maths going on here\n\t\t\t * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n\t\t\t *\n\t\t\t * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n\t\t\t *\n\t\t\t * Solution:\n\t\t\t *\n\t\t\t * We assume the radius of the polygon is half the size of the canvas at first\n\t\t\t * at each index we check if the text overlaps.\n\t\t\t *\n\t\t\t * Where it does, we store that angle and that index.\n\t\t\t *\n\t\t\t * After finding the largest index and angle we calculate how much we need to remove\n\t\t\t * from the shape radius to move the point inwards by that x.\n\t\t\t *\n\t\t\t * We average the left and right distances to get the maximum shape radius that can fit in the box\n\t\t\t * along with labels.\n\t\t\t *\n\t\t\t * Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n\t\t\t * on each side, removing that from the size, halving it and adding the left x protrusion width.\n\t\t\t *\n\t\t\t * This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n\t\t\t * and position it in the most space efficient manner\n\t\t\t *\n\t\t\t * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\t\t\t */\n\n\t\t\tvar pointLabels = this.options.pointLabels;\n\t\t\tvar pointLabelFontSize = helpers.getValueOrDefault(pointLabels.fontSize, globalDefaults.defaultFontSize);\n\t\t\tvar pointLabeFontStyle = helpers.getValueOrDefault(pointLabels.fontStyle, globalDefaults.defaultFontStyle);\n\t\t\tvar pointLabeFontFamily = helpers.getValueOrDefault(pointLabels.fontFamily, globalDefaults.defaultFontFamily);\n\t\t\tvar pointLabeFont = helpers.fontString(pointLabelFontSize, pointLabeFontStyle, pointLabeFontFamily);\n\n\t\t\t// Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n\t\t\t// Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\t\t\tvar largestPossibleRadius = helpers.min([(this.height / 2 - pointLabelFontSize - 5), this.width / 2]),\n\t\t\t\tpointPosition,\n\t\t\t\ti,\n\t\t\t\ttextWidth,\n\t\t\t\thalfTextWidth,\n\t\t\t\tfurthestRight = this.width,\n\t\t\t\tfurthestRightIndex,\n\t\t\t\tfurthestRightAngle,\n\t\t\t\tfurthestLeft = 0,\n\t\t\t\tfurthestLeftIndex,\n\t\t\t\tfurthestLeftAngle,\n\t\t\t\txProtrusionLeft,\n\t\t\t\txProtrusionRight,\n\t\t\t\tradiusReductionRight,\n\t\t\t\tradiusReductionLeft;\n\t\t\tthis.ctx.font = pointLabeFont;\n\n\t\t\tfor (i = 0; i < this.getValueCount(); i++) {\n\t\t\t\t// 5px to space the text slightly out - similar to what we do in the draw function.\n\t\t\t\tpointPosition = this.getPointPosition(i, largestPossibleRadius);\n\t\t\t\ttextWidth = this.ctx.measureText(this.pointLabels[i] ? this.pointLabels[i] : '').width + 5;\n\n\t\t\t\t// Add quarter circle to make degree 0 mean top of circle\n\t\t\t\tvar angleRadians = this.getIndexAngle(i) + (Math.PI / 2);\n\t\t\t\tvar angle = (angleRadians * 360 / (2 * Math.PI)) % 360;\n\n\t\t\t\tif (angle === 0 || angle === 180) {\n\t\t\t\t\t// At angle 0 and 180, we're at exactly the top/bottom\n\t\t\t\t\t// of the radar chart, so text will be aligned centrally, so we'll half it and compare\n\t\t\t\t\t// w/left and right text sizes\n\t\t\t\t\thalfTextWidth = textWidth / 2;\n\t\t\t\t\tif (pointPosition.x + halfTextWidth > furthestRight) {\n\t\t\t\t\t\tfurthestRight = pointPosition.x + halfTextWidth;\n\t\t\t\t\t\tfurthestRightIndex = i;\n\t\t\t\t\t}\n\t\t\t\t\tif (pointPosition.x - halfTextWidth < furthestLeft) {\n\t\t\t\t\t\tfurthestLeft = pointPosition.x - halfTextWidth;\n\t\t\t\t\t\tfurthestLeftIndex = i;\n\t\t\t\t\t}\n\t\t\t\t} else if (angle < 180) {\n\t\t\t\t\t// Less than half the values means we'll left align the text\n\t\t\t\t\tif (pointPosition.x + textWidth > furthestRight) {\n\t\t\t\t\t\tfurthestRight = pointPosition.x + textWidth;\n\t\t\t\t\t\tfurthestRightIndex = i;\n\t\t\t\t\t}\n\t\t\t\t// More than half the values means we'll right align the text\n\t\t\t\t} else if (pointPosition.x - textWidth < furthestLeft) {\n\t\t\t\t\tfurthestLeft = pointPosition.x - textWidth;\n\t\t\t\t\tfurthestLeftIndex = i;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\txProtrusionLeft = furthestLeft;\n\t\t\txProtrusionRight = Math.ceil(furthestRight - this.width);\n\n\t\t\tfurthestRightAngle = this.getIndexAngle(furthestRightIndex);\n\t\t\tfurthestLeftAngle = this.getIndexAngle(furthestLeftIndex);\n\n\t\t\tradiusReductionRight = xProtrusionRight / Math.sin(furthestRightAngle + Math.PI / 2);\n\t\t\tradiusReductionLeft = xProtrusionLeft / Math.sin(furthestLeftAngle + Math.PI / 2);\n\n\t\t\t// Ensure we actually need to reduce the size of the chart\n\t\t\tradiusReductionRight = (helpers.isNumber(radiusReductionRight)) ? radiusReductionRight : 0;\n\t\t\tradiusReductionLeft = (helpers.isNumber(radiusReductionLeft)) ? radiusReductionLeft : 0;\n\n\t\t\tthis.drawingArea = Math.round(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2);\n\t\t\tthis.setCenterPoint(radiusReductionLeft, radiusReductionRight);\n\t\t},\n\t\tsetCenterPoint: function(leftMovement, rightMovement) {\n\t\t\tvar me = this;\n\t\t\tvar maxRight = me.width - rightMovement - me.drawingArea,\n\t\t\t\tmaxLeft = leftMovement + me.drawingArea;\n\n\t\t\tme.xCenter = Math.round(((maxLeft + maxRight) / 2) + me.left);\n\t\t\t// Always vertically in the centre as the text height doesn't change\n\t\t\tme.yCenter = Math.round((me.height / 2) + me.top);\n\t\t},\n\n\t\tgetIndexAngle: function(index) {\n\t\t\tvar angleMultiplier = (Math.PI * 2) / this.getValueCount();\n\t\t\tvar startAngle = this.chart.options && this.chart.options.startAngle ?\n\t\t\t\tthis.chart.options.startAngle :\n\t\t\t\t0;\n\n\t\t\tvar startAngleRadians = startAngle * Math.PI * 2 / 360;\n\n\t\t\t// Start from the top instead of right, so remove a quarter of the circle\n\t\t\treturn index * angleMultiplier - (Math.PI / 2) + startAngleRadians;\n\t\t},\n\t\tgetDistanceFromCenterForValue: function(value) {\n\t\t\tvar me = this;\n\n\t\t\tif (value === null) {\n\t\t\t\treturn 0; // null always in center\n\t\t\t}\n\n\t\t\t// Take into account half font size + the yPadding of the top value\n\t\t\tvar scalingFactor = me.drawingArea / (me.max - me.min);\n\t\t\tif (me.options.reverse) {\n\t\t\t\treturn (me.max - value) * scalingFactor;\n\t\t\t}\n\t\t\treturn (value - me.min) * scalingFactor;\n\t\t},\n\t\tgetPointPosition: function(index, distanceFromCenter) {\n\t\t\tvar me = this;\n\t\t\tvar thisAngle = me.getIndexAngle(index);\n\t\t\treturn {\n\t\t\t\tx: Math.round(Math.cos(thisAngle) * distanceFromCenter) + me.xCenter,\n\t\t\t\ty: Math.round(Math.sin(thisAngle) * distanceFromCenter) + me.yCenter\n\t\t\t};\n\t\t},\n\t\tgetPointPositionForValue: function(index, value) {\n\t\t\treturn this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n\t\t},\n\n\t\tgetBasePosition: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\n\t\t\treturn me.getPointPositionForValue(0,\n\t\t\t\tme.beginAtZero? 0:\n\t\t\t\tmin < 0 && max < 0? max :\n\t\t\t\tmin > 0 && max > 0? min :\n\t\t\t\t0);\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar gridLineOpts = opts.gridLines;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar angleLineOpts = opts.angleLines;\n\t\t\tvar pointLabelOpts = opts.pointLabels;\n\t\t\tvar getValueOrDefault = helpers.getValueOrDefault;\n\n\t\t\tif (opts.display) {\n\t\t\t\tvar ctx = me.ctx;\n\n\t\t\t\t// Tick Font\n\t\t\t\tvar tickFontSize = getValueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\t\tvar tickFontStyle = getValueOrDefault(tickOpts.fontStyle, globalDefaults.defaultFontStyle);\n\t\t\t\tvar tickFontFamily = getValueOrDefault(tickOpts.fontFamily, globalDefaults.defaultFontFamily);\n\t\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\n\n\t\t\t\thelpers.each(me.ticks, function(label, index) {\n\t\t\t\t\t// Don't draw a centre value (if it is minimum)\n\t\t\t\t\tif (index > 0 || opts.reverse) {\n\t\t\t\t\t\tvar yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]);\n\t\t\t\t\t\tvar yHeight = me.yCenter - yCenterOffset;\n\n\t\t\t\t\t\t// Draw circular lines around the scale\n\t\t\t\t\t\tif (gridLineOpts.display && index !== 0) {\n\t\t\t\t\t\t\tctx.strokeStyle = helpers.getValueAtIndexOrDefault(gridLineOpts.color, index - 1);\n\t\t\t\t\t\t\tctx.lineWidth = helpers.getValueAtIndexOrDefault(gridLineOpts.lineWidth, index - 1);\n\n\t\t\t\t\t\t\tif (opts.lineArc) {\n\t\t\t\t\t\t\t\t// Draw circular arcs between the points\n\t\t\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\t\t\tctx.arc(me.xCenter, me.yCenter, yCenterOffset, 0, Math.PI * 2);\n\t\t\t\t\t\t\t\tctx.closePath();\n\t\t\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// Draw straight lines connecting each index\n\t\t\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\t\t\tfor (var i = 0; i < me.getValueCount(); i++) {\n\t\t\t\t\t\t\t\t\tvar pointPosition = me.getPointPosition(i, yCenterOffset);\n\t\t\t\t\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\t\t\t\t\tctx.moveTo(pointPosition.x, pointPosition.y);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tctx.lineTo(pointPosition.x, pointPosition.y);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tctx.closePath();\n\t\t\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (tickOpts.display) {\n\t\t\t\t\t\t\tvar tickFontColor = getValueOrDefault(tickOpts.fontColor, globalDefaults.defaultFontColor);\n\t\t\t\t\t\t\tctx.font = tickLabelFont;\n\n\t\t\t\t\t\t\tif (tickOpts.showLabelBackdrop) {\n\t\t\t\t\t\t\t\tvar labelWidth = ctx.measureText(label).width;\n\t\t\t\t\t\t\t\tctx.fillStyle = tickOpts.backdropColor;\n\t\t\t\t\t\t\t\tctx.fillRect(\n\t\t\t\t\t\t\t\t\tme.xCenter - labelWidth / 2 - tickOpts.backdropPaddingX,\n\t\t\t\t\t\t\t\t\tyHeight - tickFontSize / 2 - tickOpts.backdropPaddingY,\n\t\t\t\t\t\t\t\t\tlabelWidth + tickOpts.backdropPaddingX * 2,\n\t\t\t\t\t\t\t\t\ttickFontSize + tickOpts.backdropPaddingY * 2\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t\t\tctx.textBaseline = 'middle';\n\t\t\t\t\t\t\tctx.fillStyle = tickFontColor;\n\t\t\t\t\t\t\tctx.fillText(label, me.xCenter, yHeight);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (!opts.lineArc) {\n\t\t\t\t\tctx.lineWidth = angleLineOpts.lineWidth;\n\t\t\t\t\tctx.strokeStyle = angleLineOpts.color;\n\n\t\t\t\t\tvar outerDistance = me.getDistanceFromCenterForValue(opts.reverse ? me.min : me.max);\n\n\t\t\t\t\t// Point Label Font\n\t\t\t\t\tvar pointLabelFontSize = getValueOrDefault(pointLabelOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\t\t\tvar pointLabeFontStyle = getValueOrDefault(pointLabelOpts.fontStyle, globalDefaults.defaultFontStyle);\n\t\t\t\t\tvar pointLabeFontFamily = getValueOrDefault(pointLabelOpts.fontFamily, globalDefaults.defaultFontFamily);\n\t\t\t\t\tvar pointLabeFont = helpers.fontString(pointLabelFontSize, pointLabeFontStyle, pointLabeFontFamily);\n\n\t\t\t\t\tfor (var i = me.getValueCount() - 1; i >= 0; i--) {\n\t\t\t\t\t\tif (angleLineOpts.display) {\n\t\t\t\t\t\t\tvar outerPosition = me.getPointPosition(i, outerDistance);\n\t\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\t\tctx.moveTo(me.xCenter, me.yCenter);\n\t\t\t\t\t\t\tctx.lineTo(outerPosition.x, outerPosition.y);\n\t\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t\t\tctx.closePath();\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Extra 3px out for some label spacing\n\t\t\t\t\t\tvar pointLabelPosition = me.getPointPosition(i, outerDistance + 5);\n\n\t\t\t\t\t\t// Keep this in loop since we may support array properties here\n\t\t\t\t\t\tvar pointLabelFontColor = getValueOrDefault(pointLabelOpts.fontColor, globalDefaults.defaultFontColor);\n\t\t\t\t\t\tctx.font = pointLabeFont;\n\t\t\t\t\t\tctx.fillStyle = pointLabelFontColor;\n\n\t\t\t\t\t\tvar pointLabels = me.pointLabels;\n\n\t\t\t\t\t\t// Add quarter circle to make degree 0 mean top of circle\n\t\t\t\t\t\tvar angleRadians = this.getIndexAngle(i) + (Math.PI / 2);\n\t\t\t\t\t\tvar angle = (angleRadians * 360 / (2 * Math.PI)) % 360;\n\n\t\t\t\t\t\tif (angle === 0 || angle === 180) {\n\t\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t\t} else if (angle < 180) {\n\t\t\t\t\t\t\tctx.textAlign = 'left';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tctx.textAlign = 'right';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Set the correct text baseline based on outer positioning\n\t\t\t\t\t\tif (angle === 90 || angle === 270) {\n\t\t\t\t\t\t\tctx.textBaseline = 'middle';\n\t\t\t\t\t\t} else if (angle > 270 || angle < 90) {\n\t\t\t\t\t\t\tctx.textBaseline = 'bottom';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tctx.textBaseline = 'top';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tctx.fillText(pointLabels[i] ? pointLabels[i] : '', pointLabelPosition.x, pointLabelPosition.y);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\tChart.scaleService.registerScaleType('radialLinear', LinearRadialScale, defaultConfig);\n\n};\n\n},{}],44:[function(require,module,exports){\n/* global window: false */\n'use strict';\n\nvar moment = require(1);\nmoment = typeof(moment) === 'function' ? moment : window.moment;\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\tvar time = {\n\t\tunits: [{\n\t\t\tname: 'millisecond',\n\t\t\tsteps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n\t\t}, {\n\t\t\tname: 'second',\n\t\t\tsteps: [1, 2, 5, 10, 30]\n\t\t}, {\n\t\t\tname: 'minute',\n\t\t\tsteps: [1, 2, 5, 10, 30]\n\t\t}, {\n\t\t\tname: 'hour',\n\t\t\tsteps: [1, 2, 3, 6, 12]\n\t\t}, {\n\t\t\tname: 'day',\n\t\t\tsteps: [1, 2, 5]\n\t\t}, {\n\t\t\tname: 'week',\n\t\t\tmaxStep: 4\n\t\t}, {\n\t\t\tname: 'month',\n\t\t\tmaxStep: 3\n\t\t}, {\n\t\t\tname: 'quarter',\n\t\t\tmaxStep: 4\n\t\t}, {\n\t\t\tname: 'year',\n\t\t\tmaxStep: false\n\t\t}]\n\t};\n\n\tvar defaultConfig = {\n\t\tposition: 'bottom',\n\n\t\ttime: {\n\t\t\tparser: false, // false == a pattern string from http://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n\t\t\tformat: false, // DEPRECATED false == date objects, moment object, callback or a pattern string from http://momentjs.com/docs/#/parsing/string-format/\n\t\t\tunit: false, // false == automatic or override with week, month, year, etc.\n\t\t\tround: false, // none, or override with week, month, year, etc.\n\t\t\tdisplayFormat: false, // DEPRECATED\n\t\t\tisoWeekday: false, // override week start day - see http://momentjs.com/docs/#/get-set/iso-weekday/\n\t\t\tminUnit: 'millisecond',\n\n\t\t\t// defaults to unit's corresponding unitFormat below or override using pattern string from http://momentjs.com/docs/#/displaying/format/\n\t\t\tdisplayFormats: {\n\t\t\t\tmillisecond: 'h:mm:ss.SSS a', // 11:20:01.123 AM,\n\t\t\t\tsecond: 'h:mm:ss a', // 11:20:01 AM\n\t\t\t\tminute: 'h:mm:ss a', // 11:20:01 AM\n\t\t\t\thour: 'MMM D, hA', // Sept 4, 5PM\n\t\t\t\tday: 'll', // Sep 4 2015\n\t\t\t\tweek: 'll', // Week 46, or maybe \"[W]WW - YYYY\" ?\n\t\t\t\tmonth: 'MMM YYYY', // Sept 2015\n\t\t\t\tquarter: '[Q]Q - YYYY', // Q3\n\t\t\t\tyear: 'YYYY' // 2015\n\t\t\t}\n\t\t},\n\t\tticks: {\n\t\t\tautoSkip: false\n\t\t}\n\t};\n\n\tvar TimeScale = Chart.Scale.extend({\n\t\tinitialize: function() {\n\t\t\tif (!moment) {\n\t\t\t\tthrow new Error('Chart.js - Moment.js could not be found! You must include it before Chart.js to use the time scale. Download at https://momentjs.com');\n\t\t\t}\n\n\t\t\tChart.Scale.prototype.initialize.call(this);\n\t\t},\n\t\tgetLabelMoment: function(datasetIndex, index) {\n\t\t\tif (datasetIndex === null || index === null) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (typeof this.labelMoments[datasetIndex] !== 'undefined') {\n\t\t\t\treturn this.labelMoments[datasetIndex][index];\n\t\t\t}\n\n\t\t\treturn null;\n\t\t},\n\t\tgetLabelDiff: function(datasetIndex, index) {\n\t\t\tvar me = this;\n\t\t\tif (datasetIndex === null || index === null) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (me.labelDiffs === undefined) {\n\t\t\t\tme.buildLabelDiffs();\n\t\t\t}\n\n\t\t\tif (typeof me.labelDiffs[datasetIndex] !== 'undefined') {\n\t\t\t\treturn me.labelDiffs[datasetIndex][index];\n\t\t\t}\n\n\t\t\treturn null;\n\t\t},\n\t\tgetMomentStartOf: function(tick) {\n\t\t\tvar me = this;\n\t\t\tif (me.options.time.unit === 'week' && me.options.time.isoWeekday !== false) {\n\t\t\t\treturn tick.clone().startOf('isoWeek').isoWeekday(me.options.time.isoWeekday);\n\t\t\t}\n\t\t\treturn tick.clone().startOf(me.tickUnit);\n\t\t},\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tme.labelMoments = [];\n\n\t\t\t// Only parse these once. If the dataset does not have data as x,y pairs, we will use\n\t\t\t// these\n\t\t\tvar scaleLabelMoments = [];\n\t\t\tif (me.chart.data.labels && me.chart.data.labels.length > 0) {\n\t\t\t\thelpers.each(me.chart.data.labels, function(label) {\n\t\t\t\t\tvar labelMoment = me.parseTime(label);\n\n\t\t\t\t\tif (labelMoment.isValid()) {\n\t\t\t\t\t\tif (me.options.time.round) {\n\t\t\t\t\t\t\tlabelMoment.startOf(me.options.time.round);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tscaleLabelMoments.push(labelMoment);\n\t\t\t\t\t}\n\t\t\t\t}, me);\n\n\t\t\t\tme.firstTick = moment.min.call(me, scaleLabelMoments);\n\t\t\t\tme.lastTick = moment.max.call(me, scaleLabelMoments);\n\t\t\t} else {\n\t\t\t\tme.firstTick = null;\n\t\t\t\tme.lastTick = null;\n\t\t\t}\n\n\t\t\thelpers.each(me.chart.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar momentsForDataset = [];\n\t\t\t\tvar datasetVisible = me.chart.isDatasetVisible(datasetIndex);\n\n\t\t\t\tif (typeof dataset.data[0] === 'object' && dataset.data[0] !== null) {\n\t\t\t\t\thelpers.each(dataset.data, function(value) {\n\t\t\t\t\t\tvar labelMoment = me.parseTime(me.getRightValue(value));\n\n\t\t\t\t\t\tif (labelMoment.isValid()) {\n\t\t\t\t\t\t\tif (me.options.time.round) {\n\t\t\t\t\t\t\t\tlabelMoment.startOf(me.options.time.round);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tmomentsForDataset.push(labelMoment);\n\n\t\t\t\t\t\t\tif (datasetVisible) {\n\t\t\t\t\t\t\t\t// May have gone outside the scale ranges, make sure we keep the first and last ticks updated\n\t\t\t\t\t\t\t\tme.firstTick = me.firstTick !== null ? moment.min(me.firstTick, labelMoment) : labelMoment;\n\t\t\t\t\t\t\t\tme.lastTick = me.lastTick !== null ? moment.max(me.lastTick, labelMoment) : labelMoment;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}, me);\n\t\t\t\t} else {\n\t\t\t\t\t// We have no labels. Use the ones from the scale\n\t\t\t\t\tmomentsForDataset = scaleLabelMoments;\n\t\t\t\t}\n\n\t\t\t\tme.labelMoments.push(momentsForDataset);\n\t\t\t}, me);\n\n\t\t\t// Set these after we've done all the data\n\t\t\tif (me.options.time.min) {\n\t\t\t\tme.firstTick = me.parseTime(me.options.time.min);\n\t\t\t}\n\n\t\t\tif (me.options.time.max) {\n\t\t\t\tme.lastTick = me.parseTime(me.options.time.max);\n\t\t\t}\n\n\t\t\t// We will modify these, so clone for later\n\t\t\tme.firstTick = (me.firstTick || moment()).clone();\n\t\t\tme.lastTick = (me.lastTick || moment()).clone();\n\t\t},\n\t\tbuildLabelDiffs: function() {\n\t\t\tvar me = this;\n\t\t\tme.labelDiffs = [];\n\t\t\tvar scaleLabelDiffs = [];\n\t\t\t// Parse common labels once\n\t\t\tif (me.chart.data.labels && me.chart.data.labels.length > 0) {\n\t\t\t\thelpers.each(me.chart.data.labels, function(label) {\n\t\t\t\t\tvar labelMoment = me.parseTime(label);\n\n\t\t\t\t\tif (labelMoment.isValid()) {\n\t\t\t\t\t\tif (me.options.time.round) {\n\t\t\t\t\t\t\tlabelMoment.startOf(me.options.time.round);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tscaleLabelDiffs.push(labelMoment.diff(me.firstTick, me.tickUnit, true));\n\t\t\t\t\t}\n\t\t\t\t}, me);\n\t\t\t}\n\n\t\t\thelpers.each(me.chart.data.datasets, function(dataset) {\n\t\t\t\tvar diffsForDataset = [];\n\n\t\t\t\tif (typeof dataset.data[0] === 'object' && dataset.data[0] !== null) {\n\t\t\t\t\thelpers.each(dataset.data, function(value) {\n\t\t\t\t\t\tvar labelMoment = me.parseTime(me.getRightValue(value));\n\n\t\t\t\t\t\tif (labelMoment.isValid()) {\n\t\t\t\t\t\t\tif (me.options.time.round) {\n\t\t\t\t\t\t\t\tlabelMoment.startOf(me.options.time.round);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdiffsForDataset.push(labelMoment.diff(me.firstTick, me.tickUnit, true));\n\t\t\t\t\t\t}\n\t\t\t\t\t}, me);\n\t\t\t\t} else {\n\t\t\t\t\t// We have no labels. Use common ones\n\t\t\t\t\tdiffsForDataset = scaleLabelDiffs;\n\t\t\t\t}\n\n\t\t\t\tme.labelDiffs.push(diffsForDataset);\n\t\t\t}, me);\n\t\t},\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\n\t\t\tme.ctx.save();\n\t\t\tvar tickFontSize = helpers.getValueOrDefault(me.options.ticks.fontSize, Chart.defaults.global.defaultFontSize);\n\t\t\tvar tickFontStyle = helpers.getValueOrDefault(me.options.ticks.fontStyle, Chart.defaults.global.defaultFontStyle);\n\t\t\tvar tickFontFamily = helpers.getValueOrDefault(me.options.ticks.fontFamily, Chart.defaults.global.defaultFontFamily);\n\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\n\t\t\tme.ctx.font = tickLabelFont;\n\n\t\t\tme.ticks = [];\n\t\t\tme.unitScale = 1; // How much we scale the unit by, ie 2 means 2x unit per step\n\t\t\tme.scaleSizeInUnits = 0; // How large the scale is in the base unit (seconds, minutes, etc)\n\n\t\t\t// Set unit override if applicable\n\t\t\tif (me.options.time.unit) {\n\t\t\t\tme.tickUnit = me.options.time.unit || 'day';\n\t\t\t\tme.displayFormat = me.options.time.displayFormats[me.tickUnit];\n\t\t\t\tme.scaleSizeInUnits = me.lastTick.diff(me.firstTick, me.tickUnit, true);\n\t\t\t\tme.unitScale = helpers.getValueOrDefault(me.options.time.unitStepSize, 1);\n\t\t\t} else {\n\t\t\t\t// Determine the smallest needed unit of the time\n\t\t\t\tvar innerWidth = me.isHorizontal() ? me.width - (me.paddingLeft + me.paddingRight) : me.height - (me.paddingTop + me.paddingBottom);\n\n\t\t\t\t// Crude approximation of what the label length might be\n\t\t\t\tvar tempFirstLabel = me.tickFormatFunction(me.firstTick, 0, []);\n\t\t\t\tvar tickLabelWidth = me.ctx.measureText(tempFirstLabel).width;\n\t\t\t\tvar cosRotation = Math.cos(helpers.toRadians(me.options.ticks.maxRotation));\n\t\t\t\tvar sinRotation = Math.sin(helpers.toRadians(me.options.ticks.maxRotation));\n\t\t\t\ttickLabelWidth = (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation);\n\t\t\t\tvar labelCapacity = innerWidth / (tickLabelWidth);\n\n\t\t\t\t// Start as small as possible\n\t\t\t\tme.tickUnit = me.options.time.minUnit;\n\t\t\t\tme.scaleSizeInUnits = me.lastTick.diff(me.firstTick, me.tickUnit, true);\n\t\t\t\tme.displayFormat = me.options.time.displayFormats[me.tickUnit];\n\n\t\t\t\tvar unitDefinitionIndex = 0;\n\t\t\t\tvar unitDefinition = time.units[unitDefinitionIndex];\n\n\t\t\t\t// While we aren't ideal and we don't have units left\n\t\t\t\twhile (unitDefinitionIndex < time.units.length) {\n\t\t\t\t\t// Can we scale this unit. If `false` we can scale infinitely\n\t\t\t\t\tme.unitScale = 1;\n\n\t\t\t\t\tif (helpers.isArray(unitDefinition.steps) && Math.ceil(me.scaleSizeInUnits / labelCapacity) < helpers.max(unitDefinition.steps)) {\n\t\t\t\t\t\t// Use one of the prefedined steps\n\t\t\t\t\t\tfor (var idx = 0; idx < unitDefinition.steps.length; ++idx) {\n\t\t\t\t\t\t\tif (unitDefinition.steps[idx] >= Math.ceil(me.scaleSizeInUnits / labelCapacity)) {\n\t\t\t\t\t\t\t\tme.unitScale = helpers.getValueOrDefault(me.options.time.unitStepSize, unitDefinition.steps[idx]);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if ((unitDefinition.maxStep === false) || (Math.ceil(me.scaleSizeInUnits / labelCapacity) < unitDefinition.maxStep)) {\n\t\t\t\t\t\t// We have a max step. Scale this unit\n\t\t\t\t\t\tme.unitScale = helpers.getValueOrDefault(me.options.time.unitStepSize, Math.ceil(me.scaleSizeInUnits / labelCapacity));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Move to the next unit up\n\t\t\t\t\t\t++unitDefinitionIndex;\n\t\t\t\t\t\tunitDefinition = time.units[unitDefinitionIndex];\n\n\t\t\t\t\t\tme.tickUnit = unitDefinition.name;\n\t\t\t\t\t\tvar leadingUnitBuffer = me.firstTick.diff(me.getMomentStartOf(me.firstTick), me.tickUnit, true);\n\t\t\t\t\t\tvar trailingUnitBuffer = me.getMomentStartOf(me.lastTick.clone().add(1, me.tickUnit)).diff(me.lastTick, me.tickUnit, true);\n\t\t\t\t\t\tme.scaleSizeInUnits = me.lastTick.diff(me.firstTick, me.tickUnit, true) + leadingUnitBuffer + trailingUnitBuffer;\n\t\t\t\t\t\tme.displayFormat = me.options.time.displayFormats[unitDefinition.name];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar roundedStart;\n\n\t\t\t// Only round the first tick if we have no hard minimum\n\t\t\tif (!me.options.time.min) {\n\t\t\t\tme.firstTick = me.getMomentStartOf(me.firstTick);\n\t\t\t\troundedStart = me.firstTick;\n\t\t\t} else {\n\t\t\t\troundedStart = me.getMomentStartOf(me.firstTick);\n\t\t\t}\n\n\t\t\t// Only round the last tick if we have no hard maximum\n\t\t\tif (!me.options.time.max) {\n\t\t\t\tvar roundedEnd = me.getMomentStartOf(me.lastTick);\n\t\t\t\tvar delta = roundedEnd.diff(me.lastTick, me.tickUnit, true);\n\t\t\t\tif (delta < 0) {\n\t\t\t\t\t// Do not use end of because we need me to be in the next time unit\n\t\t\t\t\tme.lastTick = me.getMomentStartOf(me.lastTick.add(1, me.tickUnit));\n\t\t\t\t} else if (delta >= 0) {\n\t\t\t\t\tme.lastTick = roundedEnd;\n\t\t\t\t}\n\n\t\t\t\tme.scaleSizeInUnits = me.lastTick.diff(me.firstTick, me.tickUnit, true);\n\t\t\t}\n\n\t\t\t// Tick displayFormat override\n\t\t\tif (me.options.time.displayFormat) {\n\t\t\t\tme.displayFormat = me.options.time.displayFormat;\n\t\t\t}\n\n\t\t\t// first tick. will have been rounded correctly if options.time.min is not specified\n\t\t\tme.ticks.push(me.firstTick.clone());\n\n\t\t\t// For every unit in between the first and last moment, create a moment and add it to the ticks tick\n\t\t\tfor (var i = 1; i <= me.scaleSizeInUnits; ++i) {\n\t\t\t\tvar newTick = roundedStart.clone().add(i, me.tickUnit);\n\n\t\t\t\t// Are we greater than the max time\n\t\t\t\tif (me.options.time.max && newTick.diff(me.lastTick, me.tickUnit, true) >= 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (i % me.unitScale === 0) {\n\t\t\t\t\tme.ticks.push(newTick);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Always show the right tick\n\t\t\tvar diff = me.ticks[me.ticks.length - 1].diff(me.lastTick, me.tickUnit);\n\t\t\tif (diff !== 0 || me.scaleSizeInUnits === 0) {\n\t\t\t\t// this is a weird case. If the <max> option is the same as the end option, we can't just diff the times because the tick was created from the roundedStart\n\t\t\t\t// but the last tick was not rounded.\n\t\t\t\tif (me.options.time.max) {\n\t\t\t\t\tme.ticks.push(me.lastTick.clone());\n\t\t\t\t\tme.scaleSizeInUnits = me.lastTick.diff(me.ticks[0], me.tickUnit, true);\n\t\t\t\t} else {\n\t\t\t\t\tme.ticks.push(me.lastTick.clone());\n\t\t\t\t\tme.scaleSizeInUnits = me.lastTick.diff(me.firstTick, me.tickUnit, true);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.ctx.restore();\n\n\t\t\t// Invalidate label diffs cache\n\t\t\tme.labelDiffs = undefined;\n\t\t},\n\t\t// Get tooltip label\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar label = me.chart.data.labels && index < me.chart.data.labels.length ? me.chart.data.labels[index] : '';\n\n\t\t\tif (typeof me.chart.data.datasets[datasetIndex].data[0] === 'object') {\n\t\t\t\tlabel = me.getRightValue(me.chart.data.datasets[datasetIndex].data[index]);\n\t\t\t}\n\n\t\t\t// Format nicely\n\t\t\tif (me.options.time.tooltipFormat) {\n\t\t\t\tlabel = me.parseTime(label).format(me.options.time.tooltipFormat);\n\t\t\t}\n\n\t\t\treturn label;\n\t\t},\n\t\t// Function to format an individual tick mark\n\t\ttickFormatFunction: function(tick, index, ticks) {\n\t\t\tvar formattedTick = tick.format(this.displayFormat);\n\t\t\tvar tickOpts = this.options.ticks;\n\t\t\tvar callback = helpers.getValueOrDefault(tickOpts.callback, tickOpts.userCallback);\n\n\t\t\tif (callback) {\n\t\t\t\treturn callback(formattedTick, index, ticks);\n\t\t\t}\n\t\t\treturn formattedTick;\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\t\t\tme.tickMoments = me.ticks;\n\t\t\tme.ticks = me.ticks.map(me.tickFormatFunction, me);\n\t\t},\n\t\tgetPixelForValue: function(value, index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar offset = null;\n\t\t\tif (index !== undefined && datasetIndex !== undefined) {\n\t\t\t\toffset = me.getLabelDiff(datasetIndex, index);\n\t\t\t}\n\n\t\t\tif (offset === null) {\n\t\t\t\tif (!value || !value.isValid) {\n\t\t\t\t\t// not already a moment object\n\t\t\t\t\tvalue = me.parseTime(me.getRightValue(value));\n\t\t\t\t}\n\t\t\t\tif (value && value.isValid && value.isValid()) {\n\t\t\t\t\toffset = value.diff(me.firstTick, me.tickUnit, true);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (offset !== null) {\n\t\t\t\tvar decimal = offset !== 0 ? offset / me.scaleSizeInUnits : offset;\n\n\t\t\t\tif (me.isHorizontal()) {\n\t\t\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\t\t\tvar valueOffset = (innerWidth * decimal) + me.paddingLeft;\n\n\t\t\t\t\treturn me.left + Math.round(valueOffset);\n\t\t\t\t}\n\t\t\t\tvar innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n\t\t\t\tvar heightOffset = (innerHeight * decimal) + me.paddingTop;\n\n\t\t\t\treturn me.top + Math.round(heightOffset);\n\t\t\t}\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.tickMoments[index], null, null);\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar innerDimension = me.isHorizontal() ? me.width - (me.paddingLeft + me.paddingRight) : me.height - (me.paddingTop + me.paddingBottom);\n\t\t\tvar offset = (pixel - (me.isHorizontal() ? me.left + me.paddingLeft : me.top + me.paddingTop)) / innerDimension;\n\t\t\toffset *= me.scaleSizeInUnits;\n\t\t\treturn me.firstTick.clone().add(moment.duration(offset, me.tickUnit).asSeconds(), 'seconds');\n\t\t},\n\t\tparseTime: function(label) {\n\t\t\tvar me = this;\n\t\t\tif (typeof me.options.time.parser === 'string') {\n\t\t\t\treturn moment(label, me.options.time.parser);\n\t\t\t}\n\t\t\tif (typeof me.options.time.parser === 'function') {\n\t\t\t\treturn me.options.time.parser(label);\n\t\t\t}\n\t\t\t// Date objects\n\t\t\tif (typeof label.getMonth === 'function' || typeof label === 'number') {\n\t\t\t\treturn moment(label);\n\t\t\t}\n\t\t\t// Moment support\n\t\t\tif (label.isValid && label.isValid()) {\n\t\t\t\treturn label;\n\t\t\t}\n\t\t\t// Custom parsing (return an instance of moment)\n\t\t\tif (typeof me.options.time.format !== 'string' && me.options.time.format.call) {\n\t\t\t\tconsole.warn('options.time.format is deprecated and replaced by options.time.parser. See http://nnnick.github.io/Chart.js/docs-v2/#scales-time-scale');\n\t\t\t\treturn me.options.time.format(label);\n\t\t\t}\n\t\t\t// Moment format parsing\n\t\t\treturn moment(label, me.options.time.format);\n\t\t}\n\t});\n\tChart.scaleService.registerScaleType('time', TimeScale, defaultConfig);\n\n};\n\n},{\"1\":1}]},{},[7])(7)\n});","var objectAssign = require('object-assign');\n\nvar competitors_meta = {\n  \"imagemagick-6.8\":      {\"color\": [230, 100, 70], \"title\": \"ImageMagick 6.8.9-9\"},\n  \"imagemagick-6.9\":      {\"color\": [230, 100, 70], \"title\": \"ImageMagick 6.9.7-4\"},\n  \"opencv-3.1\":           {\"color\": [240, 100, 60], \"title\": \"OpenCV 3.1.0\"},\n  \"opencv-3.3\":           {\"color\": [240, 100, 60], \"title\": \"OpenCV 3.3.0\"},\n  \"opencv-4.1\":           {\"color\": [240, 100, 60], \"title\": \"OpenCV 4.1.2\"},\n  \"skia-53\":              {\"color\": [250, 100, 50], \"title\": \"Skia 53 SSE2\"},\n  \"ipp-2017\":             {\"color\": [250, 100, 30], \"title\": \"IPP 2017 AVX2\"},\n  \"vips-8.2\":             {\"color\": [250, 100, 30], \"title\": \"VIPS 8.2\"},\n  \"vips-8.5\":             {\"color\": [250, 100, 30], \"title\": \"VIPS 8.5\"},\n  \"vips-8.9\":             {\"color\": [250, 100, 30], \"title\": \"VIPS 8.9\"},\n\n  \"pillow-2.0\":           {\"color\": [10, 90, 50], \"title\": \"PIL & Pillow 2.0 to 2.6\"},\n  \n  \"pillow-2.7\":           {\"color\": [340, 90, 43], \"title\": \"Pillow 2.7\"},\n  \"pillow-simd-3.2-sse4\": {\"color\": [340, 90, 75], \"title\": \"Pillow SIMD 3.2.0 SSE4\"},\n  \"pillow-simd-3.2-avx2\": {\"color\": [340, 90, 60], \"title\": \"Pillow SIMD 3.2.0 AVX2\"},\n  \n  \"pillow-3.3\":           {\"color\": [190, 90, 43], \"title\": \"Pillow 3.3\"},\n  \"pillow-simd-3.3-sse4\": {\"color\": [190, 90, 75], \"title\": \"Pillow SIMD 3.3.0 SSE4\"},\n  \"pillow-simd-3.3-avx2\": {\"color\": [190, 90, 60], \"title\": \"Pillow SIMD 3.3.0 AVX2\"},\n\n  \"pillow-3.4\":           {\"color\": [34, 90, 43], \"title\": \"Pillow 3.4.2\"},\n  \"pillow-simd-3.4-sse4\": {\"color\": [34, 90, 75], \"title\": \"Pillow SIMD 3.4.0 SSE4\"},\n  \"pillow-simd-3.4-avx2\": {\"color\": [34, 90, 60], \"title\": \"Pillow SIMD 3.4.0 AVX2\"},\n\n  \"pillow-4.3\":           {\"color\": [210, 90, 43], \"title\": \"Pillow 4.3.0\"},\n  \"pillow-simd-4.3-sse4\": {\"color\": [210, 90, 75], \"title\": \"Pillow SIMD 4.3.0 SSE4\"},\n  \"pillow-simd-4.3-avx2\": {\"color\": [210, 90, 60], \"title\": \"Pillow SIMD 4.3.0 AVX2\"},\n\n  \"pillow-7.0\":           {\"color\": [34, 90, 43], \"title\": \"Pillow 7.0.0\"},\n  \"pillow-simd-7.0-sse4\": {\"color\": [34, 90, 75], \"title\": \"Pillow SIMD 7.0.0 SSE4\"},\n  \"pillow-simd-7.0-avx2\": {\"color\": [34, 90, 60], \"title\": \"Pillow SIMD 7.0.0 AVX2\"},\n};\n\nvar competitions_meta = {\n  \"resample-4k-rgb\" : {\n    \"topic\": \"resampling\",\n    \"title\": \"Resize 2560x1600 RGB image\",\n    \"preposition\": \" to\",\n    \"source\": {\"size\": [2560, 1600]},\n    \"columns\": [\n      {\"name\": \"resolution\", \"title\": \"Destination resolution\"},\n      {\n        \"name\": \"filter\",\n        \"title\": \"Convolution filter\",\n        \"map\": {\n          \"bil\": \"Bilinear\",\n          \"bic\": \"Bicubic\",\n          \"lzs\": \"Lanczos\"\n        }\n      },\n      {\"name\": \"result\", \"units\": \"s\"}\n    ],\n  },\n  \"image-io-4k-rgb\": {\n    \"title\": \"Input/Output 2560×1600 RGB image\",\n    \"preposition\": \".\",\n    \"source\": {\"size\": [2560, 1600]},\n    \"columns\": [\n      {\"name\": \"operation\", \"title\": \"Operation\"},\n      {\"name\": \"result\", \"units\": \"s\"}\n    ],\n  },\n  \"blur-4k-rgb\": {\n    \"topic\": \"blur\",\n    \"title\": \"Blur 2560×1600 RGB image\",\n    \"preposition\": \",\",\n    \"source\": {\"size\": [2560, 1600]},\n    \"columns\": [\n      {\"name\": \"radius\", \"title\": \"Blur radius\"},\n      {\"name\": \"result\", \"units\": \"s\"}\n    ],\n  },\n  \"filter-4k-rgb\": {\n    \"title\": \"Kernel filter 2560×1600 RGB image\",\n    \"preposition\": \".\",\n    \"source\": {\"size\": [2560, 1600]},\n    \"columns\": [\n        {\"name\": \"kernel\", \"title\": \"Kernel\"},\n        {\"name\": \"result\",\"units\": \"s\"}\n    ],\n  },\n  \"transposition-4k-rgb\": {\n    \"topic\": \"transposition\",\n    \"title\": \"Transpose 2560×1600 RGB image\",\n    \"preposition\": \".\",\n    \"source\": {\"size\": [2560, 1600]},\n    \"columns\": [\n      {\"name\": \"operation\", \"title\": \"Operation\"},\n      {\"name\": \"result\", \"units\": \"s\"}\n    ],\n  },\n  \"conversion-4k-rgb\": {\n    \"topic\": \"conversion\",\n    \"title\": \"Color conversion 2560×1600 image\",\n    \"preposition\": \".\",\n    \"source\": {\"size\": [2560, 1600]},\n    \"columns\": [\n      {\"name\": \"modes\", \"title\": \"Modes\"},\n      {\"name\": \"result\", \"units\": \"s\"}\n    ],\n  },\n  \"composition-4k-rgb\": {\n    \"topic\": \"compositing\",\n    \"title\": \"Composition two 2560×1600 RGBA images\",\n    \"preposition\": \".\",\n    \"source\": {\"size\": [2560, 1600]},\n    \"columns\": [\n      {\"name\": \"radius\", \"title\": \"Blur radius\"},\n      {\"name\": \"result\", \"units\": \"s\"}\n    ],\n  },\n  \"3dlut-4k-rgb\": {\n    \"title\": \"3D Color LUT 2560×1600 RGB image\",\n    \"preposition\": \".\",\n    \"source\": {\"size\": [2560, 1600]},\n    \"columns\": [\n      {\"name\": \"params\", \"title\": \"Table size\"},\n      {\"name\": \"result\", \"units\": \"s\"}\n    ],\n  },\n  \"full-cycle-4k-rgb\": {\n    \"title\": \"Full opeations cycle, 2560×1600 RGB\",\n    \"preposition\": \".\",\n    \"source\": {\"size\": [2560, 1600]},\n    \"columns\": [\n      {\"name\": \"operation\", \"title\": \"Operation\"},\n      {\"name\": \"result\", \"units\": \"s\"}\n    ],\n  },\n};\n\n\nfunction fillSystemWithMeta(system) {\n  var i, j;\n  system = objectAssign({}, system);\n\n  for (j = 0; j < system.competitions.length; j++) {\n    var competition = system.competitions[j];\n    system.competitions[j] = competition = objectAssign(\n      {}, competitions_meta[competition.name], competition);\n\n    for (i = 0; i < competition.competitors.length; i++) {\n      var competitor = competition.competitors[i];\n      competition.competitors[i] = competitor = objectAssign(\n        {}, competitors_meta[competitor.name], competitor);\n    }\n  }\n  return system;\n}\n\nmodule.exports = {\n  systems: [\n    fillSystemWithMeta(require(\"./i5-4430.json\")),\n    fillSystemWithMeta(require(\"./macbook.2019.json\")),\n    fillSystemWithMeta(require(\"./c5.large.json\")),\n    fillSystemWithMeta(require(\"./m5a.large.json\")),\n  ],\n};\n"],"sourceRoot":""}